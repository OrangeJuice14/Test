//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 12:14:05 ngay 06/04/2019
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="NienDoTaiChinh")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NienDoTaiChinh : ERP_Core.BaseEntityObject//EntityObject
    {
    	static NienDoTaiChinh()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public NienDoTaiChinh()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new NienDoTaiChinh object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static NienDoTaiChinh CreateNienDoTaiChinh(System.Guid oid)
        {
            NienDoTaiChinh nienDoTaiChinh = new NienDoTaiChinh();
            nienDoTaiChinh.Oid = oid;
            return nienDoTaiChinh;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CongTy
        {
            get
            {
                return _congTy;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _congTy;
    			bool stopChanging = false;
                On_CongTy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CongTy");
    			if(!stopChanging)
    			{
    				_congTy = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CongTy");
    				On_CongTy_Changed(oldValue, _congTy);//\\
    			}
            }
        }
    	public static String CongTy_PropertyName { get { return "CongTy"; } }
        private Nullable<System.Guid> _congTy;
        partial void On_CongTy_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CongTy_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenNienDo
        {
            get
            {
                return _tenNienDo;
            }
            set
            {
    			string oldValue =  _tenNienDo;
    			bool stopChanging = false;
                On_TenNienDo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenNienDo");
    			if(!stopChanging)
    			{
    				_tenNienDo = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenNienDo");
    				On_TenNienDo_Changed(oldValue, _tenNienDo);//\\
    			}
            }
        }
    	public static String TenNienDo_PropertyName { get { return "TenNienDo"; } }
        private string _tenNienDo;
        partial void On_TenNienDo_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenNienDo_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> TuNgay
        {
            get
            {
                return _tuNgay;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _tuNgay;
    			bool stopChanging = false;
                On_TuNgay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TuNgay");
    			if(!stopChanging)
    			{
    				_tuNgay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TuNgay");
    				On_TuNgay_Changed(oldValue, _tuNgay);//\\
    			}
            }
        }
    	public static String TuNgay_PropertyName { get { return "TuNgay"; } }
        private Nullable<System.DateTime> _tuNgay;
        partial void On_TuNgay_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_TuNgay_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DenNgay
        {
            get
            {
                return _denNgay;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _denNgay;
    			bool stopChanging = false;
                On_DenNgay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DenNgay");
    			if(!stopChanging)
    			{
    				_denNgay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DenNgay");
    				On_DenNgay_Changed(oldValue, _denNgay);//\\
    			}
            }
        }
    	public static String DenNgay_PropertyName { get { return "DenNgay"; } }
        private Nullable<System.DateTime> _denNgay;
        partial void On_DenNgay_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_DenNgay_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> SoThang
        {
            get
            {
                return _soThang;
            }
            set
            {
    			Nullable<decimal> oldValue =  _soThang;
    			bool stopChanging = false;
                On_SoThang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoThang");
    			if(!stopChanging)
    			{
    				_soThang = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoThang");
    				On_SoThang_Changed(oldValue, _soThang);//\\
    			}
            }
        }
    	public static String SoThang_PropertyName { get { return "SoThang"; } }
        private Nullable<decimal> _soThang;
        partial void On_SoThang_Changing(Nullable<decimal> currentValue, ref Nullable<decimal> newValue, ref bool stopChanging);
        partial void On_SoThang_Changed(Nullable<decimal> oldValue, Nullable<decimal> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> BatDauHe
        {
            get
            {
                return _batDauHe;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _batDauHe;
    			bool stopChanging = false;
                On_BatDauHe_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BatDauHe");
    			if(!stopChanging)
    			{
    				_batDauHe = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BatDauHe");
    				On_BatDauHe_Changed(oldValue, _batDauHe);//\\
    			}
            }
        }
    	public static String BatDauHe_PropertyName { get { return "BatDauHe"; } }
        private Nullable<System.DateTime> _batDauHe;
        partial void On_BatDauHe_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_BatDauHe_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> KetThucHe
        {
            get
            {
                return _ketThucHe;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ketThucHe;
    			bool stopChanging = false;
                On_KetThucHe_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("KetThucHe");
    			if(!stopChanging)
    			{
    				_ketThucHe = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("KetThucHe");
    				On_KetThucHe_Changed(oldValue, _ketThucHe);//\\
    			}
            }
        }
    	public static String KetThucHe_PropertyName { get { return "KetThucHe"; } }
        private Nullable<System.DateTime> _ketThucHe;
        partial void On_KetThucHe_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_KetThucHe_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> SoNgayNghiHe
        {
            get
            {
                return _soNgayNghiHe;
            }
            set
            {
    			Nullable<decimal> oldValue =  _soNgayNghiHe;
    			bool stopChanging = false;
                On_SoNgayNghiHe_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoNgayNghiHe");
    			if(!stopChanging)
    			{
    				_soNgayNghiHe = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoNgayNghiHe");
    				On_SoNgayNghiHe_Changed(oldValue, _soNgayNghiHe);//\\
    			}
            }
        }
    	public static String SoNgayNghiHe_PropertyName { get { return "SoNgayNghiHe"; } }
        private Nullable<decimal> _soNgayNghiHe;
        partial void On_SoNgayNghiHe_Changing(Nullable<decimal> currentValue, ref Nullable<decimal> newValue, ref bool stopChanging);
        partial void On_SoNgayNghiHe_Changed(Nullable<decimal> oldValue, Nullable<decimal> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_QuanLyPhepHe_NienDoTaiChinh", "CC_QuanLyPhepHe")]
        public EntityCollection<CC_QuanLyPhepHe> CC_QuanLyPhepHe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_QuanLyPhepHe>("ERPModel.FK_CC_QuanLyPhepHe_NienDoTaiChinh", "CC_QuanLyPhepHe");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_QuanLyPhepHe_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_QuanLyPhepHe>("ERPModel.FK_CC_QuanLyPhepHe_NienDoTaiChinh", "CC_QuanLyPhepHe", value);
    					On_CC_QuanLyPhepHe_Changed(this.CC_QuanLyPhepHe);//\\//
    				}
    			}
            }
        }
    	public static String CC_QuanLyPhepHe_EntityCollectionPropertyName { get { return "CC_QuanLyPhepHe"; } }
    	partial void On_CC_QuanLyPhepHe_Changing(ref EntityCollection<CC_QuanLyPhepHe> newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyPhepHe_Changed(EntityCollection<CC_QuanLyPhepHe> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NienDoTaiChinh_CongTy", "CongTy")]
        public CongTy CongTy1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NienDoTaiChinh_CongTy", "CongTy").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CongTy1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NienDoTaiChinh_CongTy", "CongTy").Value = value;
    				On_CongTy1_Changed(this.CongTy1);//\\//
    			}
    	    }
        }
    	public static String CongTy1_ReferencePropertyName { get { return "CongTy1"; } }
    	partial void On_CongTy1_Changing(ref CongTy newValue, ref bool stopChanging);
    	partial void On_CongTy1_Changed(CongTy currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CongTy> CongTy1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NienDoTaiChinh_CongTy", "CongTy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CongTy>("ERPModel.FK_NienDoTaiChinh_CongTy", "CongTy", value);
                }
            }
        }

        #endregion

    }
}
