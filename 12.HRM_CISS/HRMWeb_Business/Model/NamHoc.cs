//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 12:14:05 ngay 06/04/2019
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="NamHoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NamHoc : ERP_Core.BaseEntityObject//EntityObject
    {
    	static NamHoc()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public NamHoc()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new NamHoc object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static NamHoc CreateNamHoc(System.Guid oid)
        {
            NamHoc namHoc = new NamHoc();
            namHoc.Oid = oid;
            return namHoc;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayBatDau
        {
            get
            {
                return _ngayBatDau;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayBatDau;
    			bool stopChanging = false;
                On_NgayBatDau_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayBatDau");
    			if(!stopChanging)
    			{
    				_ngayBatDau = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayBatDau");
    				On_NgayBatDau_Changed(oldValue, _ngayBatDau);//\\
    			}
            }
        }
    	public static String NgayBatDau_PropertyName { get { return "NgayBatDau"; } }
        private Nullable<System.DateTime> _ngayBatDau;
        partial void On_NgayBatDau_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayBatDau_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayKetThuc
        {
            get
            {
                return _ngayKetThuc;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayKetThuc;
    			bool stopChanging = false;
                On_NgayKetThuc_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayKetThuc");
    			if(!stopChanging)
    			{
    				_ngayKetThuc = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayKetThuc");
    				On_NgayKetThuc_Changed(oldValue, _ngayKetThuc);//\\
    			}
            }
        }
    	public static String NgayKetThuc_PropertyName { get { return "NgayKetThuc"; } }
        private Nullable<System.DateTime> _ngayKetThuc;
        partial void On_NgayKetThuc_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayKetThuc_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayVaoHoc
        {
            get
            {
                return _ngayVaoHoc;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayVaoHoc;
    			bool stopChanging = false;
                On_NgayVaoHoc_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayVaoHoc");
    			if(!stopChanging)
    			{
    				_ngayVaoHoc = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayVaoHoc");
    				On_NgayVaoHoc_Changed(oldValue, _ngayVaoHoc);//\\
    			}
            }
        }
    	public static String NgayVaoHoc_PropertyName { get { return "NgayVaoHoc"; } }
        private Nullable<System.DateTime> _ngayVaoHoc;
        partial void On_NgayVaoHoc_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayVaoHoc_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayKetThucHoc
        {
            get
            {
                return _ngayKetThucHoc;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayKetThucHoc;
    			bool stopChanging = false;
                On_NgayKetThucHoc_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayKetThucHoc");
    			if(!stopChanging)
    			{
    				_ngayKetThucHoc = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayKetThucHoc");
    				On_NgayKetThucHoc_Changed(oldValue, _ngayKetThucHoc);//\\
    			}
            }
        }
    	public static String NgayKetThucHoc_PropertyName { get { return "NgayKetThucHoc"; } }
        private Nullable<System.DateTime> _ngayKetThucHoc;
        partial void On_NgayKetThucHoc_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayKetThucHoc_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayVaoHe
        {
            get
            {
                return _ngayVaoHe;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayVaoHe;
    			bool stopChanging = false;
                On_NgayVaoHe_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayVaoHe");
    			if(!stopChanging)
    			{
    				_ngayVaoHe = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayVaoHe");
    				On_NgayVaoHe_Changed(oldValue, _ngayVaoHe);//\\
    			}
            }
        }
    	public static String NgayVaoHe_PropertyName { get { return "NgayVaoHe"; } }
        private Nullable<System.DateTime> _ngayVaoHe;
        partial void On_NgayVaoHe_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayVaoHe_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayKetThucHe
        {
            get
            {
                return _ngayKetThucHe;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayKetThucHe;
    			bool stopChanging = false;
                On_NgayKetThucHe_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayKetThucHe");
    			if(!stopChanging)
    			{
    				_ngayKetThucHe = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayKetThucHe");
    				On_NgayKetThucHe_Changed(oldValue, _ngayKetThucHe);//\\
    			}
            }
        }
    	public static String NgayKetThucHe_PropertyName { get { return "NgayKetThucHe"; } }
        private Nullable<System.DateTime> _ngayKetThucHe;
        partial void On_NgayKetThucHe_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayKetThucHe_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> SoThangHoc
        {
            get
            {
                return _soThangHoc;
            }
            set
            {
    			Nullable<int> oldValue =  _soThangHoc;
    			bool stopChanging = false;
                On_SoThangHoc_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoThangHoc");
    			if(!stopChanging)
    			{
    				_soThangHoc = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoThangHoc");
    				On_SoThangHoc_Changed(oldValue, _soThangHoc);//\\
    			}
            }
        }
    	public static String SoThangHoc_PropertyName { get { return "SoThangHoc"; } }
        private Nullable<int> _soThangHoc;
        partial void On_SoThangHoc_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_SoThangHoc_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenNamHoc
        {
            get
            {
                return _tenNamHoc;
            }
            set
            {
    			string oldValue =  _tenNamHoc;
    			bool stopChanging = false;
                On_TenNamHoc_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenNamHoc");
    			if(!stopChanging)
    			{
    				_tenNamHoc = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenNamHoc");
    				On_TenNamHoc_Changed(oldValue, _tenNamHoc);//\\
    			}
            }
        }
    	public static String TenNamHoc_PropertyName { get { return "TenNamHoc"; } }
        private string _tenNamHoc;
        partial void On_TenNamHoc_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenNamHoc_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_QuanLyNghiPhep_NamHoc", "CC_QuanLyNghiPhep")]
        public EntityCollection<CC_QuanLyNghiPhep> CC_QuanLyNghiPhep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_QuanLyNghiPhep>("ERPModel.FK_CC_QuanLyNghiPhep_NamHoc", "CC_QuanLyNghiPhep");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_QuanLyNghiPhep_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_QuanLyNghiPhep>("ERPModel.FK_CC_QuanLyNghiPhep_NamHoc", "CC_QuanLyNghiPhep", value);
    					On_CC_QuanLyNghiPhep_Changed(this.CC_QuanLyNghiPhep);//\\//
    				}
    			}
            }
        }
    	public static String CC_QuanLyNghiPhep_EntityCollectionPropertyName { get { return "CC_QuanLyNghiPhep"; } }
    	partial void On_CC_QuanLyNghiPhep_Changing(ref EntityCollection<CC_QuanLyNghiPhep> newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyNghiPhep_Changed(EntityCollection<CC_QuanLyNghiPhep> currentValue);

        #endregion

    }
}
