//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 12:14:05 ngay 06/04/2019
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="NhanVien")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NhanVien : ERP_Core.BaseEntityObject//EntityObject
    {
    	static NhanVien()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public NhanVien()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new NhanVien object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static NhanVien CreateNhanVien(System.Guid oid)
        {
            NhanVien nhanVien = new NhanVien();
            nhanVien.Oid = oid;
            return nhanVien;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> BoPhan
        {
            get
            {
                return _boPhan;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _boPhan;
    			bool stopChanging = false;
                On_BoPhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BoPhan");
    			if(!stopChanging)
    			{
    				_boPhan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BoPhan");
    				On_BoPhan_Changed(oldValue, _boPhan);//\\
    			}
            }
        }
    	public static String BoPhan_PropertyName { get { return "BoPhan"; } }
        private Nullable<System.Guid> _boPhan;
        partial void On_BoPhan_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_BoPhan_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayTuyenDung
        {
            get
            {
                return _ngayTuyenDung;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayTuyenDung;
    			bool stopChanging = false;
                On_NgayTuyenDung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayTuyenDung");
    			if(!stopChanging)
    			{
    				_ngayTuyenDung = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayTuyenDung");
    				On_NgayTuyenDung_Changed(oldValue, _ngayTuyenDung);//\\
    			}
            }
        }
    	public static String NgayTuyenDung_PropertyName { get { return "NgayTuyenDung"; } }
        private Nullable<System.DateTime> _ngayTuyenDung;
        partial void On_NgayTuyenDung_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayTuyenDung_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayVaoCongTy
        {
            get
            {
                return _ngayVaoCongTy;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayVaoCongTy;
    			bool stopChanging = false;
                On_NgayVaoCongTy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayVaoCongTy");
    			if(!stopChanging)
    			{
    				_ngayVaoCongTy = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayVaoCongTy");
    				On_NgayVaoCongTy_Changed(oldValue, _ngayVaoCongTy);//\\
    			}
            }
        }
    	public static String NgayVaoCongTy_PropertyName { get { return "NgayVaoCongTy"; } }
        private Nullable<System.DateTime> _ngayVaoCongTy;
        partial void On_NgayVaoCongTy_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayVaoCongTy_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ChucDanh
        {
            get
            {
                return _chucDanh;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _chucDanh;
    			bool stopChanging = false;
                On_ChucDanh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ChucDanh");
    			if(!stopChanging)
    			{
    				_chucDanh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ChucDanh");
    				On_ChucDanh_Changed(oldValue, _chucDanh);//\\
    			}
            }
        }
    	public static String ChucDanh_PropertyName { get { return "ChucDanh"; } }
        private Nullable<System.Guid> _chucDanh;
        partial void On_ChucDanh_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ChucDanh_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CongViecHienNay
        {
            get
            {
                return _congViecHienNay;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _congViecHienNay;
    			bool stopChanging = false;
                On_CongViecHienNay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CongViecHienNay");
    			if(!stopChanging)
    			{
    				_congViecHienNay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CongViecHienNay");
    				On_CongViecHienNay_Changed(oldValue, _congViecHienNay);//\\
    			}
            }
        }
    	public static String CongViecHienNay_PropertyName { get { return "CongViecHienNay"; } }
        private Nullable<System.Guid> _congViecHienNay;
        partial void On_CongViecHienNay_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CongViecHienNay_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> LoaiHopDong
        {
            get
            {
                return _loaiHopDong;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _loaiHopDong;
    			bool stopChanging = false;
                On_LoaiHopDong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LoaiHopDong");
    			if(!stopChanging)
    			{
    				_loaiHopDong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LoaiHopDong");
    				On_LoaiHopDong_Changed(oldValue, _loaiHopDong);//\\
    			}
            }
        }
    	public static String LoaiHopDong_PropertyName { get { return "LoaiHopDong"; } }
        private Nullable<System.Guid> _loaiHopDong;
        partial void On_LoaiHopDong_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_LoaiHopDong_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> HopDongHienTai
        {
            get
            {
                return _hopDongHienTai;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _hopDongHienTai;
    			bool stopChanging = false;
                On_HopDongHienTai_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HopDongHienTai");
    			if(!stopChanging)
    			{
    				_hopDongHienTai = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("HopDongHienTai");
    				On_HopDongHienTai_Changed(oldValue, _hopDongHienTai);//\\
    			}
            }
        }
    	public static String HopDongHienTai_PropertyName { get { return "HopDongHienTai"; } }
        private Nullable<System.Guid> _hopDongHienTai;
        partial void On_HopDongHienTai_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_HopDongHienTai_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DonViTuyenDung
        {
            get
            {
                return _donViTuyenDung;
            }
            set
            {
    			string oldValue =  _donViTuyenDung;
    			bool stopChanging = false;
                On_DonViTuyenDung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DonViTuyenDung");
    			if(!stopChanging)
    			{
    				_donViTuyenDung = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DonViTuyenDung");
    				On_DonViTuyenDung_Changed(oldValue, _donViTuyenDung);//\\
    			}
            }
        }
    	public static String DonViTuyenDung_PropertyName { get { return "DonViTuyenDung"; } }
        private string _donViTuyenDung;
        partial void On_DonViTuyenDung_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DonViTuyenDung_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CongViecTruocTuyenDung
        {
            get
            {
                return _congViecTruocTuyenDung;
            }
            set
            {
    			string oldValue =  _congViecTruocTuyenDung;
    			bool stopChanging = false;
                On_CongViecTruocTuyenDung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CongViecTruocTuyenDung");
    			if(!stopChanging)
    			{
    				_congViecTruocTuyenDung = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("CongViecTruocTuyenDung");
    				On_CongViecTruocTuyenDung_Changed(oldValue, _congViecTruocTuyenDung);//\\
    			}
            }
        }
    	public static String CongViecTruocTuyenDung_PropertyName { get { return "CongViecTruocTuyenDung"; } }
        private string _congViecTruocTuyenDung;
        partial void On_CongViecTruocTuyenDung_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_CongViecTruocTuyenDung_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NhanVienThongTinLuong
        {
            get
            {
                return _nhanVienThongTinLuong;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _nhanVienThongTinLuong;
    			bool stopChanging = false;
                On_NhanVienThongTinLuong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NhanVienThongTinLuong");
    			if(!stopChanging)
    			{
    				_nhanVienThongTinLuong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NhanVienThongTinLuong");
    				On_NhanVienThongTinLuong_Changed(oldValue, _nhanVienThongTinLuong);//\\
    			}
            }
        }
    	public static String NhanVienThongTinLuong_PropertyName { get { return "NhanVienThongTinLuong"; } }
        private Nullable<System.Guid> _nhanVienThongTinLuong;
        partial void On_NhanVienThongTinLuong_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NhanVienThongTinLuong_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NhanVienTrinhDo
        {
            get
            {
                return _nhanVienTrinhDo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _nhanVienTrinhDo;
    			bool stopChanging = false;
                On_NhanVienTrinhDo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NhanVienTrinhDo");
    			if(!stopChanging)
    			{
    				_nhanVienTrinhDo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NhanVienTrinhDo");
    				On_NhanVienTrinhDo_Changed(oldValue, _nhanVienTrinhDo);//\\
    			}
            }
        }
    	public static String NhanVienTrinhDo_PropertyName { get { return "NhanVienTrinhDo"; } }
        private Nullable<System.Guid> _nhanVienTrinhDo;
        partial void On_NhanVienTrinhDo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NhanVienTrinhDo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> TinhTrang
        {
            get
            {
                return _tinhTrang;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _tinhTrang;
    			bool stopChanging = false;
                On_TinhTrang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TinhTrang");
    			if(!stopChanging)
    			{
    				_tinhTrang = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TinhTrang");
    				On_TinhTrang_Changed(oldValue, _tinhTrang);//\\
    			}
            }
        }
    	public static String TinhTrang_PropertyName { get { return "TinhTrang"; } }
        private Nullable<System.Guid> _tinhTrang;
        partial void On_TinhTrang_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_TinhTrang_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string URLHinh
        {
            get
            {
                return _uRLHinh;
            }
            set
            {
    			string oldValue =  _uRLHinh;
    			bool stopChanging = false;
                On_URLHinh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("URLHinh");
    			if(!stopChanging)
    			{
    				_uRLHinh = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("URLHinh");
    				On_URLHinh_Changed(oldValue, _uRLHinh);//\\
    			}
            }
        }
    	public static String URLHinh_PropertyName { get { return "URLHinh"; } }
        private string _uRLHinh;
        partial void On_URLHinh_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_URLHinh_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CongTy
        {
            get
            {
                return _congTy;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _congTy;
    			bool stopChanging = false;
                On_CongTy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CongTy");
    			if(!stopChanging)
    			{
    				_congTy = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CongTy");
    				On_CongTy_Changed(oldValue, _congTy);//\\
    			}
            }
        }
    	public static String CongTy_PropertyName { get { return "CongTy"; } }
        private Nullable<System.Guid> _congTy;
        partial void On_CongTy_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CongTy_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayNghiViec
        {
            get
            {
                return _ngayNghiViec;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayNghiViec;
    			bool stopChanging = false;
                On_NgayNghiViec_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayNghiViec");
    			if(!stopChanging)
    			{
    				_ngayNghiViec = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayNghiViec");
    				On_NgayNghiViec_Changed(oldValue, _ngayNghiViec);//\\
    			}
            }
        }
    	public static String NgayNghiViec_PropertyName { get { return "NgayNghiViec"; } }
        private Nullable<System.DateTime> _ngayNghiViec;
        partial void On_NgayNghiViec_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayNghiViec_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayNghiThaiSan
        {
            get
            {
                return _ngayNghiThaiSan;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayNghiThaiSan;
    			bool stopChanging = false;
                On_NgayNghiThaiSan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayNghiThaiSan");
    			if(!stopChanging)
    			{
    				_ngayNghiThaiSan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayNghiThaiSan");
    				On_NgayNghiThaiSan_Changed(oldValue, _ngayNghiThaiSan);//\\
    			}
            }
        }
    	public static String NgayNghiThaiSan_PropertyName { get { return "NgayNghiThaiSan"; } }
        private Nullable<System.DateTime> _ngayNghiThaiSan;
        partial void On_NgayNghiThaiSan_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayNghiThaiSan_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayHetHanNghiThaiSan
        {
            get
            {
                return _ngayHetHanNghiThaiSan;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayHetHanNghiThaiSan;
    			bool stopChanging = false;
                On_NgayHetHanNghiThaiSan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayHetHanNghiThaiSan");
    			if(!stopChanging)
    			{
    				_ngayHetHanNghiThaiSan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayHetHanNghiThaiSan");
    				On_NgayHetHanNghiThaiSan_Changed(oldValue, _ngayHetHanNghiThaiSan);//\\
    			}
            }
        }
    	public static String NgayHetHanNghiThaiSan_PropertyName { get { return "NgayHetHanNghiThaiSan"; } }
        private Nullable<System.DateTime> _ngayHetHanNghiThaiSan;
        partial void On_NgayHetHanNghiThaiSan_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayHetHanNghiThaiSan_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CongTyCha
        {
            get
            {
                return _congTyCha;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _congTyCha;
    			bool stopChanging = false;
                On_CongTyCha_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CongTyCha");
    			if(!stopChanging)
    			{
    				_congTyCha = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CongTyCha");
    				On_CongTyCha_Changed(oldValue, _congTyCha);//\\
    			}
            }
        }
    	public static String CongTyCha_PropertyName { get { return "CongTyCha"; } }
        private Nullable<System.Guid> _congTyCha;
        partial void On_CongTyCha_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CongTyCha_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_BoPhan", "BoPhan")]
        public BoPhan BoPhan1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhan", "BoPhan").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_BoPhan1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhan", "BoPhan").Value = value;
    				On_BoPhan1_Changed(this.BoPhan1);//\\//
    			}
    	    }
        }
    	public static String BoPhan1_ReferencePropertyName { get { return "BoPhan1"; } }
    	partial void On_BoPhan1_Changing(ref BoPhan newValue, ref bool stopChanging);
    	partial void On_BoPhan1_Changed(BoPhan currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoPhan> BoPhan1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhan", "BoPhan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhan", "BoPhan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_ChucVuKiemNhiem_NhanVien", "ChucVuKiemNhiem")]
        public EntityCollection<ChucVuKiemNhiem> ChucVuKiemNhiems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChucVuKiemNhiem>("ERPModel.FK_ChucVuKiemNhiem_NhanVien", "ChucVuKiemNhiem");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_ChucVuKiemNhiems_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChucVuKiemNhiem>("ERPModel.FK_ChucVuKiemNhiem_NhanVien", "ChucVuKiemNhiem", value);
    					On_ChucVuKiemNhiems_Changed(this.ChucVuKiemNhiems);//\\//
    				}
    			}
            }
        }
    	public static String ChucVuKiemNhiems_EntityCollectionPropertyName { get { return "ChucVuKiemNhiems"; } }
    	partial void On_ChucVuKiemNhiems_Changing(ref EntityCollection<ChucVuKiemNhiem> newValue, ref bool stopChanging);
    	partial void On_ChucVuKiemNhiems_Changed(EntityCollection<ChucVuKiemNhiem> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_CongTy", "CongTy")]
        public CongTy CongTy1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NhanVien_CongTy", "CongTy").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CongTy1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NhanVien_CongTy", "CongTy").Value = value;
    				On_CongTy1_Changed(this.CongTy1);//\\//
    			}
    	    }
        }
    	public static String CongTy1_ReferencePropertyName { get { return "CongTy1"; } }
    	partial void On_CongTy1_Changing(ref CongTy newValue, ref bool stopChanging);
    	partial void On_CongTy1_Changed(CongTy currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CongTy> CongTy1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NhanVien_CongTy", "CongTy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CongTy>("ERPModel.FK_NhanVien_CongTy", "CongTy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_Oid", "HoSo")]
        public HoSo HoSo
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_NhanVien_Oid", "HoSo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_HoSo_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_NhanVien_Oid", "HoSo").Value = value;
    				On_HoSo_Changed(this.HoSo);//\\//
    			}
    	    }
        }
    	public static String HoSo_ReferencePropertyName { get { return "HoSo"; } }
    	partial void On_HoSo_Changing(ref HoSo newValue, ref bool stopChanging);
    	partial void On_HoSo_Changed(HoSo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HoSo> HoSoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_NhanVien_Oid", "HoSo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HoSo>("ERPModel.FK_NhanVien_Oid", "HoSo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong")]
        public NhanVienThongTinLuong NhanVienThongTinLuong1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienThongTinLuong>("ERPModel.FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_NhanVienThongTinLuong1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienThongTinLuong>("ERPModel.FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong").Value = value;
    				On_NhanVienThongTinLuong1_Changed(this.NhanVienThongTinLuong1);//\\//
    			}
    	    }
        }
    	public static String NhanVienThongTinLuong1_ReferencePropertyName { get { return "NhanVienThongTinLuong1"; } }
    	partial void On_NhanVienThongTinLuong1_Changing(ref NhanVienThongTinLuong newValue, ref bool stopChanging);
    	partial void On_NhanVienThongTinLuong1_Changed(NhanVienThongTinLuong currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NhanVienThongTinLuong> NhanVienThongTinLuong1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienThongTinLuong>("ERPModel.FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NhanVienThongTinLuong>("ERPModel.FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_NhanVienTrinhDo", "NhanVienTrinhDo")]
        public NhanVienTrinhDo NhanVienTrinhDo1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienTrinhDo>("ERPModel.FK_NhanVien_NhanVienTrinhDo", "NhanVienTrinhDo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_NhanVienTrinhDo1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienTrinhDo>("ERPModel.FK_NhanVien_NhanVienTrinhDo", "NhanVienTrinhDo").Value = value;
    				On_NhanVienTrinhDo1_Changed(this.NhanVienTrinhDo1);//\\//
    			}
    	    }
        }
    	public static String NhanVienTrinhDo1_ReferencePropertyName { get { return "NhanVienTrinhDo1"; } }
    	partial void On_NhanVienTrinhDo1_Changing(ref NhanVienTrinhDo newValue, ref bool stopChanging);
    	partial void On_NhanVienTrinhDo1_Changed(NhanVienTrinhDo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NhanVienTrinhDo> NhanVienTrinhDo1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienTrinhDo>("ERPModel.FK_NhanVien_NhanVienTrinhDo", "NhanVienTrinhDo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NhanVienTrinhDo>("ERPModel.FK_NhanVien_NhanVienTrinhDo", "NhanVienTrinhDo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_TinhTrang", "TinhTrang")]
        public TinhTrang TinhTrang1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhTrang>("ERPModel.FK_NhanVien_TinhTrang", "TinhTrang").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_TinhTrang1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhTrang>("ERPModel.FK_NhanVien_TinhTrang", "TinhTrang").Value = value;
    				On_TinhTrang1_Changed(this.TinhTrang1);//\\//
    			}
    	    }
        }
    	public static String TinhTrang1_ReferencePropertyName { get { return "TinhTrang1"; } }
    	partial void On_TinhTrang1_Changing(ref TinhTrang newValue, ref bool stopChanging);
    	partial void On_TinhTrang1_Changed(TinhTrang currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TinhTrang> TinhTrang1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhTrang>("ERPModel.FK_NhanVien_TinhTrang", "TinhTrang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TinhTrang>("ERPModel.FK_NhanVien_TinhTrang", "TinhTrang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_ThongTinNhanVien_Oid", "ThongTinNhanVien")]
        public ThongTinNhanVien ThongTinNhanVien
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_ThongTinNhanVien_Oid", "ThongTinNhanVien").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_ThongTinNhanVien_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_ThongTinNhanVien_Oid", "ThongTinNhanVien").Value = value;
    				On_ThongTinNhanVien_Changed(this.ThongTinNhanVien);//\\//
    			}
    	    }
        }
    	public static String ThongTinNhanVien_ReferencePropertyName { get { return "ThongTinNhanVien"; } }
    	partial void On_ThongTinNhanVien_Changing(ref ThongTinNhanVien newValue, ref bool stopChanging);
    	partial void On_ThongTinNhanVien_Changed(ThongTinNhanVien currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThongTinNhanVien> ThongTinNhanVienReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_ThongTinNhanVien_Oid", "ThongTinNhanVien");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ThongTinNhanVien>("ERPModel.FK_ThongTinNhanVien_Oid", "ThongTinNhanVien", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_CongTyCha", "CongTy")]
        public CongTy CongTy2
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NhanVien_CongTyCha", "CongTy").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CongTy2_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NhanVien_CongTyCha", "CongTy").Value = value;
    				On_CongTy2_Changed(this.CongTy2);//\\//
    			}
    	    }
        }
    	public static String CongTy2_ReferencePropertyName { get { return "CongTy2"; } }
    	partial void On_CongTy2_Changing(ref CongTy newValue, ref bool stopChanging);
    	partial void On_CongTy2_Changed(CongTy currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CongTy> CongTy2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CongTy>("ERPModel.FK_NhanVien_CongTyCha", "CongTy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CongTy>("ERPModel.FK_NhanVien_CongTyCha", "CongTy", value);
                }
            }
        }

        #endregion

    }
}
