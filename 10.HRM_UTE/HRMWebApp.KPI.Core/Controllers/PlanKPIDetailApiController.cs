using System;
using System.Collections.Generic;
using System.Linq;
using HRMWebApp.KPI.DB.Entities;
using HRMWebApp.KPI.Core.DTO;
using HRMWebApp.KPI.DB;
using NHibernate.Linq;
using HRMWebApp.Helpers;
using System.Web.Http;
using HRMWebApp.KPI.Core.DTO.PlanMakingDTOs;
using System.Web;
using HRMWebApp.KPI.Core.Security;
using Microsoft.AspNet.Identity;
using HRMWebApp.KPI.Core.Helpers;
using HRMWeb_Business.BusinessServiceFactory;
using System.Data.Entity;

namespace HRMWebApp.KPI.Core.Controllers
{
    public class PlanKPIDetailApiController : ApiController
    {

        [Authorize]
        [Route("")]
        public string Put(PlanKPIMakingDetailDTO obj)
        {
            string result = "0";
            PlanKPIDetail pdetail = new PlanKPIDetail();
            //1: Thành công
            //2: Thất bại
            //3: Đơn vị chủ trì trùng với đơn vị phối hợp

            //Xóa các kế hoạch chi tiết không tồn tại
            //try
            //{
            SessionManager.DoWork(session =>
            {

                Staff staff = session.Query<Staff>().SingleOrDefault(s => s.Id == obj.StaffId);
                ApplicationUser applicationUser = AuthenticationHelper.GetUserById(new Guid(HttpContext.Current.User.Identity.GetUserId()), HttpContext.Current.User.Identity.Name);
                PlanStaff planStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Id == obj.PlanStaffId);
                if (planStaff == null)
                {
                    planStaff = new PlanStaff();
                    planStaff.Id = Guid.NewGuid();
                    planStaff.PlanKPI = new PlanKPI() { Id = obj.PlanId };
                    planStaff.IsLocked = false;
                    planStaff.ModifiedTime = DateTime.Now;
                    planStaff.Staff = staff;
                    session.Save(planStaff);
                }
                else
                {
                    planStaff.ModifiedTime = DateTime.Now;
                    session.Update(planStaff);
                }
                TargetGroupDetail tg = session.Query<TargetGroupDetail>().Where(t => t.Id == obj.TargetGroupDetail.Id).SingleOrDefault();
                int agentObjectTypeId = -1;


                if (staff != null)
                {

                    agentObjectTypeId = obj.AgentObjectTypeId;
                }
                else
                    agentObjectTypeId = 3;

                switch (agentObjectTypeId)
                {
                    case 1:
                        {
                            if (obj.Id == Guid.Empty)
                            {
                                if (tg.TargetGroupDetailType.Id != 4 && tg.TargetGroupDetailType.Id != 5)
                                {
                                    pdetail = ControllerHelpers.ParsePlanKPIDetail(obj, null, planStaff, new TargetGroupPlanMakingDTO() { TargetGroupId = obj.TargetGroupDetail.Id }, true);
                                    if (pdetail.SubDepartments.Any(sd => sd.Id == pdetail.LeadDepartment.Id) == true)
                                    {
                                        result = "3";
                                    }
                                    //pdetail.MeasureUnit = new MeasureUnit() { Id = obj.MeasureUnitDTO.Id };
                                    if (result != "3")
                                    {
                                        session.Save(pdetail);
                                        result = pdetail.Id.ToString();
                                    }
                                }
                                else
                                {
                                    pdetail = ControllerHelpers.ParseProfessorPlanKPIDetail(obj, null, planStaff, new TargetGroupPlanMakingDTO() { TargetGroupId = obj.TargetGroupDetail.Id }, true, session);
                                    session.Save(pdetail);
                                    result = pdetail.Id.ToString();
                                }

                            }
                            else
                            {
                                PlanKPIDetail pld = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == obj.Id);
                                if (pld != null)
                                {
                                    if (tg.TargetGroupDetailType.Id != 4 && tg.TargetGroupDetailType.Id != 5)
                                    {
                                        pdetail = ControllerHelpers.ParsePlanKPIDetail(obj, pld, planStaff, new TargetGroupPlanMakingDTO() { TargetGroupId = obj.TargetGroupDetail.Id }, false);
                                        if (pdetail.SubDepartments.Any(sd => sd.Id == pdetail.LeadDepartment.Id) == true)
                                        {
                                            result = "3";
                                        }
                                        if (result != "3")
                                        {
                                            pdetail.IsLocked = false;
                                            session.Merge(pdetail);
                                            result = pld.Id.ToString();
                                        }
                                    }
                                    else
                                    {
                                        pdetail = ControllerHelpers.ParseProfessorPlanKPIDetail(obj, pld, planStaff, new TargetGroupPlanMakingDTO() { TargetGroupId = obj.TargetGroupDetail.Id }, false, session);
                                        pdetail.IsLocked = false;
                                        session.Merge(pdetail);
                                        result = pld.Id.ToString();
                                    }
                                }
                            }
                        }
                        break;
                    case 6:
                        {
                            if (obj.Id == Guid.Empty)
                            {
                                // nếu tự tạo thì tạo cho chính mình
                                pdetail = ControllerHelpers.ParseProfessorPlanKPIDetail(obj, null, planStaff, new TargetGroupPlanMakingDTO() { TargetGroupId = obj.TargetGroupDetail.Id }, true, session);
                                session.Save(pdetail);

                                ProfessorCriterion prof = session.Query<ProfessorCriterion>().Where(r => r.Id == obj.ProfessorCriterionId).SingleOrDefault();
                                // tạo planKPIDetail và planstaff cho danh sách giảng viên được chọn
                         
                               
                                result = pdetail.Id.ToString();
                            }
                            else
                            {
                                PlanKPIDetail pld = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == obj.Id);
                                if(pld != null)
                                {
                                    pdetail = ControllerHelpers.ParseProfessorPlanKPIDetail(obj, pld, planStaff, new TargetGroupPlanMakingDTO() { TargetGroupId = obj.TargetGroupDetail.Id }, false, session);
                                    pdetail.IsLocked = false;
                                    session.Merge(pdetail);


                                    result = pld.Id.ToString();
                                }
                            }
                         }
                        break;
                    default:
                        {
                            if (obj.Id == Guid.Empty)
                            {
                                pdetail = ControllerHelpers.ParsePlanKPIDetail(obj, null, planStaff, new TargetGroupPlanMakingDTO() { TargetGroupId = obj.TargetGroupDetail.Id }, true);
                                if (pdetail.LeadDepartment != null && pdetail.SubDepartments.Any(sd => sd.Id == pdetail.LeadDepartment.Id) == true)
                                {
                                    result = "3";
                                }
                                if (result != "3")
                                {
                                    session.Save(pdetail);
                                    result = pdetail.Id.ToString();
                                }
                            }
                            else
                            {
                                PlanKPIDetail pld = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == obj.Id);
                                if (pld != null)
                                {

                                    pdetail = ControllerHelpers.ParsePlanKPIDetail(obj, pld, planStaff, new TargetGroupPlanMakingDTO() { TargetGroupId = obj.TargetGroupDetail.Id }, false, session);
                                    if (pdetail.LeadDepartment != null && pdetail.SubDepartments.Any(sd => sd.Id == pdetail.LeadDepartment.Id) == true)
                                    {
                                        result = "3";
                                    }
                                    if (result != "3")
                                    {
                                        pdetail.IsLocked = false;
                                        session.Merge(pdetail);
                                        result = pld.Id.ToString();
                                    }
                                }
                            }
                        }
                        break;
                }
                //ControllerHelpers.UpdatePlanDetailDic(pdetail, 1, session);
            });
            //}
            //catch (Exception e)
            //{
            //    return "2";
            //}


            return result;
        }

        [Authorize]
        [Route("")]
        public void PutChuyenNhom(PlanKPIMakingDetailDTO obj)
        {
            SessionManager.DoWork(session =>
            {
                Staff staff = session.Query<Staff>().SingleOrDefault(s => s.Id == obj.StaffId);
                //Hàm lấy thông tin user
                ApplicationUser applicationUser = AuthenticationHelper.GetUserById(new Guid(HttpContext.Current.User.Identity.GetUserId()), HttpContext.Current.User.Identity.Name);
                Guid deptId = new Guid(applicationUser.DepartmentId != null ? applicationUser.DepartmentId : Guid.Empty.ToString());
                PlanStaff planStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Id == obj.PlanStaffId);

                if (planStaff == null)
                {
                    planStaff = new PlanStaff();
                    planStaff.Id = Guid.NewGuid();
                    planStaff.PlanKPI = new PlanKPI() { Id = obj.PlanId };
                    planStaff.IsLocked = false;
                    planStaff.ModifiedTime = DateTime.Now;
                    planStaff.Staff = staff;
                    session.Save(planStaff);
                }
                else
                {
                    planStaff.ModifiedTime = DateTime.Now;
                    session.Update(planStaff);
                }

                PlanKPIDetail pdn = new PlanKPIDetail();
                //Thêm vào các criterion mới
                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == obj.Id);
                pdn.Criterions = plDetail.Criterions;
                //Chuyển người chỉ đạo
                List<Criterion> leadStaffCriterions = pdn.Criterions.Where(c => c.Staff != null && c.Staff.Id == plDetail.StaffLeader.Id).ToList();
                if (leadStaffCriterions.Count <= 0 && obj.StaffLeader != null)
                {
                    Criterion criterion = new Criterion();
                    List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == obj.StaffLeader.Id).ToList();
                    Criterion existCri = criterions.SingleOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                    if (existCri == null)
                    {
                        criterion = ControllerHelpers.ParseCriterion(pdn, obj, obj.StaffLeader.Id, 1, false);
                        session.Save(criterion);

                    }
                    else
                    {
                        existCri.Name = obj.TargetDetail;
                        existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = obj.Id };
                        existCri.Staff = obj.StaffId != null ? new Staff() { Id = obj.StaffLeader.Id } : null;
                        existCri.MaxRecord = obj.MaxRecord;
                        session.Merge(existCri);
                    }
                }
                else
                {
                    foreach (Criterion cri in leadStaffCriterions)
                    {
                        cri.Name = obj.TargetDetail;
                        cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = obj.Id };
                        cri.Department = obj.LeadDepartment != null ? new Department() { Id = obj.LeadDepartment.Id } : null;
                        cri.MaxRecord = obj.MaxRecord;
                        session.Merge(cri);
                    }
                }


                //Chuyển đơn vị chỉ đạo
                List<Criterion> leadCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == plDetail.LeadDepartment.Id).ToList();
                if (leadCriterions.Count <= 0)
                {
                    Criterion criterion = new Criterion();
                    List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == obj.LeadDepartment.Id).ToList();
                    Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                    if (existCri == null)
                    {
                        criterion = ControllerHelpers.ParseCriterion(pdn, obj, obj.LeadDepartment.Id, 2, false);
                        session.Save(criterion);

                    }
                    else
                    {
                        existCri.Name = obj.TargetDetail;
                        existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = obj.Id };
                        existCri.Department = obj.LeadDepartment != null ? new Department() { Id = obj.LeadDepartment.Id } : null;
                        existCri.MaxRecord = obj.MaxRecord;
                        session.Merge(existCri);

                    }
                }
                else
                {
                    foreach (Criterion cri in leadCriterions)
                    {
                        cri.Name = obj.TargetDetail;
                        cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = obj.Id };
                        cri.Department = obj.LeadDepartment != null ? new Department() { Id = obj.LeadDepartment.Id } : null;
                        cri.MaxRecord = obj.MaxRecord;
                        session.Merge(cri);
                    }
                }

                //Cập nhật công việc đc phân công cho đơn vị
                plDetail.IsMoved = true;
                //  plDetail.CapMucTieu = obj.CapMucTieu;
                UpdateDepartment(plDetail, obj, session);
                session.Update(plDetail);

            });
        }

        [Authorize]
        [Route("")]
        public PlanDetailMakingDTO GetList(Guid planId, Guid agentObjectId, Guid NormalStaffId, Guid departmentId, int userRole, int isSupervisor)
        {
            Guid DepartmentId = Guid.Empty;
            PlanDetailMakingDTO result = new PlanDetailMakingDTO();

            try
            {
                //Tạo factory để exec stored 
                WebUser_Factory factory = WebUser_Factory.New();
                //Mặc định kế hoạch đã khóa (vô hiệu hóa nút khóa)
                result.IsDisable = true;

                //string logMessage = "";
                //MemoryCacher cacher = new MemoryCacher();
                //var watch = Stopwatch.StartNew();

                //***Dòng này Minh thêm mới ngày 10/06/2016 dùng để lấy thông tin chung từ store
                Dictionary<string, object> parentIdResult = new Dictionary<string, object>();
                Dictionary<Guid, Guid> planParentDetail = new Dictionary<Guid, Guid>();

                SessionManager.DoWorkVersion2(session =>
                {
                    session.Query<Method>().Cacheable().CacheMode(NHibernate.CacheMode.Normal);
                    session.Query<PlanKPIDetail>().Cacheable<PlanKPIDetail>().CacheMode(NHibernate.CacheMode.Normal);
                    if (isSupervisor == 1 || isSupervisor == 2 || AuthenticationHelper.IsAllowPlanMaking(new Guid(HttpContext.Current.User.Identity.GetUserId()), NormalStaffId != Guid.Empty ? NormalStaffId : new Guid(HttpContext.Current.User.Identity.GetUserId())))
                    {
                        //Preparing data
                        PlanKPI plan = session.Query<PlanKPI>().Where(p => p.Id == planId).FirstOrDefault();
                        Staff staff = ControllerHelpers.GetCurrentStaff(session);
                        //logMessage = "(PlanId: " + planId + " - planName: " + plan.Name + ") " + "(firstStaffId: " + staff.Id + " - firstStaffName: " + staff.StaffProfile.Name + ")";
                        IEnumerable<Criterion> temdepartmentPlanCriterions = new List<Criterion>();
                        //User đăng nhập
                        ApplicationUser applicationUser = AuthenticationHelper.GetUserById(new Guid(HttpContext.Current.User.Identity.GetUserId()), HttpContext.Current.User.Identity.Name);
                        List<PlanKPIDetail> newPlanDetails = new List<PlanKPIDetail>();

                        if (isSupervisor == 1 && NormalStaffId != Guid.Empty)
                        {
                            result.Supervisor = session.Query<Staff>().SingleOrDefault(s => s.Id == staff.Id).Map<StaffDTO>();
                            result.IsSupervisor = true;
                            staff = session.Query<Staff>().SingleOrDefault(s => s.Id == NormalStaffId);
                        }
                        if (isSupervisor == 2 && NormalStaffId != Guid.Empty)
                        {
                            result.Supervisor = session.Query<Staff>().SingleOrDefault(s => s.Id == staff.Id).Map<StaffDTO>();
                            result.IsSupervisor = true;
                            result.IsViewer = true;
                            staff = session.Query<Staff>().SingleOrDefault(s => s.Id == NormalStaffId);
                        }
                        //logMessage += "(normalStaffId: " + staff.Id + " - normalStaffName: " + staff.StaffProfile.Name + ")";


                        PlanKPI parentPlan = plan.ParentPlan != null ? plan.ParentPlan : null;
                        result.StartPlanTime = plan.StartTime;
                        result.EndPlanTime = plan.EndTime;
                        if (plan != null)
                        {
                            var Department = session.Query<Department>().SingleOrDefault(d => d.Id == departmentId);

                            //Lấy đối tượng đánh giá
                            AgentObject agentObject = session.Query<AgentObject>().Where(a => a.Id == agentObjectId).SingleOrDefault();

                            result.Id = plan.Id;
                            result.PlanTypeId = plan.PlanType.Id;
                            if (staff.Id != Guid.Empty) //User thường
                            {
                                //result.StaffDTO chỉ để hiện ra giao diện cho đúng không dùng để lấy dữ liệu
                                result.StaffDTO = new StaffDTO();
                                result.StaffDTO.Id = staff.Id;
                                result.StaffDTO.Name = staff.StaffProfile.Name;
                                if (Department != null)
                                {
                                    result.StaffDTO.Department = Department.Map<DepartmentDTO>();
                                    result.StaffDTO.DepartmentId = result.StaffDTO.Department.Id;
                                    //nếu là trưởng bộ môn hoặc trưởng ngành thì gán subject = departmentId truyền vào còn department = parentDepartment
                                    if (agentObject != null && agentObject.AgentObjectType != null && (agentObject.AgentObjectType.Id == 6 || agentObject.AgentObjectType.Id == 12))
                                    {
                                        result.StaffDTO.Subject = Department.Map<DepartmentDTO>();
                                        result.StaffDTO.Department = Department.ParentDepartment != null ? Department.ParentDepartment.Map<DepartmentDTO>() : Department.Map<DepartmentDTO>();
                                    }
                                    else
                                        result.StaffDTO.Subject = staff.StaffInfo.Subject != null ? staff.StaffInfo.Subject.Map<DepartmentDTO>() : null;
                                }
                                else
                                {
                                    result.StaffDTO.Department = staff.Department.Map<DepartmentDTO>();
                                    result.StaffDTO.DepartmentId = staff.Department.Id;
                                    result.StaffDTO.Subject = staff.StaffInfo.Subject != null ? staff.StaffInfo.Subject.Map<DepartmentDTO>() : null;
                                }
                                //result.StaffDTO.Subject = staff.StaffInfo.Subject != null ? staff.StaffInfo.Subject.Map<DepartmentDTO>() : null;
                                result.StaffDTO.Position = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.Map<PositionDTO>() : null;

                                if (staff.StaffInfo.WebUser != null)
                                    result.StaffDTO.UserName = staff.StaffInfo.WebUser.UserName;
                                else //người được xem chưa có tài khoản
                                {
                                    result.Id = new Guid("00000000-0000-0000-0000-000000000001");
                                    return;
                                }
                            }
                            else //User KPI
                            {
                                result.StaffDTO = new StaffDTO();
                                result.StaffDTO.Id = staff.Id;
                                result.StaffDTO.Department = staff.Department != null ? staff.Department.Map<DepartmentDTO>() : null;
                            }


                            //Lấy mã phòng ban
                            if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                            {
                                result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);
                                if (staff.StaffInfo.Subject != null)
                                    DepartmentId = staff.StaffInfo.Subject.Id;
                                else
                                    DepartmentId = staff.Department.Id;
                            }
                            else
                            {
                                result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                if (sposition != null)
                                    DepartmentId = sposition.Department.Id;
                            }


                            //Lấy được planStaff nếu có, không thì tạo mới
                            PlanStaff planStaff = null;
                            IEnumerable<TargetGroupDetail> targets = session.Query<TargetGroupDetail>().Where(t => t.AgentObjects.Any(ag => ag.Id == agentObjectId) && t.StudyYears.Any(y => plan.StudyYear1 != null ? y.Id == plan.StudyYear1.Id : false)).OrderBy(t => t.OrderNumber).ThenBy(t => t.Name);
                            result.TargetGroupPlanMakings = new List<TargetGroupPlanMakingDTO>();
                            #region Original Plan
                            int AgentObjectTypeId = -1;
                            if (userRole == 1)
                            {
                                AgentObjectTypeId = 4;
                                //planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.WebGroupId == new Guid(AuthenticationHelper.GetUserById(new Guid(User.Identity.GetUserId()), User.Identity.Name).WebGroupId)).FirstOrDefault();
                                planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && (ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000001") || ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000002") || ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000003"))).FirstOrDefault();
                                if (planStaff == null)
                                {
                                    SessionManager.DoWork(session1 =>
                                    {
                                        planStaff = new PlanStaff();
                                        planStaff.Id = Guid.NewGuid();
                                        planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                        planStaff.Staff = new Staff() { Id = staff.Id };
                                        planStaff.ModifiedTime = DateTime.Now;
                                        planStaff.AgentObject = agentObject;
                                        planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                        planStaff.WebGroupId = new Guid(AuthenticationHelper.GetUserById(new Guid(User.Identity.GetUserId()), User.Identity.Name).WebGroupId);
                                        session1.Save(planStaff);
                                    });
                                }
                                //result.IsLocked = planStaff != null ? planStaff.IsLocked : false;
                            }
                            else
                            {
                                if (agentObject == null)
                                {
                                    if (staff.StaffInfo.Position == null)
                                    {
                                        if (staff.StaffInfo.StaffType.ManageCode == "3")
                                            AgentObjectTypeId = 2; //Nhân viên
                                        else
                                            AgentObjectTypeId = 1; //Giảng viên
                                    }
                                    else
                                    {
                                        if (!applicationUser.IsKPIs)
                                            AgentObjectTypeId = staff.StaffInfo.Position.AgentObjectType.Id;
                                        else
                                            AgentObjectTypeId = Convert.ToInt32(applicationUser.AgentObjectTypeId);
                                    }

                                    if (!SessionHelper.Data<bool>(SessionKey.IsKPIs) && staff.StaffInfo.AgentObjects.Count > 1)
                                    {
                                        AgentObject ao = session.Query<AgentObject>().Where(a => a.Id == agentObjectId).SingleOrDefault();
                                        if (ao != null)
                                        {
                                            AgentObjectTypeId = ao.AgentObjectType.Id;
                                            result.StaffDTO.AgentObjectTypeId = AgentObjectTypeId;
                                        }
                                    }
                                }
                                else
                                {
                                    AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                    result.StaffDTO.AgentObjectTypeId = AgentObjectTypeId;
                                    //sửa ngày 04/10/2016 - thêm biến departmentId truyền từ client vào
                                    if (departmentId != Guid.Empty)
                                        DepartmentId = departmentId;
                                }

                                #region Chọn planStaff Cho từng đối tượng

                                //Chọn planstaff cho từng đối tượng

                                switch (AgentObjectTypeId)
                                {
                                    //Dành cho giảng viên
                                    case (int)AgentObjectTypes.GiangVien:
                                        {
                                            #region Giảng viên                                     
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = (int)AgentObjectTypes.GiangVien;

                                            //    DepartmentId = staff.Department.Id;
                                            //}
                                            //else
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null)
                                            //        DepartmentId = sposition.Department.Id;
                                            //}
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Staff.Id == staff.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId).SingleOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = plan;
                                                planStaff.Staff = new Staff() { Id = staff.Id };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.NhanVien:
                                        {
                                            #region NhanVien    
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = (int)AgentObjectTypes.NhanVien;

                                            //    DepartmentId = staff.Department.Id;
                                            //}
                                            //else
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null)
                                            //        DepartmentId = sposition.Department.Id;
                                            //}
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Staff.Id == staff.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId).FirstOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                planStaff.Staff = new Staff() { Id = staff.Id };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhongBan:
                                        {
                                            #region PhongBan   
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    //result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);

                                            //    DepartmentId = staff.Department.Id;


                                            //}
                                            //else
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null)
                                            //        DepartmentId = sposition.Department.Id;
                                            //}
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Staff.Id == null && ps.Department.Id == DepartmentId && ps.AgentObjectType.Id == AgentObjectTypeId).FirstOrDefault();

                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                //if(staff.Id!=Guid.Empty) //User thường
                                                //    planStaff.Staff = new Staff() { Id = staff.Id }; //Không lưu trưởng phòng hiện tại vào planstaff
                                                planStaff.Department = new Department() { Id = DepartmentId };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }


                                            //Lưu cache dữ liệu:
                                            //Lấy dữ liệu từ bản criterion trung gian
                                            temdepartmentPlanCriterions = session.Query<Criterion>().Where(c => (c.Department.Id == DepartmentId && c.Staff == null));
                                            //cacher.Add("Criterion", temdepartmentPlanCriterions, DateTimeOffset.UtcNow.AddHours(1));
                                            // parentIdResult = DataClassHelper.GetPlanKPIDetailData(DepartmentId);
                                            planParentDetail = DataClassHelper.GetPlanKPIDetailData(DepartmentId);


                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.BanGiamHieu:
                                        {
                                            #region Ban giám hiệu
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && (ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000001") || ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000002") || ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000003"))).FirstOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                planStaff.Staff = new Staff() { Id = staff.Id };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.WebGroupId = new Guid(AuthenticationHelper.GetUserById(new Guid(User.Identity.GetUserId()), User.Identity.Name).WebGroupId);
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.Khoa:
                                        {
                                            #region Khoa   
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    //result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);

                                            //    DepartmentId = staff.Department.Id;
                                            //}
                                            //else
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null)
                                            //        DepartmentId = sposition.Department.Id;
                                            //}
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Department != null && ps.Department.Id == DepartmentId && ps.AgentObjectType.Id == AgentObjectTypeId).SingleOrDefault();
                                            if (planStaff == null)
                                            {
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    planStaff = new PlanStaff();
                                                    planStaff.Id = Guid.NewGuid();
                                                    planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                    //planStaff.Staff = new Staff() { Id = staff.Id }; ////Không lưu trưởng khoa hiện tại vào planstaff
                                                    planStaff.Department = new Department() { Id = DepartmentId };
                                                    planStaff.ModifiedTime = DateTime.Now;
                                                    planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                    planStaff.AgentObject = agentObject;
                                                    session1.Save(planStaff);
                                                });
                                            }

                                            //Lấy dữ liệu từ bản criterion trung gian
                                            temdepartmentPlanCriterions = session.Query<Criterion>().Where(c => (c.Department.Id == DepartmentId && c.Staff == null));
                                            //Lấy tất cả plankpidetail từ stored
                                            planParentDetail = DataClassHelper.GetPlanKPIDetailData(DepartmentId);
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.BoMon:
                                        {
                                            #region BoMon

                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Staff.Id == null && ps.Department.Id == DepartmentId && ps.AgentObjectType.Id == AgentObjectTypeId).FirstOrDefault();

                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                //if(staff.Id!=Guid.Empty) //User thường
                                                //    planStaff.Staff = new Staff() { Id = staff.Id }; //Không lưu trưởng phòng hiện tại vào planstaff
                                                planStaff.Department = new Department() { Id = DepartmentId };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }


                                            //Lưu cache dữ liệu:
                                            //Lấy dữ liệu từ bản criterion trung gian
                                            temdepartmentPlanCriterions = session.Query<Criterion>().Where(c => (c.Department.Id == DepartmentId && c.Staff == null));
                                           
                                            planParentDetail = DataClassHelper.GetPlanKPIDetailData(DepartmentId);
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoPhongBan: //Phó phong ban
                                        {
                                            #region PhoPhongBan
                                            if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            {
                                                //result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);

                                                DepartmentId = staff.Department.Id;
                                            }
                                            else
                                            {
                                                result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                                SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                                if (sposition != null)
                                                    DepartmentId = sposition.Department.Id;
                                            }
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Staff.Id == staff.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId).FirstOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                planStaff.Department = new Department() { Id = DepartmentId };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }


                                            //Lưu cache dữ liệu:
                                            //Lấy dữ liệu từ bản criterion trung gian
                                            temdepartmentPlanCriterions = session.Query<Criterion>().Where(c => (c.Department.Id == DepartmentId && c.Staff == null && c.PlanKPI.Id == planId));

                                            planParentDetail = DataClassHelper.GetPlanKPIDetailData(DepartmentId);

                                            //planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Staff.Id == staff.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId).FirstOrDefault();
                                            //if (planStaff == null)
                                            //{
                                            //    planStaff = new PlanStaff();
                                            //    planStaff.Id = Guid.NewGuid();
                                            //    planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                            //    planStaff.Staff = new Staff() { Id = staff.Id };
                                            //    planStaff.ModifiedTime = DateTime.Now;
                                            //    planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                            //    planStaff.AgentObject = agentObject;
                                            //    SessionManager.DoWork(session1 =>
                                            //    {
                                            //        session1.Save(planStaff);
                                            //    });
                                            //}
                                            #endregion

                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoKhoa: //Phó khoa
                                        {
                                            #region PhoKhoa
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    //result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);

                                            //    DepartmentId = staff.Department.Id;
                                            //}
                                            //else
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null)
                                            //        DepartmentId = sposition.Department.Id;
                                            //}
                                            //planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Department != null && ps.Department.Id == DepartmentId && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId).SingleOrDefault();
                                            //if (planStaff == null)
                                            //{
                                            //    planStaff = new PlanStaff();
                                            //    planStaff.Id = Guid.NewGuid();
                                            //    planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                            //    planStaff.Staff = new Staff() { Id = staff.Id };
                                            //    planStaff.Department = new Department() { Id = DepartmentId };
                                            //    planStaff.ModifiedTime = DateTime.Now;
                                            //    planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                            //    planStaff.AgentObject = agentObject;
                                            //    SessionManager.DoWork(session1 =>
                                            //    {
                                            //        session1.Save(planStaff);
                                            //    });
                                            //}
                                            ////Lấy tất cả plankpidetail từ stored
                                            //planParentDetail = DataClassHelper.GetPlanKPIDetailData(DepartmentId);

                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Staff.Id == staff.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId).FirstOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                planStaff.Staff = new Staff() { Id = staff.Id };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoBoMon: //Phó bộ môn
                                        {
                                            #region PhoBoMon
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);

                                            //    DepartmentId = staff.Department.Id;
                                            //}
                                            //else
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null)
                                            //        DepartmentId = sposition.Department.Id;
                                            //}
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Department != null && ps.Department.Id == DepartmentId && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId).SingleOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                planStaff.Staff = new Staff() { Id = staff.Id };
                                                planStaff.Department = new Department() { Id = DepartmentId };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.HieuTruong: // Hiệu trưởng
                                        {
                                            #region HieuTruong
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    //result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);

                                            //    DepartmentId = staff.Department.Id;
                                            //}
                                            //else
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null)
                                            //        DepartmentId = sposition.Department.Id;
                                            //}
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Department != null && ps.Department.Id == DepartmentId && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId).SingleOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                planStaff.Staff = new Staff() { Id = staff.Id };
                                                planStaff.Department = new Department() { Id = DepartmentId };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoHieuTruong: //Phó Hiệu trưởng
                                        {
                                            #region PhoHieuTruong
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    //result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);

                                            //    DepartmentId = staff.Department.Id;
                                            //}
                                            //else
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null)
                                            //        DepartmentId = sposition.Department.Id;
                                            //}
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Department != null && ps.Department.Id == DepartmentId && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId).SingleOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                planStaff.Staff = new Staff() { Id = staff.Id };
                                                planStaff.Department = new Department() { Id = DepartmentId };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.Nganh: // Trưởng ngành
                                        {
                                            #region Nganh
                                            //if (staff.StaffInfo.Position != null && staff.StaffInfo.Position.AgentObjectType != null)
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = staff.StaffInfo.Position != null ? staff.StaffInfo.Position.AgentObjectType.Id : (staff.StaffInfo.StaffType.ManageCode == "3" ? 2 : 1);

                                            //    DepartmentId = staff.StaffInfo.Subject.Id;
                                            //}
                                            //else 
                                            //if (staff.StaffInfo.SubPositions != null && agentObject != null && agentObject.AgentObjectType != null)
                                            //{
                                            //    result.StaffDTO.AgentObjectTypeId = agentObject.AgentObjectType.Id;
                                            //    SubPosition sposition = staff.StaffInfo.SubPositions.Where(s => s.Position.AgentObjectType.Id == agentObject.AgentObjectType.Id).Select(s => s).FirstOrDefault();
                                            //    if (sposition != null && sposition.Department != null)
                                            //    {
                                            //        DepartmentId = sposition.Department.Id;
                                            //        result.StaffDTO.Subject = sposition.Department.Map<DepartmentDTO>();
                                            //        result.StaffDTO.Department = sposition.Department.ParentDepartment != null ? sposition.Department.ParentDepartment.Map<DepartmentDTO>() : null;
                                            //        result.StaffDTO.DepartmentId = sposition.Department.ParentDepartment != null ? sposition.Department.ParentDepartment.Id : Guid.Empty;
                                            //    }
                                            //}
                                            planStaff = session.Query<PlanStaff>().Where(ps => ps.PlanKPI.Id == planId && ps.Department != null && ps.Department.Id == DepartmentId && ps.AgentObjectType.Id == AgentObjectTypeId).SingleOrDefault();
                                            if (planStaff == null)
                                            {
                                                planStaff = new PlanStaff();
                                                planStaff.Id = Guid.NewGuid();
                                                planStaff.PlanKPI = new PlanKPI() { Id = planId };
                                                if (staff.Id != Guid.Empty) //User thường
                                                    planStaff.Staff = new Staff() { Id = staff.Id };
                                                planStaff.Department = new Department() { Id = DepartmentId };
                                                planStaff.ModifiedTime = DateTime.Now;
                                                planStaff.AgentObjectType = new AgentObjectType() { Id = AgentObjectTypeId };
                                                planStaff.AgentObject = agentObject;
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(planStaff);
                                                });
                                            }
                                            //Lấy tất cả plankpidetail từ stored
                                            planParentDetail = DataClassHelper.GetPlanKPIDetailData(DepartmentId);
                                            #endregion
                                        }
                                        break;
                                }

                                result.IsLocked = planStaff.IsLocked;
                                #endregion
                            }
                            // List<CriterionDictionary> dictionarie = session.Query<CriterionDictionary>().ToList();

                            //logMessage += "(planStaffId: " + planStaff.Id + ")";
                            foreach (TargetGroupDetail t in targets)
                            {
                                TargetGroupPlanMakingDTO tg = new TargetGroupPlanMakingDTO();
                                var dictionaries = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>();
                                tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;

                                tg.Density = t.Density;
                                tg.CriterionDictionaries = dictionaries;

                                //Dữ liệu gán của kế hoạch
                                List<PlanKPIDetail> planDetails = new List<PlanKPIDetail>();
                                List<PlanKPIDetail> parentPlanKPIDetail = new List<PlanKPIDetail>();
                                List<PlanKPIDetail> parentPlanKPIDetail2 = new List<PlanKPIDetail>();
                                List<PlanKPIDetail> planDetails2 = new List<PlanKPIDetail>();
                                List<Criterion> temstaffPlanCriterions = new List<Criterion>();
                                List<Criterion> staffPlanCriterions = new List<Criterion>();
                                PlanStaff parentPlanStaff = new PlanStaff();
                                PlanStaff parentPlanStaff2 = new PlanStaff();
                                List<Criterion> departmentPlanCriterions = new List<Criterion>();
                                List<CriterionPlanDTO> criterions = new List<CriterionPlanDTO>();


                                #region Lấy dữ liệu từ db
                                switch (AgentObjectTypeId)
                                {
                                    case (int)AgentObjectTypes.GiangVien:
                                        {
                                            #region Giảng viên
                                            if (planStaff != null)
                                            {
                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                {
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                    if (parentPlanStaff2 == null)
                                                        parentPlanStaff2 = new PlanStaff();
                                                }

                                                //Lấy planstaff của học kỳ
                                                if (plan.ParentPlan != null)
                                                {
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                    if (parentPlanStaff == null)
                                                        parentPlanStaff = new PlanStaff();
                                                }




                                                if (parentPlanStaff != null)
                                                {
                                                    //Lấy planDetail của học kỳ
                                                    parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd => pd.FromCriterion == null).ToList();
                                                    //parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                                    //    (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                    //  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                    //  (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                    //  (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    //Lấy planDetail của năm học
                                                    parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                                          (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count > 0
                                                                  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }
                                            }
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.NhanVien:
                                        {
                                            #region Nhân viên                                       
                                            //if (staff.StaffInfo.Subject != null)
                                            // temstaffPlanCriterions = session.Query<Criterion>().Where(c => (c.Staff.Id == staff.Id || c.StaffLeader.Id == staff.Id || c.Department.Id == staff.StaffInfo.Subject.Id) && c.TargetGroupDetail.TargetGroupDetailType.Id != 3).ToList();
                                            // else

                                            temstaffPlanCriterions = session.Query<Criterion>().Where(c => (c.Staff.Id == staff.Id || c.StaffLeader.Id == staff.Id) && c.TargetGroupDetail.TargetGroupDetailType.Id != 3 && c.PlanKPI.Id == planId).ToList();


                                            staffPlanCriterions = temstaffPlanCriterions.Where(c =>
                                            c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Count >= 0
                                              //(c.FromPlanKPIDetail == null || !c.FromPlanKPIDetail.IsDisable && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0)
                                              && c.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id).ToList();
                                            //&& ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) >= 0))).ToList();                                    

                                            staffPlanCriterions = staffPlanCriterions.Where(c => t.Id == c.TargetGroupDetail.Id
                                             || (c.Staff != null && c.Staff.Id == staff.Id && c.TargetGroupDetail.TargetGroupDetailType.Id == t.TargetGroupDetailType.Id)).OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {
                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                {
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                    if (parentPlanStaff2 == null)
                                                        parentPlanStaff2 = new PlanStaff();
                                                }

                                                //Lấy planstaff của học kỳ
                                                if (plan.ParentPlan != null)
                                                {
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                    if (parentPlanStaff == null)
                                                        parentPlanStaff = new PlanStaff();
                                                }


                                                if (parentPlanStaff != null)
                                                {
                                                    //Lấy planDetail của học kỳ
                                                    parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                                            (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                          && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    //Lấy planDetail của năm học
                                                    parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                                          (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                                  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                planDetails = planStaff.PlanKPIDetails.Where(pd => (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.FromCriterion == null) ||
                                                              (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                              && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                planDetails2 = new List<PlanKPIDetail>();

                                                result.PlanStaffId = planStaff.Id;

                                                List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;

                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;

                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhongBan:
                                        {
                                            #region Phòng ban

                                            #region Lấy dữ liệu từ db

                                            //Lọc ra các criterion đúng nhóm tiêu chí                                       
                                            temdepartmentPlanCriterions = temdepartmentPlanCriterions.Where(c => (c.Department.Id == DepartmentId) && c.TargetGroupDetail.TargetGroupDetailType.Id != 3 && c.PlanKPI.Id == planId).ToList();


                                            var nullcri = temdepartmentPlanCriterions.Where(c => c.FromPlanKPIDetail == null);

                                            foreach (Criterion cri in temdepartmentPlanCriterions)
                                            {
                                                List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(cri.FromPlanKPIDetail, session, planParentDetail);

                                                //bool isValid = (cri.FromPlanKPIDetail == null || !cri.FromPlanKPIDetail.IsDisable && originalMethods.Count > 0) && !cri.FromPlanKPIDetail.IsDelete
                                                bool isValid = cri.FromPlanKPIDetail != null && originalMethods.Count >= 0 && cri.FromPlanKPIDetail.IsDelete == false
                                                    && cri.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id;
                                                //&& ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                //              (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                //              (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0));
                                                if (isValid)
                                                    departmentPlanCriterions.Add(cri);

                                            }

                                            departmentPlanCriterions = departmentPlanCriterions.Where(c => (t.Id == c.TargetGroupDetail.Id)
                                           || (c.Staff != null && c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id)).OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {
                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                ////Lấy planstaff của học kỳ
                                                //if (plan.ParentPlan != null)
                                                //    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.AgentObjectType.Id == AgentObjectTypeId);

                                                if (parentPlanStaff != null)
                                                {
                                                    foreach (PlanKPIDetail pd in parentPlanStaff.PlanKPIDetails)
                                                    {
                                                        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count >= 0 && pd.IsDelete == false
                                                      && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                                        if (isValid)
                                                            parentPlanKPIDetail.Add(pd);
                                                    }
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    foreach (PlanKPIDetail pd in parentPlanStaff2.PlanKPIDetails)
                                                    {
                                                        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count >= 0 && pd.IsDelete == false
                                                      && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                                        if (isValid)
                                                            parentPlanKPIDetail2.Add(pd);
                                                    }

                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                var parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id));

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                foreach (PlanKPIDetail pd in planStaff.PlanKPIDetails)
                                                {
                                                    List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                    //
                                                    if (originalMethods.Count > 0)
                                                    {
                                                        DateTime minTime = originalMethods.Min(m => m.StartTime);
                                                        DateTime maxTime = originalMethods.Max(m => m.EndTime);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count > 0
                                                      && ((plan.StartTime.CompareTo(minTime) >= 0 && plan.StartTime.CompareTo(maxTime) <= 0) ||
                                                      (plan.EndTime.CompareTo(minTime) >= 0 && plan.EndTime.CompareTo(maxTime) <= 0) ||
                                                      (plan.StartTime.CompareTo(minTime) <= 0 && plan.EndTime.CompareTo(maxTime) >= 0)));
                                                        if (isValid)
                                                            planDetails.Add(pd);
                                                    }
                                                    else
                                                    {
                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id);
                                                        if (isValid)
                                                            planDetails.Add(pd);
                                                    }
                                                }
                                                #endregion
                                                planDetails2 = new List<PlanKPIDetail>();

                                                //planDetails2 = session.Query<PlanKPIDetail>().Where(pd =>
                                                //   pd.TargetGroupDetail.Id != t.Id && pd.Methods.Count > 0
                                                //   && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) >= 0))).ToList();

                                                result.PlanStaffId = planStaff.Id;

                                                //Lấy ra các mục tiêu của các cấp trên ( học kỳ hoặc năm) chưa tồn tại chính thức trong bản plan staff hiện tại.
                                                var mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id));
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.BanGiamHieu:
                                        {
                                            #region Ban giám hiệu           
                                            if (planStaff != null)
                                            {
                                                int planMonth = plan.StartTime.Month;
                                                int year = plan.StartTime.Year;

                                                Guid webGroupId = new Guid(AuthenticationHelper.GetUserById(new Guid(User.Identity.GetUserId()), User.Identity.Name).WebGroupId);


                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => (ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000001") || ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000002") || ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000003")) && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id);
                                                //else if (plan.ParentPlan != null && tg.TargetGroupDetailTypeId == 0)
                                                // {
                                                //    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                //    if (parentPlanStaff == null)
                                                //        parentPlanStaff = new PlanStaff();
                                                //}
                                                else if (plan.ParentPlan != null)
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => (ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000001") || ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000002") || ps.WebGroupId == new Guid("00000000-0000-0000-0000-000000000003")) && ps.PlanKPI.Id == plan.ParentPlan.Id);

                                                if (parentPlanStaff != null)
                                                //{
                                                //    parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd => pd.FromCriterion == null).ToList();
                                                //}
                                                //else
                                                {
                                                    //parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null &&
                                                    //    pd.TargetGroupDetail.Id == t.Id && pd.Methods.Count > 0
                                                    //  && ((plan.StartTime.CompareTo(pd.Methods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(pd.Methods.Max(m => m.EndTime)) <= 0) ||
                                                    //  (plan.EndTime.CompareTo(pd.Methods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(pd.Methods.Max(m => m.EndTime)) <= 0) ||
                                                    //  (plan.StartTime.CompareTo(pd.Methods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(pd.Methods.Max(m => m.EndTime)) >= 0))).ToList();
                                                    foreach (PlanKPIDetail pd in parentPlanStaff.PlanKPIDetails)
                                                    {
                                                        if (pd.Methods.Count > 0)
                                                        {
                                                            DateTime minTime = pd.Methods.Min(m => m.StartTime);
                                                            DateTime maxTime = pd.Methods.Max(m => m.EndTime);

                                                            bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.Methods.Count > 0
                                                          && ((plan.StartTime.CompareTo(minTime) >= 0 && plan.StartTime.CompareTo(maxTime) <= 0) ||
                                                          (plan.EndTime.CompareTo(minTime) >= 0 && plan.EndTime.CompareTo(maxTime) <= 0) ||
                                                          (plan.StartTime.CompareTo(minTime) <= 0 && plan.EndTime.CompareTo(maxTime) >= 0)));
                                                            if (isValid)
                                                                parentPlanKPIDetail.Add(pd);
                                                        }
                                                    }
                                                }

                                                planDetails = planStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null &&
                                                              pd.TargetGroupDetail.Id == t.Id).ToList();


                                                result.PlanStaffId = planStaff.Id;

                                                List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail != null ? parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => p2.ParentPlanKPIDetail != null && p2.ParentPlanKPIDetail.Id == p.Id)).ToList() : new List<PlanKPIDetail>();

                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }

                                                result.PlanStaffId = planStaff.Id;
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.PlanKPIDetails = new List<PlanKPIMakingDetailDTO>();
                                            criterions = session.Query<Criterion>().Where(c => c.TargetGroupDetail != null && c.TargetGroupDetail.Id == t.Id && c.Department.Id == staff.Department.Id && c.PlanKPI.Id == planId).Map<CriterionPlanDTO>().ToList();
                                            tg.Criterions = criterions;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.Khoa:
                                        {
                                            #region Khoa

                                            temdepartmentPlanCriterions = temdepartmentPlanCriterions.Where(c => (c.Department.Id == DepartmentId) && c.TargetGroupDetail.TargetGroupDetailType.Id != 3 && c.PlanKPI.Id == planId).ToList();


                                            var nullcri = temdepartmentPlanCriterions.Where(c => c.FromPlanKPIDetail == null);

                                            foreach (Criterion cri in temdepartmentPlanCriterions)
                                            {
                                                List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(cri.FromPlanKPIDetail, session, planParentDetail);

                                                //bool isValid = (cri.FromPlanKPIDetail == null || !cri.FromPlanKPIDetail.IsDisable && originalMethods.Count > 0) && !cri.FromPlanKPIDetail.IsDelete
                                                bool isValid = cri.FromPlanKPIDetail != null && originalMethods.Count >= 0 && cri.FromPlanKPIDetail.IsDelete == false
                                                    && cri.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id;
                                                //&& ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                //              (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                //              (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0));
                                                if (isValid)
                                                    departmentPlanCriterions.Add(cri);

                                            }

                                            departmentPlanCriterions = departmentPlanCriterions.Where(c => (t.Id == c.TargetGroupDetail.Id)
                                           || (c.Staff != null && c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id)).OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {
                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                ////Lấy planstaff của học kỳ
                                                //if (plan.ParentPlan != null)
                                                //    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.AgentObjectType.Id == AgentObjectTypeId);

                                                if (parentPlanStaff != null)
                                                {
                                                    foreach (PlanKPIDetail pd in parentPlanStaff.PlanKPIDetails)
                                                    {
                                                        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count >= 0 && pd.IsDelete == false
                                                      && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                                        if (isValid)
                                                            parentPlanKPIDetail.Add(pd);
                                                    }
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    foreach (PlanKPIDetail pd in parentPlanStaff2.PlanKPIDetails)
                                                    {
                                                        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count >= 0 && pd.IsDelete == false
                                                      && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                                        if (isValid)
                                                            parentPlanKPIDetail2.Add(pd);
                                                    }

                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                var parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id));

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                foreach (PlanKPIDetail pd in planStaff.PlanKPIDetails)
                                                {
                                                    List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                    //
                                                    if (originalMethods.Count > 0)
                                                    {
                                                        DateTime minTime = originalMethods.Min(m => m.StartTime);
                                                        DateTime maxTime = originalMethods.Max(m => m.EndTime);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count >= 0);
                                                        if (isValid)
                                                            planDetails.Add(pd);
                                                    }
                                                    else
                                                    {
                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id);
                                                        if (isValid)
                                                            planDetails.Add(pd);
                                                    }
                                                }

                                                planDetails2 = new List<PlanKPIDetail>();

                                                //planDetails2 = session.Query<PlanKPIDetail>().Where(pd =>
                                                //   pd.TargetGroupDetail.Id != t.Id && pd.Methods.Count > 0
                                                //   && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) >= 0))).ToList();

                                                result.PlanStaffId = planStaff.Id;

                                                //Lấy ra các mục tiêu của các cấp trên ( học kỳ hoặc năm) chưa tồn tại chính thức trong bản plan staff hiện tại.
                                                var mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id));
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.BoMon:
                                        {
                                            #region Bộ môn

                                            temdepartmentPlanCriterions = temdepartmentPlanCriterions.Where(c => (c.Department.Id == DepartmentId) && c.TargetGroupDetail.TargetGroupDetailType.Id != 3 && c.PlanKPI.Id == planId).ToList();
                                            

                                            foreach (Criterion cri in temdepartmentPlanCriterions)
                                            {
                                                List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(cri.FromPlanKPIDetail, session, planParentDetail);

                                                bool isValid = cri.FromPlanKPIDetail != null && originalMethods.Count >= 0 && cri.FromPlanKPIDetail.IsDelete == false
                                                    && cri.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id;
                                             
                                                if (isValid)
                                                    departmentPlanCriterions.Add(cri);

                                            }

                                            departmentPlanCriterions = departmentPlanCriterions.Where(c => (t.Id == c.TargetGroupDetail.Id)
                                           || (c.Staff != null && c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id)).OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {
                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                ////Lấy planstaff của học kỳ
                                                //if (plan.ParentPlan != null)
                                                //    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.AgentObjectType.Id == AgentObjectTypeId);

                                                if (parentPlanStaff != null)
                                                {
                                                    foreach (PlanKPIDetail pd in parentPlanStaff.PlanKPIDetails)
                                                    {
                                                        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count >= 0 && pd.IsDelete == false
                                                      && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                                        if (isValid)
                                                            parentPlanKPIDetail.Add(pd);
                                                    }
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    foreach (PlanKPIDetail pd in parentPlanStaff2.PlanKPIDetails)
                                                    {
                                                        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count >= 0 && pd.IsDelete == false
                                                      && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                                        if (isValid)
                                                            parentPlanKPIDetail2.Add(pd);
                                                    }

                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                var parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id));

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                foreach (PlanKPIDetail pd in planStaff.PlanKPIDetails)
                                                {
                                                    List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                    //
                                                    if (originalMethods.Count > 0)
                                                    {
                                                        DateTime minTime = originalMethods.Min(m => m.StartTime);
                                                        DateTime maxTime = originalMethods.Max(m => m.EndTime);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count >= 0);
                                                        if (isValid)
                                                            planDetails.Add(pd);
                                                    }
                                                    else
                                                    {
                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id);
                                                        if (isValid)
                                                            planDetails.Add(pd);
                                                    }
                                                }

                                                planDetails2 = new List<PlanKPIDetail>();

                                                //planDetails2 = session.Query<PlanKPIDetail>().Where(pd =>
                                                //   pd.TargetGroupDetail.Id != t.Id && pd.Methods.Count > 0
                                                //   && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) >= 0))).ToList();

                                                result.PlanStaffId = planStaff.Id;

                                                //Lấy ra các mục tiêu của các cấp trên ( học kỳ hoặc năm) chưa tồn tại chính thức trong bản plan staff hiện tại.
                                                var mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id));
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;

                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoPhongBan:
                                        {
                                            #region Phó phòng ban

                                            // //Lọc ra các criterion đúng nhóm tiêu chí     
                                            temstaffPlanCriterions = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id || c.StaffLeader.Id == staff.Id && c.TargetGroupDetail.TargetGroupDetailType.Id != 3 && c.PlanKPI.Id == planId).ToList();


                                            staffPlanCriterions = temstaffPlanCriterions.Where(c =>
                                            c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Count >= 0
                                              //(c.FromPlanKPIDetail == null || !c.FromPlanKPIDetail.IsDisable && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0)
                                              && c.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id).ToList();
                                            //&& ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) >= 0))).ToList();                                    

                                            staffPlanCriterions = staffPlanCriterions.Where(c => t.Id == c.TargetGroupDetail.Id
                                             || (c.Staff != null && c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id)).OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {
                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                {
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                    if (parentPlanStaff2 == null)
                                                        parentPlanStaff2 = new PlanStaff();
                                                }

                                                //Lấy planstaff của học kỳ
                                                if (plan.ParentPlan != null)
                                                {
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                    if (parentPlanStaff == null)
                                                        parentPlanStaff = new PlanStaff();
                                                }


                                                if (parentPlanStaff != null)
                                                {
                                                    //Lấy planDetail của học kỳ
                                                    parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                                            (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                          && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    //Lấy planDetail của năm học
                                                    parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                                          (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                                  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                planDetails = planStaff.PlanKPIDetails.Where(pd => (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.FromCriterion == null) ||
                                                              (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                              && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                planDetails2 = new List<PlanKPIDetail>();

                                                result.PlanStaffId = planStaff.Id;

                                                List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;

                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;

                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoKhoa:
                                        {
                                            #region Phó khoa

                                            temstaffPlanCriterions = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id || c.StaffLeader.Id == staff.Id && c.TargetGroupDetail.TargetGroupDetailType.Id != 3 && c.PlanKPI.Id == planId).ToList();


                                            staffPlanCriterions = temstaffPlanCriterions.Where(c =>
                                            c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Count >= 0
                                              //(c.FromPlanKPIDetail == null || !c.FromPlanKPIDetail.IsDisable && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0)
                                              && c.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id).ToList();
                                            //&& ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail, session).Max(m => m.EndTime)) >= 0))).ToList();                                    

                                            staffPlanCriterions = staffPlanCriterions.Where(c => t.Id == c.TargetGroupDetail.Id
                                             || (c.Staff != null && c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id)).OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {
                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                {
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                    if (parentPlanStaff2 == null)
                                                        parentPlanStaff2 = new PlanStaff();
                                                }

                                                //Lấy planstaff của học kỳ
                                                if (plan.ParentPlan != null)
                                                {
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Staff.Id == staff.Id && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.Department == null && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                    if (parentPlanStaff == null)
                                                        parentPlanStaff = new PlanStaff();
                                                }


                                                if (parentPlanStaff != null)
                                                {
                                                    //Lấy planDetail của học kỳ
                                                    parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                                            (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                          && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    //Lấy planDetail của năm học
                                                    parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                                          (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                                  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                planDetails = planStaff.PlanKPIDetails.Where(pd => (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.FromCriterion == null) ||
                                                              (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd, session).Count >= 0
                                                              && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                planDetails2 = new List<PlanKPIDetail>();

                                                result.PlanStaffId = planStaff.Id;

                                                List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;

                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;

                                            ////List<Criterion> departmentPlanCriterions = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id
                                            ////    ).ToList();

                                            ////List<Criterion> templist = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id).ToList();
                                            ////lỗi: trưởng bộ môn giao cho giảng viên mà phó khoa cũng nhận được
                                            ////sửa: chỉ nhận công việc được giao từ trưởng khoa
                                            //List<Criterion> templist = session.Query<Criterion>().Where(c => c.FromPlanKPIDetail != null && c.FromPlanKPIDetail.PlanStaff != null
                                            //    && c.FromPlanKPIDetail.PlanStaff.AgentObjectType != null
                                            //    && c.FromPlanKPIDetail.PlanStaff.AgentObjectType.Id == (int)AgentObjectTypes.Khoa
                                            //    && c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id).ToList();
                                            ////departmentPlanCriterions = templist.Where(c => !c.FromPlanKPIDetail.IsDisable && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0
                                            ////    && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            ////                  (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            ////                  (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) >= 0))).ToList();

                                            //foreach (Criterion cri in templist)
                                            //{
                                            //    List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(cri.FromPlanKPIDetail, session, planParentDetail);

                                            //    bool isValid = !cri.FromPlanKPIDetail.IsDisable && originalMethods.Count >= 0
                                            //    && cri.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id;
                                            //    //((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                            //    //(plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                            //    //(plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0));
                                            //    if (isValid)
                                            //        departmentPlanCriterions.Add(cri);
                                            //}

                                            //departmentPlanCriterions = departmentPlanCriterions.OrderBy(c => c.OrderNumber).ToList();

                                            //if (planStaff != null)
                                            //{

                                            //    //Lấy planstaff của năm
                                            //    if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                            //        parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId);
                                            //    //Lấy planstaff của học kỳ
                                            //    if (plan.ParentPlan != null)
                                            //        parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId);

                                            //    if (parentPlanStaff != null)
                                            //    {
                                            //        //Lấy planDetail của học kỳ
                                            //        //parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                            //        //    (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                            //        //  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //        //  (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //        //  (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                            //        foreach (PlanKPIDetail pd in parentPlanStaff.PlanKPIDetails)
                                            //        {
                                            //            List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);
                                            //            if (originalMethods.Count > 0)
                                            //            {
                                            //                bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count > 0 && pd.IsDelete == false
                                            //         && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                            //         (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                            //         (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                            //                if (isValid)
                                            //                    parentPlanKPIDetail.Add(pd);
                                            //            }
                                            //            else
                                            //            {
                                            //                bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id);
                                            //                if (isValid)
                                            //                    parentPlanKPIDetail.Add(pd);
                                            //            }
                                            //        }
                                            //    }

                                            //    if (parentPlanStaff2 != null)
                                            //    {
                                            //        //Lấy planDetail của năm học
                                            //        //parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                            //        //  (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                            //        //          && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //        //  (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //        //  (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                            //        foreach (PlanKPIDetail pd in parentPlanStaff2.PlanKPIDetails)
                                            //        {
                                            //            List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);
                                            //            if (originalMethods.Count > 0)
                                            //            {
                                            //                bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count > 0 && pd.IsDelete == false
                                            //                  && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                            //                  (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                            //                  (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                            //                if (isValid)
                                            //                    parentPlanKPIDetail2.Add(pd);
                                            //            }
                                            //            else
                                            //            {
                                            //                bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id);
                                            //                if (isValid)
                                            //                    parentPlanKPIDetail2.Add(pd);
                                            //            }
                                            //        }
                                            //    }


                                            //    //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                            //    List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                            //    foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                            //    {
                                            //        parentPlanKPIDetail.Add(pkd);
                                            //    }

                                            //    //planDetails = planStaff.PlanKPIDetails.Where(pd => (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.FromCriterion == null) ||
                                            //    //              (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                            //    //              && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //    //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //    //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                            //    foreach (PlanKPIDetail pd in planStaff.PlanKPIDetails)
                                            //    {
                                            //        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                            //        if (originalMethods.Count > 0)
                                            //        {
                                            //            DateTime minTime = originalMethods.Min(m => m.StartTime);
                                            //            DateTime maxTime = originalMethods.Max(m => m.EndTime);

                                            //            bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count > 0
                                            //          && ((plan.StartTime.CompareTo(minTime) >= 0 && plan.StartTime.CompareTo(maxTime) <= 0) ||
                                            //          (plan.EndTime.CompareTo(minTime) >= 0 && plan.EndTime.CompareTo(maxTime) <= 0) ||
                                            //          (plan.StartTime.CompareTo(minTime) <= 0 && plan.EndTime.CompareTo(maxTime) >= 0)));
                                            //            if (isValid)
                                            //                planDetails.Add(pd);
                                            //        }
                                            //        else
                                            //        {
                                            //            bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id);
                                            //            if (isValid)
                                            //                planDetails.Add(pd);
                                            //        }
                                            //    }

                                            //    planDetails2 = new List<PlanKPIDetail>();

                                            //    //planDetails2 = session.Query<PlanKPIDetail>().Where(pd =>
                                            //    //   pd.TargetGroupDetail.Id != t.Id && pd.Methods.Count > 0
                                            //    //   && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                            //    //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                            //    //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) >= 0))).ToList();

                                            //    result.PlanStaffId = planStaff.Id;

                                            //    List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                            //    foreach (PlanKPIDetail pld in mergetDetails)
                                            //    {
                                            //        planDetails.Add(pld);
                                            //    }
                                            //}
                                            //else
                                            //    result.PlanStaffId = Guid.Empty;
                                            //tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoBoMon:
                                        {
                                            #region Phó BỘ MÔN

                                            List<Criterion> templist = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id).ToList();
                                            departmentPlanCriterions = templist.Where(c => !c.FromPlanKPIDetail.IsDisable && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0
                                                && c.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id).ToList();
                                            //&& ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) >= 0))).ToList();

                                            departmentPlanCriterions = departmentPlanCriterions.OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {

                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == staff.StaffInfo.Subject.Id && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id);
                                                //Lấy planstaff của học kỳ
                                                if (plan.ParentPlan != null)
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == staff.StaffInfo.Subject.Id && ps.PlanKPI.Id == plan.ParentPlan.Id);

                                                if (parentPlanStaff != null)
                                                {
                                                    //Lấy planDetail của học kỳ
                                                    parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                                            (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                          && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    //Lấy planDetail của năm học
                                                    parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                                          (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                                  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                planDetails = planStaff.PlanKPIDetails.Where(pd => (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.FromCriterion == null) ||
                                                              (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                              && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                planDetails2 = new List<PlanKPIDetail>();

                                                //planDetails2 = session.Query<PlanKPIDetail>().Where(pd =>
                                                //   pd.TargetGroupDetail.Id != t.Id && pd.Methods.Count > 0
                                                //   && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) >= 0))).ToList();

                                                result.PlanStaffId = planStaff.Id;

                                                List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.HieuTruong:
                                        {
                                            #region Hiệu trưởng

                                            //List<Criterion> departmentPlanCriterions = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id
                                            //    ).ToList();

                                            List<Criterion> templist = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id).ToList();
                                            departmentPlanCriterions = templist.Where(c => !c.FromPlanKPIDetail.IsDisable && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0
                                                && c.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id).ToList();
                                            //&& ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) >= 0))).ToList();

                                            departmentPlanCriterions = departmentPlanCriterions.OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {

                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                //Lấy planstaff của học kỳ
                                                if (plan.ParentPlan != null)
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId);

                                                if (parentPlanStaff != null)
                                                {
                                                    //Lấy planDetail của học kỳ
                                                    parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                                            (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                          && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    //Lấy planDetail của năm học
                                                    parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                                          (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                                  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                planDetails = planStaff.PlanKPIDetails.Where(pd => (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.FromCriterion == null) ||
                                                              (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                              && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                planDetails2 = new List<PlanKPIDetail>();

                                                //planDetails2 = session.Query<PlanKPIDetail>().Where(pd =>
                                                //   pd.TargetGroupDetail.Id != t.Id && pd.Methods.Count > 0
                                                //   && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) >= 0))).ToList();

                                                result.PlanStaffId = planStaff.Id;

                                                List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;


                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoHieuTruong:
                                        {
                                            #region Cho Phó Hiệu trưởng

                                            //List<Criterion> departmentPlanCriterions = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id
                                            //    ).ToList();

                                            List<Criterion> templist = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id).ToList();
                                            departmentPlanCriterions = templist.Where(c => !c.FromPlanKPIDetail.IsDisable && ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0
                                                && c.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id).ToList();
                                            //&& ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //              (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) >= 0))).ToList();

                                            departmentPlanCriterions = departmentPlanCriterions.OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {

                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                //Lấy planstaff của học kỳ
                                                if (plan.ParentPlan != null)
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.Staff.Id == staff.Id && ps.AgentObjectType.Id == AgentObjectTypeId);

                                                if (parentPlanStaff != null)
                                                {
                                                    //Lấy planDetail của học kỳ
                                                    parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                                            (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                          && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    //Lấy planDetail của năm học
                                                    parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                                          (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                                  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                          (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();
                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                planDetails = planStaff.PlanKPIDetails.Where(pd => (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.FromCriterion == null) ||
                                                              (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                              && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                planDetails2 = new List<PlanKPIDetail>();

                                                //planDetails2 = session.Query<PlanKPIDetail>().Where(pd =>
                                                //   pd.TargetGroupDetail.Id != t.Id && pd.Methods.Count > 0
                                                //   && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id,session).Max(m => m.EndTime)) >= 0))).ToList();

                                                result.PlanStaffId = planStaff.Id;

                                                List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;

                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.Nganh:
                                        {
                                            #region Trưởng ngành

                                            List<Criterion> templist = session.Query<Criterion>().Where(c => c.Department.Id == DepartmentId && c.Staff == null && c.TargetGroupDetail.Id == t.Id).ToList();
                                            //departmentPlanCriterions = templist.Where(c => ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0
                                            //    && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //                  (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                            //                  (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) >= 0))).ToList();

                                            foreach (Criterion cri in templist)
                                            {
                                                List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(cri.FromPlanKPIDetail, session, planParentDetail);

                                                bool isValid = originalMethods.Count > 0
                                                    && cri.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id;
                                                //((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                //(plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                //(plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0));
                                                if (isValid)
                                                    departmentPlanCriterions.Add(cri);
                                            }

                                            departmentPlanCriterions = departmentPlanCriterions.OrderBy(c => c.OrderNumber).ToList();

                                            if (planStaff != null)
                                            {

                                                //Lấy planstaff của năm
                                                if (plan.ParentPlan != null && plan.ParentPlan.ParentPlan != null)
                                                    parentPlanStaff2 = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.ParentPlan.Id && ps.AgentObjectType.Id == AgentObjectTypeId);
                                                //Lấy planstaff của học kỳ
                                                if (plan.ParentPlan != null)
                                                    parentPlanStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Department.Id == DepartmentId && ps.PlanKPI.Id == plan.ParentPlan.Id && ps.AgentObjectType.Id == AgentObjectTypeId);

                                                if (parentPlanStaff != null)
                                                {
                                                    //Lấy planDetail của học kỳ
                                                    //parentPlanKPIDetail = parentPlanStaff.PlanKPIDetails.Where(pd =>
                                                    //    (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                    //  && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                    //  (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                    //  (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                    foreach (PlanKPIDetail pd in parentPlanStaff.PlanKPIDetails)
                                                    {
                                                        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count > 0 && pd.IsDelete == false
                                                      && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                                        if (isValid)
                                                            parentPlanKPIDetail.Add(pd);
                                                    }
                                                }

                                                if (parentPlanStaff2 != null)
                                                {
                                                    //Lấy planDetail của năm học
                                                    //parentPlanKPIDetail2 = parentPlanStaff2.PlanKPIDetails.Where(pd =>
                                                    //  (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                    //          && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                    //  (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                    //  (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                    foreach (PlanKPIDetail pd in parentPlanStaff2.PlanKPIDetails)
                                                    {
                                                        List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count > 0 && pd.IsDelete == false
                                                      && ((plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.EndTime.CompareTo(originalMethods.Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) <= 0) ||
                                                      (plan.StartTime.CompareTo(originalMethods.Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(originalMethods.Max(m => m.EndTime)) >= 0)));
                                                        if (isValid)
                                                            parentPlanKPIDetail2.Add(pd);
                                                    }
                                                }


                                                //Danh sách tổng hộp các planDetail của học kỳ và năm (ưu tiên học kỳ)
                                                List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2.Where(p => !parentPlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                foreach (PlanKPIDetail pkd in parentMergePlanKPIDetail)
                                                {
                                                    parentPlanKPIDetail.Add(pkd);
                                                }

                                                //planDetails = planStaff.PlanKPIDetails.Where(pd => (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && pd.FromCriterion == null) ||
                                                //              (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && ControllerHelpers.GetOriginalMethods(pd.Id, session).Count > 0
                                                //              && ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) <= 0) ||
                                                //      (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(pd.Id, session).Max(m => m.EndTime)) >= 0)))).ToList();

                                                foreach (PlanKPIDetail pd in planStaff.PlanKPIDetails)
                                                {
                                                    List<MethodDTO> originalMethods = ControllerHelpers.GetOriginalMethods2(pd, session, planParentDetail);

                                                    if (originalMethods.Count > 0)
                                                    {
                                                        DateTime minTime = originalMethods.Min(m => m.StartTime);
                                                        DateTime maxTime = originalMethods.Max(m => m.EndTime);

                                                        bool isValid = (pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id && originalMethods.Count > 0
                                                      && ((plan.StartTime.CompareTo(minTime) >= 0 && plan.StartTime.CompareTo(maxTime) <= 0) ||
                                                      (plan.EndTime.CompareTo(minTime) >= 0 && plan.EndTime.CompareTo(maxTime) <= 0) ||
                                                      (plan.StartTime.CompareTo(minTime) <= 0 && plan.EndTime.CompareTo(maxTime) >= 0)));
                                                        if (isValid)
                                                            planDetails.Add(pd);
                                                    }
                                                }

                                                planDetails2 = new List<PlanKPIDetail>();


                                                result.PlanStaffId = planStaff.Id;

                                                List<PlanKPIDetail> mergetDetails = parentPlanKPIDetail.Where(p => !planDetails.Any(p2 => (p2.FromCriterion != null && p.FromCriterion != null && p2.FromCriterion.Id == p.FromCriterion.Id) || ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                foreach (PlanKPIDetail pld in mergetDetails)
                                                {
                                                    planDetails.Add(pld);
                                                }
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.TargetGroupDetailTypeId = t.TargetGroupDetailType.Id;

                                            #endregion
                                        }
                                        break;
                                }
                                #endregion //Lấy dữ liệu từ database

                                //--------------------------------------------
                                #region Xử lý dữ liệu
                                //---------------------------------------------
                                switch (AgentObjectTypeId)
                                {
                                    //Dành cho giảng viên
                                    case (int)AgentObjectTypes.GiangVien:
                                        {
                                            #region Giảng viên
                                            if (parentPlanKPIDetail.Count == 0 && plan.PlanType.Id == 2)
                                            {
                                                result.Id = Guid.Empty; //chưa soạn kế hoạch năm
                                                return;
                                            }

                                            planDetails = new List<PlanKPIDetail>();
                                            if (planStaff != null)
                                            {
                                                planDetails = planStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList();// session.Query<PlanKPIDetail>().Where(p => p.TargetGroupDetail.Id == t.Id && p.PlanKPI.Id == plan.Id && p.Staff.Id == staffId).ToList();
                                                result.PlanStaffId = planStaff.Id;
                                            }
                                            else
                                                result.PlanStaffId = Guid.Empty;
                                            tg.PlanKPIDetails = new List<PlanKPIMakingDetailDTO>();
                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                case 0:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }

                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {
                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            //pld.CurrentKPI = planDetail.CurrentKPI;
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                case 4:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();
                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.FirstOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null) //đã soạn kế hoạch
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    //kiểm tra xem học kỳ có kế hoạch chưa
                                                                    if (ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id))
                                                                    {
                                                                        //nếu chưa thì parse từ kế hoạch năm
                                                                        pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                    }
                                                                    else pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 2);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else //chưa soạn kế hoạch
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    //parse KH năm vào KH học kỳ
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                case 5:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();
                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }


                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    if (ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id))
                                                                    {
                                                                        pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                    }
                                                                    else pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 2);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                            }

                                            #region lấy trọng số của chế độ làm việc
                                            if (plan.PlanType.Id == 2 && plan.ParentPlan != null) //nếu là KH học kỳ thì lấy chế độ làm việc của KH năm
                                            {
                                                if (parentPlanStaff.AgentObjectDetail != null)
                                                {
                                                    if (t.TargetGroupDetailType.Id == 0)
                                                        tg.Density = parentPlanStaff.AgentObjectDetail.NumberOfSectionDensity;
                                                    else if (t.TargetGroupDetailType.Id == 5)
                                                        tg.Density = parentPlanStaff.AgentObjectDetail.ScienceResearchDensity;
                                                    else if (t.TargetGroupDetailType.Id == 4)
                                                        tg.Density = parentPlanStaff.AgentObjectDetail.OtherActivityDensity;
                                                }
                                            }
                                            else //KH năm
                                            {
                                                if (planStaff.AgentObjectDetail != null)
                                                {
                                                    if (t.TargetGroupDetailType.Id == 0)
                                                        tg.Density = planStaff.AgentObjectDetail.NumberOfSectionDensity;
                                                    else if (t.TargetGroupDetailType.Id == 5)
                                                        tg.Density = planStaff.AgentObjectDetail.ScienceResearchDensity;
                                                    else if (t.TargetGroupDetailType.Id == 4)
                                                        tg.Density = planStaff.AgentObjectDetail.OtherActivityDensity;
                                                }
                                            }
                                            #endregion

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.OrderNumber).ToList();
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();
                                            #endregion
                                        }
                                        break;
                                    //Dành cho nhân viên
                                    case (int)AgentObjectTypes.NhanVien:
                                        {
                                            #region Nhân viên

                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                #region 0
                                                case 0:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }

                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {
                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            //pld.CurrentKPI = planDetail.CurrentKPI;
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 1
                                                case 1:
                                                    {
                                                        foreach (Criterion cri in staffPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);

                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                pd.FromCriterion = new CriterionDTO() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.MaxRecord = pd.MaxRecord;
                                                                childPlan.StaffLeader = cri.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = cri.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        // child.LeadDepartment = m.LeadDepartment.Id != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                foreach (PlanDetailSubStaff subs in childPlan.ParentPlanKPIDetail.SubStaffs)
                                                                {
                                                                    PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                    {
                                                                        Density = subs.Density,
                                                                        Staff = subs.Staff,
                                                                        PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                    };
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.SaveOrUpdate(newPlanStaff);
                                                                    });
                                                                    childPlan.SubStaffs.Add(subs);
                                                                }

                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                //Trưởng phòng hoặc phó phòng thay đổi criterion rồi khóa xuống, nếu có khác biệt thì cập nhật mới theo criterion
                                                                //Trưởng phòng hoặc Phó phòng ai đẩy công việc xuống sau sẽ hiện chỉ đạo là người đó
                                                                if (cri.FromPlanKPIDetail.PlanStaff.Staff != null)
                                                                {
                                                                    if (cri.FromPlanKPIDetail.PlanStaff.Staff.Id != pld.StaffLeader.Id)
                                                                    {
                                                                        pd.StaffLeader.StaffProfile = new StaffProfile { Name = cri.FromPlanKPIDetail.PlanStaff.Staff.StaffProfile.Name };
                                                                        pd.StaffLeader.Id = cri.FromPlanKPIDetail.PlanStaff.Staff.Id;
                                                                    }
                                                                }

                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pd.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                        List<PlanKPIDetail> OutDeleteDetails = planDetails.Where(p => p.FromCriterion != null && !staffPlanCriterions.Any(dp => dp.Id == p.FromCriterion.Id)).ToList();
                                                        foreach (PlanKPIDetail pld in OutDeleteDetails)
                                                        {
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                        //Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        List<PlanKPIDetail> CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null).ToList();
                                                        foreach (PlanKPIDetail pld in CanDeleteDetails)
                                                        {

                                                            PlanKPIDetail existPld = planStaff.PlanKPIDetails.FirstOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                            //Nếu không tồn tại thì tạo mới plandetail
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (existPld == null)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!existPld.IsDelete)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                                UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                            }

                                                            try
                                                            {
                                                                if (pd.CurrentKPI != null)
                                                                {
                                                                    Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                    pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception e) { }

                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 3
                                                case 3:
                                                    {
                                                        Criterion crtierions = session.Query<Criterion>().SingleOrDefault(c => (c.Department.Id == staff.Department.Id)
                                                             && c.TargetGroupDetail.Id == t.Id
                                                            && !c.FromPlanKPIDetail.IsDisable);

                                                        Criterion staffPlanCriterion = session.Query<Criterion>().SingleOrDefault(c => (c.Department.Id == staff.Department.Id)
                                                            && c.TargetGroupDetail.TargetGroupDetailType.Id == 3
                                                            && c.TargetGroupDetail.Id == t.Id
                                                           && !c.FromPlanKPIDetail.IsDisable);

                                                        List<PlanKPIDetail> parentPlanKPIDetailType3 = parentPlanStaff != null ? parentPlanStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList() : new List<PlanKPIDetail>();
                                                        List<PlanKPIDetail> parentPlanKPIDetail2Type3 = parentPlanStaff2 != null ? parentPlanStaff2.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList() : new List<PlanKPIDetail>();

                                                        List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2Type3.Where(p => !parentPlanKPIDetailType3.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                        foreach (PlanKPIDetail pldk in parentMergePlanKPIDetail)
                                                        {
                                                            parentPlanKPIDetailType3.Add(pldk);
                                                        }

                                                        planDetails = planStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null &&
                                                              pd.TargetGroupDetail.Id == t.Id).ToList();

                                                        if (planDetails.Count <= 0)
                                                        {
                                                            List<PlanKPIDetail> planDetailMerges = planDetails.Where(p => !parentMergePlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                            //foreach (PlanKPIDetail plk in planDetailMerges)
                                                            //    planDetails.Add(plk);
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (parentPlanKPIDetailType3.Count > 0)
                                                            {
                                                                foreach (PlanKPIDetail pld in parentPlanKPIDetailType3)
                                                                {

                                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.ParentPlanKPIDetail = new PlanKPIDetail() { Id = pld.Id };
                                                                        childPlan.PlanStaff = planStaff;

                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }
                                                                    try
                                                                    {
                                                                        if (pd.TargetDetail != null)
                                                                        {
                                                                            Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                            pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                        }
                                                                    }
                                                                    catch (Exception)
                                                                    {
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (staffPlanCriterion != null)
                                                                {
                                                                    pd = ControllerHelpers.ParsePlanDetail(null, staffPlanCriterion.FromPlanKPIDetail, 2, session);
                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(staffPlanCriterion.FromPlanKPIDetail);
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.ParentPlanKPIDetail = new PlanKPIDetail() { Id = staffPlanCriterion.FromPlanKPIDetail.Id };
                                                                        childPlan.PlanStaff = planStaff;


                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        childPlan.StaffLeader = staffPlanCriterion.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = staffPlanCriterion.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            //session1.Evict(staffPlanCriterion.FromPlanKPIDetail);
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }

                                                                    //Kế hoạch được phân công từ cấp trên có trạng thái chưa khóa và original = false
                                                                    pd.IsLocked = false;
                                                                    pd.IsOriginal = false;
                                                                }
                                                                else
                                                                {
                                                                    pd.Id = Guid.Empty;
                                                                    pd.CriterionDictionaries = dictionaries;
                                                                    pd.StartTime = plan.StartTime;
                                                                    pd.EndTime = plan.EndTime;
                                                                    pd.CanDelete = false;

                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = new PlanKPIDetail();
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.StartTime = DateTime.Now;
                                                                        childPlan.EndTime = DateTime.Now;
                                                                        childPlan.PlanStaff = planStaff;
                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }
                                                                }
                                                                try
                                                                {
                                                                    if (pd.TargetDetail != null)
                                                                    {
                                                                        Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                        pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception)
                                                                {
                                                                }
                                                            }

                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                        else
                                                        {
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            //PlanKPIDetail pld = planDetails.FirstOrDefault(pl => pl.PlanStaff.Id == planStaff.Id != null && pl.TargetGroupDetail.Id == t.Id);
                                                            if (planDetails.First().TargetDetail == null && staffPlanCriterion != null)
                                                            {
                                                                pd = ControllerHelpers.ParsePlanDetail(null, staffPlanCriterion.FromPlanKPIDetail, 2, session);
                                                            }
                                                            else pd = ControllerHelpers.ParsePlanDetail(null, planDetails.First(), 2, session);

                                                            pd.CriterionDictionaries = dictionaries;
                                                            pd.CanDelete = false;
                                                            try
                                                            {
                                                                if (pd.TargetDetail != null)
                                                                {
                                                                    Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                    pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception)
                                                            {
                                                            }

                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 6
                                                case 6:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in staffPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 1, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    //  pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }
                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                //pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 7
                                                case 7:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in staffPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 1, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //  child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    //  pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }
                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                // pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                    #endregion
                                            }
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;



                                            //criterions = session.Query<Criterion>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Department.Id == staff.Department.Id && c.PlanKPI.Id == planId).Map<CriterionPlanDTO>().ToList();
                                            //tg.Criterions = criterions;
                                            #endregion
                                        }
                                        break;
                                    //Dành cho trưởng phòng ban
                                    case (int)AgentObjectTypes.PhongBan:
                                        {
                                            #region Cho Trưởng phòng ban
                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                #region Loại thường
                                                case 0:
                                                    {

                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {

                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Nhận nhiệm vụ từ cấp trên
                                                case 6:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.FirstOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 1, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = new PlanStaff() { Id = planStaff.Id };
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                // childPlan.CapMucTieu = pd.CapMucTieu;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    // childPlan.CapMucTieu = pd.CapMucTieu;
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    // pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            //  child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }
                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            childPlan.Methods.Add(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                //  pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Chi tiết hóa nhiệm vụ
                                                case 7:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                // childPlan.CapMucTieu = pd.CapMucTieu;
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                //Lưu method nhận từ cấp trên vào db
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;

                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                        //childPlan.Methods.Add(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    //childPlan.CapMucTieu = pld.CapMucTieu;
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };

                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }

                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);
                                                                            //childPlan.Methods.Add(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    //{
                                                                    result.IsDisable = false;
                                                                //  if (pd.IsLocked == true)
                                                                // pd.IsMoved = true;
                                                                //}                                                                                                   
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                case 5:
                                                    {
                                                    }
                                                    break;
                                                #region Loại tổng kết
                                                case 1:
                                                    {
                                                        //foreach (Criterion cri in departmentPlanCriterions)
                                                        //{
                                                        //PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                        //PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);

                                                        ////Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        //Phần này bị chậm
                                                        // >2s
                                                        var CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null);
                                                        foreach (PlanKPIDetail pld in CanDeleteDetails)
                                                        {
                                                            //Tìm ra mục tiêu có tồn tại thật sư hay chưa hoặc là chỉ tồn tại ở kế hoạch năm và học kỳ
                                                            //PlanKPIDetail existPld = planStaff.PlanKPIDetails.SingleOrDefault(pl => pl.Id==pld.Id ||( pl.ParentPlanKPIDetail != null && (pl.ParentPlanKPIDetail.Id == pld.Id || (pl.ParentPlanKPIDetail.ParentPlanKPIDetail != null && pl.ParentPlanKPIDetail.ParentPlanKPIDetail.Id == pld.Id))));
                                                            PlanKPIDetail existPld = planStaff.PlanKPIDetails.FirstOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                            //Nếu không tồn tại thì tạo mới plandetail
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (existPld == null)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.MaxRecord = pld.MaxRecord; //Lưu trọng số vào database
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }

                                                                childPlan.StaffLeader = childPlan.ParentPlanKPIDetail.StaffLeader;
                                                                childPlan.SubStaffs = new List<PlanDetailSubStaff>();

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method method = new Method();
                                                                        method.Id = Guid.NewGuid();
                                                                        method.Name = m.Name;
                                                                        method.OrderNumber = m.OrderNumber;
                                                                        method.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        method.StartTime = m.StartTime;
                                                                        method.EndTime = m.EndTime;
                                                                        //method.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = method.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        method.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                method.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(method);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                foreach (PlanDetailSubStaff substaff in childPlan.ParentPlanKPIDetail.SubStaffs)
                                                                {
                                                                    PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                    {
                                                                        Density = substaff.Density,
                                                                        Staff = substaff.Staff,
                                                                        PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                    };
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.SaveOrUpdate(newPlanStaff);
                                                                    });
                                                                    childPlan.SubStaffs.Add(newPlanStaff);
                                                                }
                                                                //Sỹ xóa test
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                //Kế hoạch được kế thừa từ KH cấp cao hơn (KH năm, HK ...) có trạng thái chưa khóa và original = false
                                                                pd.IsOriginal = false;
                                                                pd.IsLocked = false;
                                                                pd.CanDelete = true; // tạm thời làm vậy để không hiện nút dừng sử dụng

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;

                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!existPld.IsDelete)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)

                                                                //Sy sua
                                                                UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                                //UpdateParentPlanDetail(pd.Id, AgentObjectTypeId, session);
                                                            }

                                                            if (pd.StaffLeader == null)
                                                            {
                                                                StaffApiController controller = new StaffApiController();
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                            }

                                                            try
                                                            {
                                                                if (pd.CurrentKPI != null)
                                                                {
                                                                    Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                    pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception e)
                                                            {

                                                            }

                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                case 2:
                                                    {

                                                    }
                                                    break;
                                                #region
                                                case 3:
                                                    {
                                                        // >1s
                                                        List<PlanKPIDetail> parentPlanKPIDetailType3 = parentPlanStaff != null ? parentPlanStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList() : new List<PlanKPIDetail>();
                                                        var parentPlanKPIDetail2Type3 = parentPlanStaff2 != null ? parentPlanStaff2.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList() : null;

                                                        IEnumerable<PlanKPIDetail> parentMergePlanKPIDetail = new List<PlanKPIDetail>();
                                                        if (parentPlanKPIDetail2Type3 != null)
                                                            parentMergePlanKPIDetail = parentPlanKPIDetail2Type3.Where(p => !parentPlanKPIDetailType3.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id));

                                                        foreach (PlanKPIDetail pldk in parentMergePlanKPIDetail)
                                                        {
                                                            parentPlanKPIDetailType3.Add(pldk);
                                                        }

                                                        planDetails = planStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null &&
                                                              pd.TargetGroupDetail.Id == t.Id).ToList();

                                                        if (planDetails.Count <= 0)
                                                        {
                                                            var planDetailMerges = planDetails.Where(p => !parentMergePlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id));
                                                            //foreach (PlanKPIDetail plk in planDetailMerges)
                                                            //    planDetails.Add(plk);
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (parentPlanKPIDetailType3.Count > 0)
                                                            {
                                                                foreach (PlanKPIDetail pld in parentPlanKPIDetailType3)
                                                                {

                                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };

                                                                    //childPlan.ParentPlanKPIDetail = new PlanKPIDetail() { Id = pld.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.CreateTime = DateTime.Now;
                                                                    childPlan.Id = Guid.NewGuid();

                                                                    childPlan.CreateTime = DateTime.Now;

                                                                    //session.Evict(pld);
                                                                    SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(childPlan);
                                                                        });
                                                                    //session.Merge(pld);
                                                                    //Sỹ xóa test
                                                                    //newPlanDetails.Add(childPlan);

                                                                    //Kế hoạch được kế thừa từ KH cấp cao hơn có trạng thái chưa khóa và original = false
                                                                    pd.IsOriginal = false;
                                                                    pd.IsLocked = false;
                                                                    pd.Id = childPlan.Id;

                                                                }
                                                            }
                                                            else
                                                            {
                                                                pd.Id = Guid.Empty;
                                                                pd.CriterionDictionaries = dictionaries;
                                                                pd.StartTime = plan.StartTime;
                                                                pd.EndTime = plan.EndTime;
                                                                pd.CanDelete = false;


                                                                PlanKPIDetail childPlan = new PlanKPIDetail();
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.StartTime = DateTime.Now;
                                                                childPlan.EndTime = DateTime.Now;
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();

                                                                childPlan.CreateTime = DateTime.Now;

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //Sỹ xóa test
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                            }
                                                            if (pd.StaffLeader == null)
                                                            {
                                                                StaffApiController controller = new StaffApiController();
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                            }
                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                        else
                                                        {
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            //PlanKPIDetail pld = planDetails.FirstOrDefault(pl => pl.PlanStaff.Id == planStaff.Id != null && pl.TargetGroupDetail.Id == t.Id);
                                                            pd = ControllerHelpers.ParsePlanDetail(null, planDetails.First(), 2, session);
                                                            pd.CriterionDictionaries = dictionaries;
                                                            pd.CanDelete = false;
                                                            foreach (PlanDetailSubStaff substaff in planDetails.First().SubStaffs)
                                                            {
                                                                pd.SubStaffNames.Add(substaff.Staff.StaffProfile.Name);
                                                            }

                                                            try
                                                            {
                                                                if (pd.TargetDetail != null)
                                                                {
                                                                    Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                    pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception e) { }
                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                    }
                                                    break;
                                                    #endregion
                                            }

                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;


                                            //criterions = session.Query<Criterion>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Department.Id == staff.Department.Id && c.PlanKPI.Id == planId).Map<CriterionPlanDTO>().ToList();
                                            //tg.Criterions = criterions;
                                            #endregion
                                        }
                                        break;
                                    //Ban giám hiệu
                                    case (int)AgentObjectTypes.BanGiamHieu:
                                        {
                                            #region Ban Giam hiệu
                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                case 0:
                                                    {

                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {

                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                case 1: // loại tổng kết
                                                    {
                                                        foreach (PlanKPIDetail pld in planDetails)
                                                        {
                                                            PlanKPIDetail pld1 = planStaff.PlanKPIDetails.SingleOrDefault(pl => pl.Id == pld.Id);
                                                            if (pld1 == null)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.MaxRecord = pld.MaxRecord; //Lưu trọng số vào database
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                //childPlan.CapMucTieu = pld.CapMucTieu;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }

                                                                childPlan.StaffLeader = childPlan.ParentPlanKPIDetail.StaffLeader;
                                                                childPlan.SubStaffs = new List<PlanDetailSubStaff>();

                                                                childPlan.Methods = new List<Method>();
                                                                foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                {
                                                                    Method method = new Method();
                                                                    method.Id = Guid.NewGuid();
                                                                    method.Name = m.Name;
                                                                    method.OrderNumber = m.OrderNumber;
                                                                    method.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    method.StartTime = m.StartTime;
                                                                    method.EndTime = m.EndTime;
                                                                    // method.LeadDepartment = new Department() { Id = m.LeadDepartment.Id };
                                                                    method.LeadDepartment = new List<Method_Department>();
                                                                    if (m.LeadDepartment != null)
                                                                    {
                                                                        foreach (var de in m.LeadDepartment)
                                                                        {
                                                                            method.LeadDepartment.Add(new Method_Department() { Id = de.Id, DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name } });
                                                                        }
                                                                    }
                                                                    method.SubStaffs = new List<Staff>();
                                                                    if (m.SubStaffs != null)
                                                                    {
                                                                        foreach (var id in m.SubStaffs)
                                                                        {
                                                                            method.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                        }
                                                                    }
                                                                    childPlan.Methods.Add(method);
                                                                }

                                                                childPlan.SubDepartments = new List<Department>();
                                                                foreach (Department subd in childPlan.ParentPlanKPIDetail.SubDepartments)
                                                                {
                                                                    childPlan.SubDepartments.Add(subd);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                foreach (PlanDetailSubStaff substaff in childPlan.ParentPlanKPIDetail.SubStaffs)
                                                                {
                                                                    PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                    {
                                                                        Density = substaff.Density,
                                                                        Staff = substaff.Staff,
                                                                        PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                    };
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.SaveOrUpdate(newPlanStaff);
                                                                    });
                                                                    childPlan.SubStaffs.Add(newPlanStaff);
                                                                }
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                //Kế hoạch được kế thừa từ KH cấp cao hơn (KH năm, HK ...) có trạng thái chưa khóa và original = false
                                                                pd.IsOriginal = false;
                                                                pd.IsLocked = false;
                                                                pd.CanDelete = true; // tạm thời làm vậy để không hiện nút dừng sử dụng

                                                                foreach (Department subd in pld.SubDepartments)
                                                                {
                                                                    //pd.SubDepartmentIds.Add(subd.Id);
                                                                    pd.SubDepartmentNames.Add(subd.Name);
                                                                }

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!pld1.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                foreach (Department dep in pld.SubDepartments)
                                                                {
                                                                    pd.SubDepartmentNames.Add(dep.Name);
                                                                }
                                                                if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;

                                                                    foreach (Department dep in pld.SubDepartments)
                                                                    {
                                                                        childPlan.SubDepartments.Add(dep);
                                                                    }
                                                                    foreach (Department subd in childPlan.SubDepartments)
                                                                    {
                                                                        //pd.SubDepartmentIds.Add(subd.Id);
                                                                        pd.SubDepartmentNames.Add(subd.Name);
                                                                    }
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.Save(childPlan);
                                                                    });
                                                                    //newPlanDetails.Add(childPlan);

                                                                    pd.Id = childPlan.Id;
                                                                    pd.ParentPlanKPIDetailId = pld.Id;
                                                                }
                                                                // pd.CapMucTieu = pld.CapMucTieu;
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                                //tạm thời admin ko chạy hàm này
                                                                //UpdateParentPlanDetail2(pld.Id, AgentObjectTypeId, factory);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                case 4: //loại khác
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();
                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }


                                                            if (planDetail != null) //đã soạn kế hoạch
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    //kiểm tra xem học kỳ có kế hoạch chưa
                                                                    if (ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id))
                                                                    {
                                                                        //nếu chưa thì parse từ kế hoạch năm
                                                                        pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                    }
                                                                    else pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 2);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else //chưa soạn kế hoạch
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    //parse KH năm vào KH học kỳ
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                case 5:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();
                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }


                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    if (ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id))
                                                                    {
                                                                        pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                    }
                                                                    else pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 2);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                            }

                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;

                                            criterions = session.Query<Criterion>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Department.Id == staff.Department.Id && c.PlanKPI.Id == planId).Map<CriterionPlanDTO>().ToList();
                                            tg.Criterions = criterions;
                                            #endregion
                                        }
                                        break;
                                    //Khoa/Viện/Trung tâm
                                    case (int)AgentObjectTypes.Khoa:
                                        {
                                            #region Cho Khoa/trung tâm
                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                #region loại thường
                                                case 0:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {

                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Nhận nhiệm vụ từ cấp trên
                                                case 6:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                // childPlan.CapMucTieu = pld.CapMucTieu;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }

                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    // childPlan.CapMucTieu = pld.CapMucTieu;
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    //  pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            //  child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }

                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                //  pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Chi tiết hóa nhiệm vụ
                                                case 7:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                //  childPlan.CapMucTieu = pld.CapMucTieu;
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    //childPlan.CapMucTieu = pld.CapMucTieu;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };

                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        child.LeadDepartment = new List<Method_Department>();
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                child.LeadDepartment.Add(new Method_Department() { Id = de.Id, DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name } });
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        childPlan.Methods.Add(child);

                                                                    }
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    //{
                                                                    result.IsDisable = false;
                                                                //if (pd.IsLocked == true)
                                                                //    pd.IsMoved = true;
                                                                //}                                                                                                   
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Loại tổng kết
                                                case 1:
                                                    {
                                                        ////Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        //Phần này bị chậm
                                                        // >2s
                                                        var CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null);
                                                        foreach (PlanKPIDetail pld in CanDeleteDetails)
                                                        {
                                                            //Tìm ra mục tiêu có tồn tại thật sư hay chưa hoặc là chỉ tồn tại ở kế hoạch năm và học kỳ
                                                            //PlanKPIDetail existPld = planStaff.PlanKPIDetails.SingleOrDefault(pl => pl.Id==pld.Id ||( pl.ParentPlanKPIDetail != null && (pl.ParentPlanKPIDetail.Id == pld.Id || (pl.ParentPlanKPIDetail.ParentPlanKPIDetail != null && pl.ParentPlanKPIDetail.ParentPlanKPIDetail.Id == pld.Id))));
                                                            PlanKPIDetail existPld = planStaff.PlanKPIDetails.FirstOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                            //Nếu không tồn tại thì tạo mới plandetail
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (existPld == null)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.MaxRecord = pld.MaxRecord; //Lưu trọng số vào database
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }

                                                                childPlan.StaffLeader = childPlan.ParentPlanKPIDetail.StaffLeader;
                                                                childPlan.SubStaffs = new List<PlanDetailSubStaff>();

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method method = new Method();
                                                                        method.Id = Guid.NewGuid();
                                                                        method.Name = m.Name;
                                                                        method.OrderNumber = m.OrderNumber;
                                                                        method.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        method.StartTime = m.StartTime;
                                                                        method.EndTime = m.EndTime;
                                                                        //method.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = method.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        method.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                method.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(method);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                foreach (PlanDetailSubStaff substaff in childPlan.ParentPlanKPIDetail.SubStaffs)
                                                                {
                                                                    PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                    {
                                                                        Density = substaff.Density,
                                                                        Staff = substaff.Staff,
                                                                        PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                    };
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.SaveOrUpdate(newPlanStaff);
                                                                    });
                                                                    childPlan.SubStaffs.Add(newPlanStaff);
                                                                }
                                                                //Sỹ xóa test
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                //Kế hoạch được kế thừa từ KH cấp cao hơn (KH năm, HK ...) có trạng thái chưa khóa và original = false
                                                                pd.IsOriginal = false;
                                                                pd.IsLocked = false;
                                                                pd.CanDelete = true; // tạm thời làm vậy để không hiện nút dừng sử dụng

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;

                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!existPld.IsDelete)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)

                                                                //Sy sua
                                                                UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                                //UpdateParentPlanDetail(pd.Id, AgentObjectTypeId, session);
                                                            }

                                                            if (pd.StaffLeader == null)
                                                            {
                                                                StaffApiController controller = new StaffApiController();
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                            }

                                                            try
                                                            {
                                                                if (pd.CurrentKPI != null)
                                                                {
                                                                    Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                    pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception e)
                                                            {

                                                            }

                                                        }
                                                    }
                                                    break;
                                                    #endregion
                                            }
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.BoMon:
                                        {
                                            #region BỘ MÔN

                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                #region loại thường
                                                case 0:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {

                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Nhận nhiệm vụ từ cấp trên
                                                case 6:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                // childPlan.CapMucTieu = pld.CapMucTieu;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }

                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    // childPlan.CapMucTieu = pld.CapMucTieu;
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    //  pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            //  child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }

                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                //  pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Chi tiết hóa nhiệm vụ
                                                case 7:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                //  childPlan.CapMucTieu = pld.CapMucTieu;
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    //childPlan.CapMucTieu = pld.CapMucTieu;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };

                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        child.LeadDepartment = new List<Method_Department>();
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                child.LeadDepartment.Add(new Method_Department() { Id = de.Id, DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name } });
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        childPlan.Methods.Add(child);

                                                                    }
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    //{
                                                                    result.IsDisable = false;
                                                                //if (pd.IsLocked == true)
                                                                //    pd.IsMoved = true;
                                                                //}                                                                                                   
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Loại tổng kết
                                                case 1:
                                                    {
                                                        ////Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);

                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                pd.FromCriterion = new CriterionDTO() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.MaxRecord = pd.MaxRecord;
                                                                childPlan.StaffLeader = cri.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = cri.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        // child.LeadDepartment = m.LeadDepartment.Id != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                foreach (PlanDetailSubStaff subs in childPlan.ParentPlanKPIDetail.SubStaffs)
                                                                {
                                                                    PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                    {
                                                                        Density = subs.Density,
                                                                        Staff = subs.Staff,
                                                                        PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                    };
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.SaveOrUpdate(newPlanStaff);
                                                                    });
                                                                    childPlan.SubStaffs.Add(subs);
                                                                }

                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                //Trưởng phòng hoặc phó phòng thay đổi criterion rồi khóa xuống, nếu có khác biệt thì cập nhật mới theo criterion
                                                                //Trưởng phòng hoặc Phó phòng ai đẩy công việc xuống sau sẽ hiện chỉ đạo là người đó
                                                                if (cri.FromPlanKPIDetail.PlanStaff.Staff != null)
                                                                {
                                                                    if (cri.FromPlanKPIDetail.PlanStaff.Staff.Id != pld.StaffLeader.Id)
                                                                    {
                                                                        pd.StaffLeader.StaffProfile = new StaffProfile { Name = cri.FromPlanKPIDetail.PlanStaff.Staff.StaffProfile.Name };
                                                                        pd.StaffLeader.Id = cri.FromPlanKPIDetail.PlanStaff.Staff.Id;
                                                                    }
                                                                }

                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pd.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                        //List<PlanKPIDetail> OutDeleteDetails = planDetails.Where(p => p.FromCriterion != null && !staffPlanCriterions.Any(dp => dp.Id == p.FromCriterion.Id)).ToList();
                                                        //foreach (PlanKPIDetail pld in OutDeleteDetails)
                                                        //{
                                                        //    PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                        //    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                        //    if (pd.IsLocked == false)
                                                        //        result.IsDisable = false;
                                                        //    tg.PlanKPIDetails.Add(pd);
                                                        //}
                                                        //Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        List<PlanKPIDetail> CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null).ToList();
                                                        foreach (PlanKPIDetail pld in CanDeleteDetails)
                                                        {

                                                            PlanKPIDetail existPld = planStaff.PlanKPIDetails.FirstOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                            //Nếu không tồn tại thì tạo mới plandetail
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (existPld == null)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!existPld.IsDelete)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                                UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                            }

                                                            try
                                                            {
                                                                if (pd.CurrentKPI != null)
                                                                {
                                                                    Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                    pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception e) { }

                                                        }
                                                    }
                                                    break;
                                                    #endregion
                                            }
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoPhongBan:
                                        {
                                            #region Phó phòng

                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                #region 0
                                                case 0:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }

                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {
                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            //pld.CurrentKPI = planDetail.CurrentKPI;
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 1
                                                case 1:
                                                    {
                                                        //Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        foreach (Criterion cri in staffPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);

                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                pd.FromCriterion = new CriterionDTO() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.MaxRecord = pd.MaxRecord;
                                                                childPlan.StaffLeader = cri.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = cri.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        // child.LeadDepartment = m.LeadDepartment.Id != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                foreach (PlanDetailSubStaff subs in childPlan.ParentPlanKPIDetail.SubStaffs)
                                                                {
                                                                    PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                    {
                                                                        Density = subs.Density,
                                                                        Staff = subs.Staff,
                                                                        PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                    };
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.SaveOrUpdate(newPlanStaff);
                                                                    });
                                                                    childPlan.SubStaffs.Add(subs);
                                                                }

                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                //Trưởng phòng hoặc phó phòng thay đổi criterion rồi khóa xuống, nếu có khác biệt thì cập nhật mới theo criterion
                                                                //Trưởng phòng hoặc Phó phòng ai đẩy công việc xuống sau sẽ hiện chỉ đạo là người đó
                                                                if (cri.FromPlanKPIDetail.PlanStaff.Staff != null)
                                                                {
                                                                    if (cri.FromPlanKPIDetail.PlanStaff.Staff.Id != pld.StaffLeader.Id)
                                                                    {
                                                                        pd.StaffLeader.StaffProfile = new StaffProfile { Name = cri.FromPlanKPIDetail.PlanStaff.Staff.StaffProfile.Name };
                                                                        pd.StaffLeader.Id = cri.FromPlanKPIDetail.PlanStaff.Staff.Id;
                                                                    }
                                                                }

                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pd.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                        List<PlanKPIDetail> OutDeleteDetails = planDetails.Where(p => p.FromCriterion != null && !staffPlanCriterions.Any(dp => dp.Id == p.FromCriterion.Id)).ToList();
                                                        foreach (PlanKPIDetail pld in OutDeleteDetails)
                                                        {
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                        //Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        List<PlanKPIDetail> CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null).ToList();
                                                        foreach (PlanKPIDetail pld in CanDeleteDetails)
                                                        {

                                                            PlanKPIDetail existPld = planStaff.PlanKPIDetails.FirstOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                            //Nếu không tồn tại thì tạo mới plandetail
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (existPld == null)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!existPld.IsDelete)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                                UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                            }

                                                            try
                                                            {
                                                                if (pd.CurrentKPI != null)
                                                                {
                                                                    Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                    pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception e) { }

                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 3
                                                case 3:
                                                    {
                                                        Criterion crtierions = session.Query<Criterion>().SingleOrDefault(c => (c.Department.Id == staff.Department.Id)
                                                             && c.TargetGroupDetail.Id == t.Id
                                                            && !c.FromPlanKPIDetail.IsDisable);

                                                        Criterion staffPlanCriterion = session.Query<Criterion>().SingleOrDefault(c => (c.Department.Id == staff.Department.Id)
                                                            && c.TargetGroupDetail.TargetGroupDetailType.Id == 3
                                                            && c.TargetGroupDetail.Id == t.Id
                                                           && !c.FromPlanKPIDetail.IsDisable);

                                                        List<PlanKPIDetail> parentPlanKPIDetailType3 = parentPlanStaff != null ? parentPlanStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList() : new List<PlanKPIDetail>();
                                                        List<PlanKPIDetail> parentPlanKPIDetail2Type3 = parentPlanStaff2 != null ? parentPlanStaff2.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList() : new List<PlanKPIDetail>();

                                                        List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2Type3.Where(p => !parentPlanKPIDetailType3.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                        foreach (PlanKPIDetail pldk in parentMergePlanKPIDetail)
                                                        {
                                                            parentPlanKPIDetailType3.Add(pldk);
                                                        }

                                                        planDetails = planStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null &&
                                                              pd.TargetGroupDetail.Id == t.Id).ToList();

                                                        if (planDetails.Count <= 0)
                                                        {
                                                            List<PlanKPIDetail> planDetailMerges = planDetails.Where(p => !parentMergePlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                            //foreach (PlanKPIDetail plk in planDetailMerges)
                                                            //    planDetails.Add(plk);
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (parentPlanKPIDetailType3.Count > 0)
                                                            {
                                                                foreach (PlanKPIDetail pld in parentPlanKPIDetailType3)
                                                                {

                                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.ParentPlanKPIDetail = new PlanKPIDetail() { Id = pld.Id };
                                                                        childPlan.PlanStaff = planStaff;

                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }
                                                                    try
                                                                    {
                                                                        if (pd.TargetDetail != null)
                                                                        {
                                                                            Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                            pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                        }
                                                                    }
                                                                    catch (Exception)
                                                                    {
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (staffPlanCriterion != null)
                                                                {
                                                                    pd = ControllerHelpers.ParsePlanDetail(null, staffPlanCriterion.FromPlanKPIDetail, 2, session);
                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(staffPlanCriterion.FromPlanKPIDetail);
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.ParentPlanKPIDetail = new PlanKPIDetail() { Id = staffPlanCriterion.FromPlanKPIDetail.Id };
                                                                        childPlan.PlanStaff = planStaff;


                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        childPlan.StaffLeader = staffPlanCriterion.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = staffPlanCriterion.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            //session1.Evict(staffPlanCriterion.FromPlanKPIDetail);
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }

                                                                    //Kế hoạch được phân công từ cấp trên có trạng thái chưa khóa và original = false
                                                                    pd.IsLocked = false;
                                                                    pd.IsOriginal = false;
                                                                }
                                                                else
                                                                {
                                                                    pd.Id = Guid.Empty;
                                                                    pd.CriterionDictionaries = dictionaries;
                                                                    pd.StartTime = plan.StartTime;
                                                                    pd.EndTime = plan.EndTime;
                                                                    pd.CanDelete = false;

                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = new PlanKPIDetail();
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.StartTime = DateTime.Now;
                                                                        childPlan.EndTime = DateTime.Now;
                                                                        childPlan.PlanStaff = planStaff;
                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }
                                                                }
                                                                try
                                                                {
                                                                    if (pd.TargetDetail != null)
                                                                    {
                                                                        Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                        pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception)
                                                                {
                                                                }
                                                            }

                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                        else
                                                        {
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            //PlanKPIDetail pld = planDetails.FirstOrDefault(pl => pl.PlanStaff.Id == planStaff.Id != null && pl.TargetGroupDetail.Id == t.Id);
                                                            if (planDetails.First().TargetDetail == null && staffPlanCriterion != null)
                                                            {
                                                                pd = ControllerHelpers.ParsePlanDetail(null, staffPlanCriterion.FromPlanKPIDetail, 2, session);
                                                            }
                                                            else pd = ControllerHelpers.ParsePlanDetail(null, planDetails.First(), 2, session);

                                                            pd.CriterionDictionaries = dictionaries;
                                                            pd.CanDelete = false;
                                                            try
                                                            {
                                                                if (pd.TargetDetail != null)
                                                                {
                                                                    Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                    pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception)
                                                            {
                                                            }

                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 6
                                                case 6:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in staffPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    //  pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }
                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                //pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 7
                                                case 7:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in staffPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //  child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    //  pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }
                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                // pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                    #endregion
                                            }
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;
                                            //criterions = session.Query<Criterion>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Department.Id == staff.Department.Id && c.PlanKPI.Id == planId).Map<CriterionPlanDTO>().ToList();
                                            //tg.Criterions = criterions;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoKhoa:
                                        {
                                            #region Cho Phó Khoa/trung tâm
                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                #region 0
                                                case 0:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }

                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {
                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            //pld.CurrentKPI = planDetail.CurrentKPI;
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 1
                                                case 1:
                                                    {
                                                        //Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        List<PlanKPIDetail> CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null).ToList();
                                                        foreach (PlanKPIDetail pld in CanDeleteDetails)
                                                        {

                                                            PlanKPIDetail existPld = planStaff.PlanKPIDetails.FirstOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                            //Nếu không tồn tại thì tạo mới plandetail
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (existPld == null)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!existPld.IsDelete)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                                UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                            }

                                                            try
                                                            {
                                                                if (pd.CurrentKPI != null)
                                                                {
                                                                    Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                    pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception e) { }

                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 3
                                                case 3:
                                                    {
                                                        Criterion crtierions = session.Query<Criterion>().SingleOrDefault(c => (c.Department.Id == staff.Department.Id)
                                                             && c.TargetGroupDetail.Id == t.Id
                                                            && !c.FromPlanKPIDetail.IsDisable);

                                                        Criterion staffPlanCriterion = session.Query<Criterion>().SingleOrDefault(c => (c.Department.Id == staff.Department.Id)
                                                            && c.TargetGroupDetail.TargetGroupDetailType.Id == 3
                                                            && c.TargetGroupDetail.Id == t.Id
                                                           && !c.FromPlanKPIDetail.IsDisable);

                                                        List<PlanKPIDetail> parentPlanKPIDetailType3 = parentPlanStaff != null ? parentPlanStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList() : new List<PlanKPIDetail>();
                                                        List<PlanKPIDetail> parentPlanKPIDetail2Type3 = parentPlanStaff2 != null ? parentPlanStaff2.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null && pd.TargetGroupDetail.Id == t.Id).ToList() : new List<PlanKPIDetail>();

                                                        List<PlanKPIDetail> parentMergePlanKPIDetail = parentPlanKPIDetail2Type3.Where(p => !parentPlanKPIDetailType3.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();

                                                        foreach (PlanKPIDetail pldk in parentMergePlanKPIDetail)
                                                        {
                                                            parentPlanKPIDetailType3.Add(pldk);
                                                        }

                                                        planDetails = planStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail != null &&
                                                              pd.TargetGroupDetail.Id == t.Id).ToList();

                                                        if (planDetails.Count <= 0)
                                                        {
                                                            List<PlanKPIDetail> planDetailMerges = planDetails.Where(p => !parentMergePlanKPIDetail.Any(p2 => ControllerHelpers.GetOriginalParentPlanKPIDetail(p2, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id)).ToList();
                                                            //foreach (PlanKPIDetail plk in planDetailMerges)
                                                            //    planDetails.Add(plk);
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (parentPlanKPIDetailType3.Count > 0)
                                                            {
                                                                foreach (PlanKPIDetail pld in parentPlanKPIDetailType3)
                                                                {

                                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.ParentPlanKPIDetail = new PlanKPIDetail() { Id = pld.Id };
                                                                        childPlan.PlanStaff = planStaff;

                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }
                                                                    try
                                                                    {
                                                                        if (pd.TargetDetail != null)
                                                                        {
                                                                            Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                            pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                        }
                                                                    }
                                                                    catch (Exception)
                                                                    {
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (staffPlanCriterion != null)
                                                                {
                                                                    pd = ControllerHelpers.ParsePlanDetail(null, staffPlanCriterion.FromPlanKPIDetail, 2, session);
                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(staffPlanCriterion.FromPlanKPIDetail);
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.ParentPlanKPIDetail = new PlanKPIDetail() { Id = staffPlanCriterion.FromPlanKPIDetail.Id };
                                                                        childPlan.PlanStaff = planStaff;


                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        childPlan.StaffLeader = staffPlanCriterion.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = staffPlanCriterion.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            //session1.Evict(staffPlanCriterion.FromPlanKPIDetail);
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }

                                                                    //Kế hoạch được phân công từ cấp trên có trạng thái chưa khóa và original = false
                                                                    pd.IsLocked = false;
                                                                    pd.IsOriginal = false;
                                                                }
                                                                else
                                                                {
                                                                    pd.Id = Guid.Empty;
                                                                    pd.CriterionDictionaries = dictionaries;
                                                                    pd.StartTime = plan.StartTime;
                                                                    pd.EndTime = plan.EndTime;
                                                                    pd.CanDelete = false;

                                                                    if (!session.Query<PlanKPIDetail>().Any(q => q.PlanStaff != null && q.PlanStaff.Id == planStaff.Id && q.TargetGroupDetail != null && q.TargetGroupDetail.Id == t.Id))
                                                                    {
                                                                        PlanKPIDetail childPlan = new PlanKPIDetail();
                                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                        childPlan.StartTime = DateTime.Now;
                                                                        childPlan.EndTime = DateTime.Now;
                                                                        childPlan.PlanStaff = planStaff;
                                                                        childPlan.Id = Guid.NewGuid();

                                                                        childPlan.CreateTime = DateTime.Now;
                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(childPlan);
                                                                        });
                                                                        //newPlanDetails.Add(childPlan);
                                                                        pd.Id = childPlan.Id;
                                                                    }
                                                                }
                                                                try
                                                                {
                                                                    if (pd.TargetDetail != null)
                                                                    {
                                                                        Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                        pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception)
                                                                {
                                                                }
                                                            }

                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                        else
                                                        {
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            //PlanKPIDetail pld = planDetails.FirstOrDefault(pl => pl.PlanStaff.Id == planStaff.Id != null && pl.TargetGroupDetail.Id == t.Id);
                                                            if (planDetails.First().TargetDetail == null && staffPlanCriterion != null)
                                                            {
                                                                pd = ControllerHelpers.ParsePlanDetail(null, staffPlanCriterion.FromPlanKPIDetail, 2, session);
                                                            }
                                                            else pd = ControllerHelpers.ParsePlanDetail(null, planDetails.First(), 2, session);

                                                            pd.CriterionDictionaries = dictionaries;
                                                            pd.CanDelete = false;
                                                            try
                                                            {
                                                                if (pd.TargetDetail != null)
                                                                {
                                                                    Guid targetDetailId = new Guid(pd.TargetDetail);
                                                                    pd.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                                                }
                                                            }
                                                            catch (Exception)
                                                            {
                                                            }

                                                            if (pd.IsLocked == false)
                                                                result.IsDisable = false;
                                                            tg.PlanKPIDetails.Add(pd);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 6
                                                case 6:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in staffPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    //  pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }
                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                //pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region 7
                                                case 7:
                                                    {
                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in staffPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, cri.FromPlanKPIDetail, 2, session, planParentDetail);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //  child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                Method_Department md = new Method_Department();
                                                                                md.Id = Guid.NewGuid();
                                                                                md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                md.MethodId = new Method() { Id = child.Id };
                                                                                md.DiemSo = de.DiemSo;
                                                                                session1.Save(md);
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        session1.Save(child);
                                                                    }

                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }

                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    childPlan.ManageCode = new ManageCode() { Id = cri.FromPlanKPIDetail.ManageCode.Id };
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                    //  pd.IsMoved = childPlan.IsMoved;
                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }

                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        //Lưu method nhận từ cấp trên vào db
                                                                        childPlan.Methods = new List<Method>();
                                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                        {
                                                                            Method child = new Method();
                                                                            child.Id = Guid.NewGuid();
                                                                            child.Name = m.Name;
                                                                            child.OrderNumber = m.OrderNumber;
                                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                            child.StartTime = m.StartTime;
                                                                            child.EndTime = m.EndTime;
                                                                            // child.LeadDepartment = m.LeadDepartment != null ? new Department() { Id = m.LeadDepartment.Id } : null;
                                                                            if (m.LeadDepartment != null)
                                                                            {
                                                                                foreach (var de in m.LeadDepartment)
                                                                                {
                                                                                    Method_Department md = new Method_Department();
                                                                                    md.Id = Guid.NewGuid();
                                                                                    md.DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name };
                                                                                    md.MethodId = new Method() { Id = child.Id };
                                                                                    md.DiemSo = de.DiemSo;
                                                                                    session1.Save(md);
                                                                                }
                                                                            }
                                                                            child.SubStaffs = new List<Staff>();
                                                                            if (m.SubStaffs != null)
                                                                            {
                                                                                foreach (var id in m.SubStaffs)
                                                                                {
                                                                                    child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                                }
                                                                            }
                                                                            session1.Save(child);

                                                                        }

                                                                        session1.Save(childPlan);
                                                                    });


                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                    }

                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(cri, pld, 2, session, planParentDetail);
                                                                // pd.IsMoved = pld.IsMoved;

                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                    #endregion
                                            }
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoBoMon:
                                        {
                                            #region Phó BỘ MÔN


                                            #region loại thường
                                            foreach (Criterion cri in departmentPlanCriterions)
                                            {
                                                PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                if (pld == null && !planStaff.IsLocked)
                                                {
                                                    PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, null, 1, session);
                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                    childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                    childPlan.PlanStaff = planStaff;
                                                    childPlan.Id = Guid.NewGuid();
                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                    childPlan.StaffLeader = cri.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = cri.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                    //pd.BasicResource = string.Empty;
                                                    pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                    {
                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                        child.Id = Guid.NewGuid();
                                                        child.Name = kpi.Name;
                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                        child.OrderNumber = kpi.OrderNumber;
                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                        parent.Id = kpi.Id;
                                                        parent.Name = kpi.Name;
                                                        parent.OrderNumber = kpi.OrderNumber;
                                                        pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                    }
                                                    //Lưu method nhận từ cấp trên vào db
                                                    childPlan.Methods = new List<Method>();
                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                    {
                                                        Method child = new Method();
                                                        child.Id = Guid.NewGuid();
                                                        child.Name = m.Name;
                                                        child.OrderNumber = m.OrderNumber;
                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                        child.StartTime = m.StartTime;
                                                        child.EndTime = m.EndTime;
                                                        childPlan.Methods.Add(child);
                                                    }
                                                    SessionManager.DoWork(session1 =>
                                                    {
                                                        session1.Save(childPlan);
                                                    });
                                                    //newPlanDetails.Add(childPlan);
                                                    pd.Id = childPlan.Id;

                                                    //Kế hoạch mới từ criterion mặc định substaff rỗng
                                                    pd.SubStaffNames = new List<string>();

                                                    if (pd.IsLocked == false)
                                                        result.IsDisable = false;
                                                    tg.PlanKPIDetails.Add(pd);
                                                }
                                                else if (pld != null && !pld.IsDelete)
                                                {
                                                    PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                    if (pld.PlanStaff.Id != planStaff.Id)
                                                    {
                                                        PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                        childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                        childPlan.ParentPlanKPIDetail = pld;
                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                        childPlan.PlanStaff = planStaff;
                                                        childPlan.Id = Guid.NewGuid();
                                                        childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                        pd.OrderNumber = childPlan.OrderNumber;
                                                        childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                        childPlan.StaffLeader = new Staff { Id = staff.Id };

                                                        foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                        {
                                                            PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                            child.Id = Guid.NewGuid();
                                                            child.Name = kpi.Name;
                                                            child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                            child.OrderNumber = kpi.OrderNumber;
                                                            childPlan.PlanKPIDetail_KPIs.Add(child);

                                                            PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                            parent.Id = kpi.Id;
                                                            parent.Name = kpi.Name;

                                                        }
                                                        //Lưu method nhận từ cấp trên vào db
                                                        childPlan.Methods = new List<Method>();
                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                        {
                                                            Method child = new Method();
                                                            child.Id = Guid.NewGuid();
                                                            child.Name = m.Name;
                                                            child.OrderNumber = m.OrderNumber;
                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                            child.StartTime = m.StartTime;
                                                            child.EndTime = m.EndTime;
                                                            childPlan.Methods.Add(child);
                                                        }
                                                        SessionManager.DoWork(session1 =>
                                                        {
                                                            session1.Save(childPlan);
                                                        });
                                                        if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                        {
                                                            foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                            {
                                                                PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                {
                                                                    Density = stf.Density,
                                                                    Staff = stf.Staff,
                                                                    PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                };
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.SaveOrUpdate(newPlanStaff);
                                                                });
                                                                childPlan.SubStaffs.Add(stf);
                                                            }
                                                            //foreach (Staff stf in childPlan.SubStaffs)
                                                            //{
                                                            //    //pd.SubDepartmentIds.Add(subd.Id);
                                                            //    pd.SubStaffNames.Add(stf.StaffProfile.Name);
                                                            //}
                                                        }

                                                        //newPlanDetails.Add(childPlan);

                                                        pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                        pd.Id = childPlan.Id;
                                                    }
                                                    else
                                                        pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);



                                                    pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                    try
                                                    {
                                                        if (pd.CurrentKPI != null)
                                                        {
                                                            Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                            pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                        }
                                                    }
                                                    catch (Exception e)
                                                    {

                                                    }

                                                    if (pd.StaffLeader == null)
                                                    {
                                                        StaffApiController controller = new StaffApiController();
                                                        pd.StaffLeader = new StaffDTO();
                                                        pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                    }
                                                    pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                    PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                    foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                    {
                                                        PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                        kd.Id = kpi.Id;
                                                        kd.Name = kpi.Name;
                                                        pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                    }
                                                    if (parentpl.StaffLeader != null)
                                                    {
                                                        pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                        pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                    }
                                                    //foreach (Staff substaff in pld.SubStaffs)
                                                    //{
                                                    //    pd.SubStaffNames.Add(substaff.StaffProfile.Name);
                                                    //}

                                                    if (pd.IsLocked == false)
                                                        result.IsDisable = false;
                                                    tg.PlanKPIDetails.Add(pd);
                                                }
                                            }

                                            //Danh sách planDetail tự tạo không kế thừa cấp trên
                                            List<PlanKPIDetail> CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null).ToList();
                                            foreach (PlanKPIDetail pld in CanDeleteDetails)
                                            {

                                                PlanKPIDetail existPld = planStaff.PlanKPIDetails.SingleOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                //Nếu không tồn tại thì tạo mới plandetail
                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                if (existPld == null)
                                                {
                                                    pd = new PlanKPIMakingDetailDTO();
                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                    childPlan.ParentPlanKPIDetail = pld;
                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                    childPlan.PlanStaff = planStaff;
                                                    childPlan.Id = Guid.NewGuid();
                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                    {
                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                        child.Id = Guid.NewGuid();
                                                        child.Name = kpi.Name;
                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                        child.OrderNumber = kpi.OrderNumber;
                                                        childPlan.PlanKPIDetail_KPIs.Add(child);
                                                    }
                                                    SessionManager.DoWork(session1 =>
                                                    {
                                                        session1.Save(childPlan);
                                                    });
                                                    //newPlanDetails.Add(childPlan);
                                                    pd.Id = childPlan.Id;

                                                    //Kế hoạch được kế thừa từ KH cấp cao hơn (KH năm, HK ...) có trạng thái chưa khóa và original = false
                                                    pd.IsOriginal = false;
                                                    pd.IsLocked = false;
                                                    pd.CanDelete = true; // tạm thời làm vậy để không hiện nút dừng sử dụng

                                                    if (pd.IsLocked == false)
                                                        result.IsDisable = false;
                                                    tg.PlanKPIDetails.Add(pd);
                                                }
                                                else if (!existPld.IsDelete)
                                                {
                                                    pd = new PlanKPIMakingDetailDTO();
                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                    //Subdept hiện tại lấy bộ môn, nhưng hiển thị cột đơn vị phối hợp thực hiện, do đó gắn rỗng cho SubdeptNames
                                                    pd.SubDepartmentNames = new List<string>();

                                                    if (pd.IsLocked == false)
                                                        result.IsDisable = false;
                                                    tg.PlanKPIDetails.Add(pd);

                                                    //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                    UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                }
                                            }
                                            #endregion

                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;


                                            //criterions = session.Query<Criterion>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Department.Id == staff.Department.Id && c.PlanKPI.Id == planId).Map<CriterionPlanDTO>().ToList();
                                            //tg.Criterions = criterions;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.HieuTruong:
                                        {
                                            #region Hiệu trưởng

                                            //List<Criterion> departmentPlanCriterions = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id && c.TargetGroupDetail.Id == t.Id
                                            //    ).ToList();

                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                #region Loại thường
                                                case 0:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {

                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Loại tổng kết
                                                case 1:
                                                    {

                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, null, 1, session);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                //Lưu method nhận từ cấp trên vào db
                                                                childPlan.Methods = new List<Method>();
                                                                foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                {
                                                                    Method child = new Method();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = m.Name;
                                                                    child.OrderNumber = m.OrderNumber;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.StartTime = m.StartTime;
                                                                    child.EndTime = m.EndTime;
                                                                    //child.LeadDepartment = new Department() { Id = m.LeadDepartment.Id };
                                                                    child.LeadDepartment = new List<Method_Department>();
                                                                    if (m.LeadDepartment != null)
                                                                    {
                                                                        foreach (var de in m.LeadDepartment)
                                                                        {
                                                                            child.LeadDepartment.Add(new Method_Department() { Id = de.Id, DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name } });
                                                                        }
                                                                    }
                                                                    child.SubStaffs = new List<Staff>();
                                                                    if (m.SubStaffs != null)
                                                                    {
                                                                        foreach (var id in m.SubStaffs)
                                                                        {
                                                                            child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                        }
                                                                    }
                                                                    childPlan.Methods.Add(child);
                                                                }

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };

                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        //child.LeadDepartment = new Department() { Id = m.LeadDepartment.Id };
                                                                        child.LeadDepartment = new List<Method_Department>();
                                                                        if (m.LeadDepartment != null)
                                                                        {
                                                                            foreach (var de in m.LeadDepartment)
                                                                            {
                                                                                child.LeadDepartment.Add(new Method_Department() { Id = de.Id, DepartmentId = new Department() { Id = de.DepartmentId.Id, Name = de.DepartmentId.Name } });
                                                                            }
                                                                        }
                                                                        child.SubStaffs = new List<Staff>();
                                                                        if (m.SubStaffs != null)
                                                                        {
                                                                            foreach (var id in m.SubStaffs)
                                                                            {
                                                                                child.SubStaffs.Add(new Staff() { Id = id.Id });
                                                                            }
                                                                        }
                                                                        childPlan.Methods.Add(child);
                                                                    }
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.Save(childPlan);
                                                                    });
                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                        //foreach (Staff stf in childPlan.SubStaffs)
                                                                        //{
                                                                        //    //pd.SubDepartmentIds.Add(subd.Id);
                                                                        //    pd.SubStaffNames.Add(stf.StaffProfile.Name);
                                                                        //}
                                                                    }

                                                                    //newPlanDetails.Add(childPlan);

                                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);



                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //foreach (Staff substaff in pld.SubStaffs)
                                                                //{
                                                                //    pd.SubStaffNames.Add(substaff.StaffProfile.Name);
                                                                //}

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);


                                                                //PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                //pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";
                                                                //pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                //PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pd.Id);
                                                                //foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                //{
                                                                //    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                //    kd.Id = kpi.Id;
                                                                //    kd.Name = kpi.Name;
                                                                //    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                //}
                                                                //if (pld.ParentPlanKPIDetail.StaffLeader != null)
                                                                //{
                                                                //    pd.AdminLeaderId = pld.ParentPlanKPIDetail.StaffLeader.Id;
                                                                //    pd.AdminLeaderName = pld.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                //}
                                                                ////Gắn rỗng cho SubDeptIds
                                                                ////pd.SubDepartmentIds = new List<Guid>();




                                                                //tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                        //Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        List<PlanKPIDetail> CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null && !p.IsDelete).ToList();
                                                        foreach (PlanKPIDetail pld in CanDeleteDetails)
                                                        {

                                                            PlanKPIDetail existPld = planStaff.PlanKPIDetails.SingleOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                            //Nếu không tồn tại thì tạo mới plandetail
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (existPld == null)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                //Kế hoạch được kế thừa từ KH cấp cao hơn (KH năm, HK ...) có trạng thái chưa khóa và original = false
                                                                pd.IsOriginal = false;
                                                                pd.IsLocked = false;
                                                                pd.CanDelete = true; // tạm thời làm vậy để không hiện nút dừng sử dụng

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!existPld.IsDelete)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                //Gắn rỗng cho cột đơn vị phối hợp thực hiện
                                                                pd.SubDepartmentNames = new List<string>();

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                                UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Loại khác
                                                case 4: //loại khác
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();
                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }


                                                            if (planDetail != null) //đã soạn kế hoạch
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    //kiểm tra xem học kỳ có kế hoạch chưa
                                                                    if (ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id))
                                                                    {
                                                                        //nếu chưa thì parse từ kế hoạch năm
                                                                        pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                    }
                                                                    else pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 2);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else //chưa soạn kế hoạch
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    //parse KH năm vào KH học kỳ
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Loại nghiên cứu khoa học
                                                case 5:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();
                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }


                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    if (ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id))
                                                                    {
                                                                        pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                    }
                                                                    else pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 2);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                    #endregion
                                            }
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;
                                            #endregion
                                        }
                                        break;
                                    case (int)AgentObjectTypes.PhoHieuTruong:
                                        {
                                            #region Cho Phó Hiệu trưởng
                                            switch (t.TargetGroupDetailType.Id)
                                            {
                                                #region Loại thường
                                                case 0:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();

                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }

                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id) && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            switch (pld.CriterionTypeId)
                                                            {
                                                                case 2:
                                                                    {

                                                                    }
                                                                    break;
                                                                case 3:
                                                                    {
                                                                        List<CriterionDictionaryDTO> dictionaryDTOs = session.Query<CriterionDictionary>().Where(d => d.ProfessorCriterion.Id == crd.Id && d.StudyYears.Any(q => q.Id == plan.StudyYear1.Id)).Map<CriterionDictionaryDTO>().ToList();
                                                                        pld.CriterionDictionaries = dictionaryDTOs.OrderBy(c => c.OrderNumber).ToList();
                                                                        if (planDetail == null)
                                                                            pld.CurrentKPI = pld.CriterionDictionaries.Count > 0 ? pld.CriterionDictionaries.FirstOrDefault().Id.ToString() : "";
                                                                        pld.OrderNumber = crd.OrderNumber;
                                                                    }
                                                                    break;
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Loại tổng kết
                                                case 1:
                                                    {

                                                        //Lấy từ criterion lúc chưa có kế hoạch
                                                        foreach (Criterion cri in departmentPlanCriterions)
                                                        {
                                                            PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                            PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                            if (pld == null && !planStaff.IsLocked)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, null, 1, session);
                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                childPlan.StaffLeader = new Staff { Id = staff.Id };
                                                                //pd.BasicResource = string.Empty;
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                    parent.Id = kpi.Id;
                                                                    parent.Name = kpi.Name;
                                                                    parent.OrderNumber = kpi.OrderNumber;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                                }
                                                                //Lưu method nhận từ cấp trên vào db
                                                                childPlan.Methods = new List<Method>();
                                                                foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                {
                                                                    Method child = new Method();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = m.Name;
                                                                    child.OrderNumber = m.OrderNumber;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.StartTime = m.StartTime;
                                                                    child.EndTime = m.EndTime;
                                                                    childPlan.Methods.Add(child);
                                                                }

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;
                                                                if (childPlan.ParentPlanKPIDetail.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = childPlan.ParentPlanKPIDetail.StaffLeader.Id;
                                                                    pd.AdminLeaderName = childPlan.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //mặc định ban đầu chỉ đạo là bản thân
                                                                pd.StaffLeader = new StaffDTO();
                                                                pd.StaffLeader.Id = staff.Id;
                                                                pd.StaffLeader.StaffProfile = new StaffProfile() { Id = staff.StaffProfile.Id, Name = staff.StaffProfile.Name };

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (pld != null && !pld.IsDelete)
                                                            {
                                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                                if (pld.PlanStaff.Id != planStaff.Id)
                                                                {
                                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                                    childPlan.ParentPlanKPIDetail = pld;
                                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                    childPlan.PlanStaff = planStaff;
                                                                    childPlan.Id = Guid.NewGuid();
                                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                    childPlan.StaffLeader = new Staff { Id = staff.Id };

                                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                    {
                                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = kpi.Name;
                                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.OrderNumber = kpi.OrderNumber;
                                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                                        parent.Id = kpi.Id;
                                                                        parent.Name = kpi.Name;

                                                                    }
                                                                    //Lưu method nhận từ cấp trên vào db
                                                                    childPlan.Methods = new List<Method>();
                                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                                    {
                                                                        Method child = new Method();
                                                                        child.Id = Guid.NewGuid();
                                                                        child.Name = m.Name;
                                                                        child.OrderNumber = m.OrderNumber;
                                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                        child.StartTime = m.StartTime;
                                                                        child.EndTime = m.EndTime;
                                                                        childPlan.Methods.Add(child);
                                                                    }
                                                                    SessionManager.DoWork(session1 =>
                                                                    {
                                                                        session1.Save(childPlan);
                                                                    });
                                                                    if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                                    {
                                                                        foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                                        {
                                                                            PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                            {
                                                                                Density = stf.Density,
                                                                                Staff = stf.Staff,
                                                                                PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                            };
                                                                            SessionManager.DoWork(session1 =>
                                                                            {
                                                                                session1.SaveOrUpdate(newPlanStaff);
                                                                            });
                                                                            childPlan.SubStaffs.Add(stf);
                                                                        }
                                                                        //foreach (Staff stf in childPlan.SubStaffs)
                                                                        //{
                                                                        //    //pd.SubDepartmentIds.Add(subd.Id);
                                                                        //    pd.SubStaffNames.Add(stf.StaffProfile.Name);
                                                                        //}
                                                                    }

                                                                    //newPlanDetails.Add(childPlan);

                                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                    pd.Id = childPlan.Id;
                                                                }
                                                                else
                                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);



                                                                pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                                try
                                                                {
                                                                    if (pd.CurrentKPI != null)
                                                                    {
                                                                        Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                                        pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                                    }
                                                                }
                                                                catch (Exception e)
                                                                {

                                                                }

                                                                if (pd.StaffLeader == null)
                                                                {
                                                                    StaffApiController controller = new StaffApiController();
                                                                    pd.StaffLeader = new StaffDTO();
                                                                    pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                                }
                                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                    kd.Id = kpi.Id;
                                                                    kd.Name = kpi.Name;
                                                                    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                }
                                                                if (parentpl.StaffLeader != null)
                                                                {
                                                                    pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                                    pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                                }
                                                                //foreach (Staff substaff in pld.SubStaffs)
                                                                //{
                                                                //    pd.SubStaffNames.Add(substaff.StaffProfile.Name);
                                                                //}

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);


                                                                //PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                //pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";
                                                                //pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                                //PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pd.Id);
                                                                //foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                                //{
                                                                //    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                                //    kd.Id = kpi.Id;
                                                                //    kd.Name = kpi.Name;
                                                                //    pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                                //}
                                                                //if (pld.ParentPlanKPIDetail.StaffLeader != null)
                                                                //{
                                                                //    pd.AdminLeaderId = pld.ParentPlanKPIDetail.StaffLeader.Id;
                                                                //    pd.AdminLeaderName = pld.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                                                                //}
                                                                ////Gắn rỗng cho SubDeptIds
                                                                ////pd.SubDepartmentIds = new List<Guid>();




                                                                //tg.PlanKPIDetails.Add(pd);
                                                            }
                                                        }
                                                        //Danh sách planDetail tự tạo không kế thừa cấp trên
                                                        List<PlanKPIDetail> CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null && !p.IsDelete).ToList();
                                                        foreach (PlanKPIDetail pld in CanDeleteDetails)
                                                        {

                                                            PlanKPIDetail existPld = planStaff.PlanKPIDetails.SingleOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                            //Nếu không tồn tại thì tạo mới plandetail
                                                            PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                            if (existPld == null)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                                childPlan.ParentPlanKPIDetail = pld;
                                                                childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                                childPlan.PlanStaff = planStaff;
                                                                childPlan.Id = Guid.NewGuid();
                                                                childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                                pd.OrderNumber = childPlan.OrderNumber;
                                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                                {
                                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                                    child.Id = Guid.NewGuid();
                                                                    child.Name = kpi.Name;
                                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                                    child.OrderNumber = kpi.OrderNumber;
                                                                    childPlan.PlanKPIDetail_KPIs.Add(child);
                                                                }

                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.Save(childPlan);
                                                                });
                                                                //newPlanDetails.Add(childPlan);
                                                                pd.Id = childPlan.Id;

                                                                //Kế hoạch được kế thừa từ KH cấp cao hơn (KH năm, HK ...) có trạng thái chưa khóa và original = false
                                                                pd.IsOriginal = false;
                                                                pd.IsLocked = false;
                                                                pd.CanDelete = true; // tạm thời làm vậy để không hiện nút dừng sử dụng

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);
                                                            }
                                                            else if (!existPld.IsDelete)
                                                            {
                                                                pd = new PlanKPIMakingDetailDTO();
                                                                pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                                //Gắn rỗng cho cột đơn vị phối hợp thực hiện
                                                                pd.SubDepartmentNames = new List<string>();

                                                                if (pd.IsLocked == false)
                                                                    result.IsDisable = false;
                                                                tg.PlanKPIDetails.Add(pd);

                                                                //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                                UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                            }
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Loại khác
                                                case 4: //loại khác
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();
                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }


                                                            if (planDetail != null) //đã soạn kế hoạch
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    //kiểm tra xem học kỳ có kế hoạch chưa
                                                                    if (ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id))
                                                                    {
                                                                        //nếu chưa thì parse từ kế hoạch năm
                                                                        pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                    }
                                                                    else pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 2);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else //chưa soạn kế hoạch
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    //parse KH năm vào KH học kỳ
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                #endregion
                                                #region Loại nghiên cứu khoa học
                                                case 5:
                                                    {
                                                        List<ProfessorCriterionPlanDTO> pCriterions = session.Query<ProfessorCriterion>().Where(c => c.TargetGroupDetail.Id == t.Id).Map<ProfessorCriterionPlanDTO>().ToList();
                                                        tg.ProfessorCriterions = pCriterions.Where(c => c.StudyYears.Any(y => y.Id == plan.StudyYear1.Id)).ToList();

                                                        PlanKPIDetail planDetail = null;
                                                        foreach (ProfessorCriterionPlanDTO crd in tg.ProfessorCriterions)
                                                        {
                                                            planDetail = null;
                                                            PlanKPIDetail parentPlanDetail = null;
                                                            PlanKPIMakingDetailDTO pld = new PlanKPIMakingDetailDTO();
                                                            if (planStaff != null)
                                                            {
                                                                planDetail = planDetails.FirstOrDefault(p => p.PlanStaff.Id == planStaff.Id && p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                                parentPlanDetail = parentPlanKPIDetail.SingleOrDefault(p => p.FromProfessorCriterion != null && p.FromProfessorCriterion.Id == crd.Id);
                                                            }


                                                            if (planDetail != null)
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    if (ControllerHelpers.CheckParentPlanDetail(planDetail, parentPlanDetail, t.TargetGroupDetailType.Id))
                                                                    {
                                                                        pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 1);
                                                                    }
                                                                    else pld = ControllerHelpers.ParsePlanDetailFromParent(crd, planDetail, parentPlanDetail, plan, t, planStaff, session, 2);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, null, null, null, session, 1);
                                                            }
                                                            else
                                                            {
                                                                if (plan.PlanType.Id == 2 && parentPlanDetail != null && ControllerHelpers.CheckParentPlanDetailTime(plan.StartTime, plan.EndTime, parentPlanDetail.StartTime, parentPlanDetail.EndTime))
                                                                {
                                                                    pld = ControllerHelpers.ParsePlanDetailFromParent(crd, null, parentPlanDetail, plan, t, planStaff, session, 3);
                                                                }
                                                                else pld = ControllerHelpers.ParsePlanDetailFromProfessorCriterion(crd, planDetail, plan, t, planStaff, session, 2);
                                                            }
                                                            pld.Tooltip = crd.Tooltip;

                                                            tg.PlanKPIDetails.Add(pld);
                                                        }
                                                    }
                                                    break;
                                                    #endregion
                                            }
                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;
                                            #endregion

                                        }
                                        break;
                                    case (int)AgentObjectTypes.Nganh:
                                        {
                                            #region TRƯỞNG NGÀNH

                                            #region loại thường
                                            foreach (Criterion cri in departmentPlanCriterions)
                                            {
                                                PlanKPIDetail pld = planDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                                PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                                //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                                if (pld == null && !planStaff.IsLocked)
                                                {
                                                    PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(cri, null, 1, session);
                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                    childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                    childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                    childPlan.PlanStaff = planStaff;
                                                    childPlan.Id = Guid.NewGuid();
                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                    childPlan.StaffLeader = cri.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = cri.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                    //pd.BasicResource = string.Empty;
                                                    pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                    {
                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                        child.Id = Guid.NewGuid();
                                                        child.Name = kpi.Name;
                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                        child.OrderNumber = kpi.OrderNumber;
                                                        childPlan.PlanKPIDetail_KPIs.Add(child);

                                                        PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                        parent.Id = kpi.Id;
                                                        parent.Name = kpi.Name;
                                                        parent.OrderNumber = kpi.OrderNumber;
                                                        pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                    }
                                                    //Lưu method nhận từ cấp trên vào db
                                                    childPlan.Methods = new List<Method>();
                                                    foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                    {
                                                        Method child = new Method();
                                                        child.Id = Guid.NewGuid();
                                                        child.Name = m.Name;
                                                        child.OrderNumber = m.OrderNumber;
                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                        child.StartTime = m.StartTime;
                                                        child.EndTime = m.EndTime;
                                                        childPlan.Methods.Add(child);
                                                    }
                                                    childPlan.ManageCode = null; //Bộ môn nhận KH từ trên không lưu Mã Công Việc
                                                    SessionManager.DoWork(session1 =>
                                                        {
                                                            session1.Save(childPlan);
                                                        });
                                                    //newPlanDetails.Add(childPlan);
                                                    pd.Id = childPlan.Id;

                                                    //Kế hoạch mới từ criterion mặc định substaff rỗng
                                                    pd.SubStaffNames = new List<string>();

                                                    if (pd.IsLocked == false)
                                                        result.IsDisable = false;
                                                    tg.PlanKPIDetails.Add(pd);
                                                }
                                                else if (pld != null && !pld.IsDelete)
                                                {
                                                    PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                    if (pld.PlanStaff.Id != planStaff.Id)
                                                    {
                                                        PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                        childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                        childPlan.ParentPlanKPIDetail = pld;
                                                        childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                        childPlan.PlanStaff = planStaff;
                                                        childPlan.Id = Guid.NewGuid();
                                                        childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                        pd.OrderNumber = childPlan.OrderNumber;
                                                        childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                        childPlan.StaffLeader = new Staff { Id = staff.Id };

                                                        foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                        {
                                                            PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                            child.Id = Guid.NewGuid();
                                                            child.Name = kpi.Name;
                                                            child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                            child.OrderNumber = kpi.OrderNumber;
                                                            childPlan.PlanKPIDetail_KPIs.Add(child);

                                                            PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                            parent.Id = kpi.Id;
                                                            parent.Name = kpi.Name;

                                                        }
                                                        //Lưu method nhận từ cấp trên vào db
                                                        childPlan.Methods = new List<Method>();
                                                        foreach (Method m in childPlan.ParentPlanKPIDetail.Methods)
                                                        {
                                                            Method child = new Method();
                                                            child.Id = Guid.NewGuid();
                                                            child.Name = m.Name;
                                                            child.OrderNumber = m.OrderNumber;
                                                            child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                            child.StartTime = m.StartTime;
                                                            child.EndTime = m.EndTime;
                                                            childPlan.Methods.Add(child);
                                                        }
                                                        SessionManager.DoWork(session1 =>
                                                        {
                                                            session1.Save(childPlan);
                                                        });
                                                        if (parentPlanKPIDetail.Any(pp => pp.Id == pld.Id))
                                                        {
                                                            foreach (PlanDetailSubStaff stf in pld.SubStaffs)
                                                            {
                                                                PlanDetailSubStaff newPlanStaff = new PlanDetailSubStaff()
                                                                {
                                                                    Density = stf.Density,
                                                                    Staff = stf.Staff,
                                                                    PlanKPIDetail = new PlanKPIDetail() { Id = childPlan.Id }
                                                                };
                                                                SessionManager.DoWork(session1 =>
                                                                {
                                                                    session1.SaveOrUpdate(newPlanStaff);
                                                                });
                                                                childPlan.SubStaffs.Add(stf);
                                                            }
                                                            //foreach (Staff stf in childPlan.SubStaffs)
                                                            //{
                                                            //    //pd.SubDepartmentIds.Add(subd.Id);
                                                            //    pd.SubStaffNames.Add(stf.StaffProfile.Name);
                                                            //}
                                                        }

                                                        //newPlanDetails.Add(childPlan);

                                                        pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                        pd.Id = childPlan.Id;
                                                    }
                                                    else
                                                        pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                    //Trưởng khoa hoặc phó khoa thay đổi criterion rồi khóa xuống, nếu có khác biệt thì cập nhật mới theo criterion


                                                    //Trưởng Khoa hoặc Phó Khoa ai đẩy công việc xuống sau sẽ hiện chỉ đạo là người đó
                                                    if (cri.FromPlanKPIDetail.StaffLeader != null && pld.StaffLeader != null)
                                                    {
                                                        if (cri.FromPlanKPIDetail.StaffLeader.Id != pld.StaffLeader.Id)
                                                        {
                                                            pd.StaffLeader.StaffProfile = new StaffProfile { Name = cri.FromPlanKPIDetail.StaffLeader.StaffProfile.Name };
                                                            pd.StaffLeader.Id = cri.FromPlanKPIDetail.StaffLeader.Id;
                                                        }
                                                    }


                                                    pd.PreviousKPISecond = pld2 != null ? pld2.PreviousKPI : "";

                                                    try
                                                    {
                                                        if (pd.CurrentKPI != null)
                                                        {
                                                            Guid currentKPIId = new Guid(pd.CurrentKPI);
                                                            pd.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                                        }
                                                    }
                                                    catch (Exception e)
                                                    {

                                                    }

                                                    if (pd.StaffLeader == null)
                                                    {
                                                        StaffApiController controller = new StaffApiController();
                                                        pd.StaffLeader = new StaffDTO();
                                                        pd.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                                                    }
                                                    pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                    PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(pld.Id, session);
                                                    foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                                    {
                                                        PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                                        kd.Id = kpi.Id;
                                                        kd.Name = kpi.Name;
                                                        pd.ParentPlanKPIDetail_KPIs.Add(kd);
                                                    }
                                                    if (parentpl.StaffLeader != null)
                                                    {
                                                        pd.AdminLeaderId = parentpl.StaffLeader.Id;
                                                        pd.AdminLeaderName = parentpl.StaffLeader.StaffProfile.Name;
                                                    }
                                                    //foreach (Staff substaff in pld.SubStaffs)
                                                    //{
                                                    //    pd.SubStaffNames.Add(substaff.StaffProfile.Name);
                                                    //}
                                                    if (pd.IsLocked == false)
                                                        result.IsDisable = false;
                                                    tg.PlanKPIDetails.Add(pd);
                                                }
                                            }

                                            //Danh sách planDetail tự tạo không kế thừa cấp trên
                                            List<PlanKPIDetail> CanDeleteDetails = planDetails.Where(p => p.FromCriterion == null).ToList();
                                            foreach (PlanKPIDetail pld in CanDeleteDetails)
                                            {

                                                PlanKPIDetail existPld = planStaff.PlanKPIDetails.SingleOrDefault(pl => ControllerHelpers.GetOriginalParentPlanKPIDetail(pl, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id);
                                                //Nếu không tồn tại thì tạo mới plandetail
                                                PlanKPIMakingDetailDTO pd = new PlanKPIMakingDetailDTO();
                                                if (existPld == null)
                                                {
                                                    pd = new PlanKPIMakingDetailDTO();
                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);


                                                    PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(pld);
                                                    childPlan.ParentPlanKPIDetail = pld;
                                                    childPlan.TargetGroupDetail = new TargetGroupDetail() { Id = t.Id };
                                                    childPlan.PlanStaff = planStaff;
                                                    childPlan.Id = Guid.NewGuid();
                                                    childPlan.OrderNumber = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaff.Id, t.Id, session) + 1;
                                                    pd.OrderNumber = childPlan.OrderNumber;
                                                    childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                    foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                    {
                                                        PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                        child.Id = Guid.NewGuid();
                                                        child.Name = kpi.Name;
                                                        child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                        child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                        child.OrderNumber = kpi.OrderNumber;
                                                        childPlan.PlanKPIDetail_KPIs.Add(child);
                                                    }
                                                    SessionManager.DoWork(session1 =>
                                                    {
                                                        session1.Save(childPlan);
                                                    });
                                                    //newPlanDetails.Add(childPlan);
                                                    pd.Id = childPlan.Id;

                                                    //Kế hoạch được kế thừa từ KH cấp cao hơn (KH năm, HK ...) có trạng thái chưa khóa và original = false
                                                    pd.IsOriginal = false;
                                                    pd.IsLocked = false;
                                                    pd.CanDelete = true; // tạm thời làm vậy để không hiện nút dừng sử dụng

                                                    if (pd.IsLocked == false)
                                                        result.IsDisable = false;
                                                    tg.PlanKPIDetails.Add(pd);
                                                }
                                                else if (!existPld.IsDelete)
                                                {
                                                    pd = new PlanKPIMakingDetailDTO();
                                                    pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);

                                                    //Subdept hiện tại lấy bộ môn, nhưng hiển thị cột đơn vị phối hợp thực hiện, do đó gắn rỗng cho SubdeptNames
                                                    pd.SubDepartmentNames = new List<string>();

                                                    if (pd.IsLocked == false)
                                                        result.IsDisable = false;
                                                    tg.PlanKPIDetails.Add(pd);

                                                    //cập nhật lại parent cho các công việc đã được phân công (phục vụ chức năng dừng sử dụng)
                                                    UpdateParentPlanDetail2(pd.Id, AgentObjectTypeId, factory);
                                                }
                                            }
                                            #endregion

                                            tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(p => p.CreateTime).ToList();

                                            tg.TargetGroupId = t.Id;
                                            tg.TargetGroupName = t.Name;


                                            //criterions = session.Query<Criterion>().Where(c => c.TargetGroupDetail.Id == t.Id && c.Department.Id == staff.Department.Id && c.PlanKPI.Id == planId).Map<CriterionPlanDTO>().ToList();
                                            //tg.Criterions = criterions;
                                            #endregion
                                        }
                                        break;
                                }
                                #endregion
                                result.PlanId = planId;
                                result.AgentObjectId = agentObjectId;
                                result.AgentObjectName = agentObject.Name;
                                result.TargetGroupPlanMakings.Add(tg);
                                result.Vision = planStaff.Vision != null ? planStaff.Vision : null;
                                result.Mission = planStaff.Mission != null ? planStaff.Mission : null;
                            }

                            #region Additional Plan Kế hoạch phân thêm cho giảng viên

                            switch (AgentObjectTypeId)
                            {
                                case 1:
                                    {
                                        List<PlanKPIDetail> additionalPlanDetails = new List<PlanKPIDetail>();
                                        result.AdditionalPlanDetails = new List<PlanKPIMakingDetailDTO>();
                                        additionalPlanDetails = planStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail == null).ToList();
                                        //List<Criterion> templist = session.Query<Criterion>().Where(c => c.Staff.Id == staff.Id).ToList();
                                        //lỗi: trưởng khoa giao việc cho phó khoa mà giảng viên cũng nhận được
                                        //sửa: chỉ nhận công việc được giao từ trưởng bộ môn 
                                        List<Criterion> templist = session.Query<Criterion>().Where(c => c.FromPlanKPIDetail != null && c.FromPlanKPIDetail.PlanStaff != null
                                            && c.FromPlanKPIDetail.PlanStaff.AgentObjectType != null
                                            && (c.FromPlanKPIDetail.PlanStaff.AgentObjectType.Id == (int)AgentObjectTypes.BoMon ||
                                                c.FromPlanKPIDetail.PlanStaff.AgentObjectType.Id == (int)AgentObjectTypes.Nganh)
                                            && c.Staff.Id == staff.Id).ToList();

                                        List<Criterion> professorCriterion = templist.Where(c => ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0
                                            && c.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id).ToList();
                                        //&& ((plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                        //              (plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) >= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) <= 0) ||
                                        //              (plan.StartTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Min(m => m.StartTime)) <= 0 && plan.EndTime.CompareTo(ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Max(m => m.EndTime)) >= 0))).ToList();
                                        foreach (Criterion cri in professorCriterion)
                                        {
                                            PlanKPIDetail pld = additionalPlanDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                            //PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                            if (pld == null && !planStaff.IsLocked)
                                            {
                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, cri.FromPlanKPIDetail, 2, session);
                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                childPlan.PlanStaff = planStaff;
                                                childPlan.Id = Guid.NewGuid();
                                                childPlan.MaxRecord = pd.MaxRecord;
                                                childPlan.BasicResource = childPlan.ParentPlanKPIDetail.BasicResource;
                                                childPlan.TargetGroupDetail = null;
                                                childPlan.StaffLeader = cri.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = cri.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                {
                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                    child.Id = Guid.NewGuid();
                                                    child.Name = kpi.Name;
                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                    parent.Id = kpi.Id;
                                                    parent.Name = kpi.Name;
                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                }
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(childPlan);
                                                });

                                                if (childPlan.ParentPlanKPIDetail.CriterionDictionary != null && childPlan.ParentPlanKPIDetail.CriterionDictionary.ProfessorCriterion != null)
                                                {
                                                    foreach (TargetGroupPlanMakingDTO tg in result.TargetGroupPlanMakings)
                                                    {
                                                        if (tg.TargetGroupDetailTypeId == 4) //Nhóm hoạt động khác
                                                        {
                                                            foreach (PlanKPIMakingDetailDTO pldto in tg.PlanKPIDetails)
                                                            {
                                                                // kiểm tra nếu đúng tiêu chí thì add hoạt động vào
                                                                if (pldto.FromProfessorCriterionId == childPlan.ParentPlanKPIDetail.CriterionDictionary.ProfessorCriterion.Id)
                                                                {
                                                                    List<ProfessorOtherActivityDTO> activityList = new List<ProfessorOtherActivityDTO>();
                                                                    activityList = pldto.ProfessorOtherActivities.Where(p => p.CriterionDictionary != null && p.CriterionDictionary.Id == childPlan.ParentPlanKPIDetail.CriterionDictionary.Id).ToList();
                                                                    if (activityList.Count == 0) // Nếu giảng viên chưa có hoạt động đó thì mới thêm
                                                                    {
                                                                        ProfessorOtherActivity pa = new ProfessorOtherActivity();
                                                                        pa.Id = Guid.NewGuid();
                                                                        pa.NumberOfTime = 1;
                                                                        pa.NumberOfHour = childPlan.ParentPlanKPIDetail.SubStaffs.Where(p => p.Staff.Id == staff.Id).Select(p => p.NumberOfHour).SingleOrDefault();
                                                                        pa.CriterionDictionary = new CriterionDictionary() { Id = childPlan.ParentPlanKPIDetail.CriterionDictionary.Id };
                                                                        pa.PlanKPIDetail = new PlanKPIDetail() { Id = pldto.Id };
                                                                        pa.ExecuteMethod = null;
                                                                        pa.BasicResource = null;
                                                                        pa.IsAssign = true;

                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(pa);
                                                                        });
                                                                        ProfessorOtherActivityDTO pad = pa.Map<ProfessorOtherActivityDTO>();
                                                                        pad.Name = childPlan.ParentPlanKPIDetail.CriterionDictionary.Name; //mục đích hiển thị tên từ điển
                                                                        pldto.ProfessorOtherActivities.Add(pad); //hiển thị hoạt động mới
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }

                                                pd.Id = childPlan.Id;
                                                //Staff subjectLeader = session.Query<Staff>().Where(s => s.StaffInfo.Subject.Id == staff.StaffInfo.Subject.Id && s.StaffInfo.Position.AgentObjectType.Id == 6).SingleOrDefault();
                                                Staff subjectLeader = ControllerHelpers.GetSubjectLeaderFromCriterion(cri);
                                                pd.StaffLeader = new StaffDTO();
                                                pd.StaffLeader.Id = subjectLeader.Id;
                                                pd.StaffLeader.Name = subjectLeader.StaffProfile != null ? subjectLeader.StaffProfile.Name : "";
                                                //Thêm cột tên từ điển
                                                pd.CriterionDictionaryName = childPlan.ParentPlanKPIDetail.CriterionDictionary != null ? childPlan.ParentPlanKPIDetail.CriterionDictionary.Name : null;
                                                result.AdditionalPlanDetails.Add(pd);
                                            }
                                            else
                                            {
                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                //Staff subjectLeader = session.Query<Staff>().Where(s => s.StaffInfo.Subject.Id == staff.StaffInfo.Subject.Id && s.StaffInfo.Position.AgentObjectType.Id == 6).SingleOrDefault();
                                                Staff subjectLeader = ControllerHelpers.GetSubjectLeaderFromCriterion(cri);
                                                pd.StaffLeader = new StaffDTO();
                                                pd.StaffLeader.Id = subjectLeader.Id;
                                                pd.StaffLeader.Name = subjectLeader.StaffProfile != null ? subjectLeader.StaffProfile.Name : "";
                                                //Thêm cột tên từ điển
                                                if (pld.FromCriterion != null && pld.FromCriterion.FromPlanKPIDetail != null && pld.FromCriterion.FromPlanKPIDetail.CriterionDictionary != null)
                                                {
                                                    pd.CriterionDictionaryName = pld.FromCriterion.FromPlanKPIDetail.CriterionDictionary.Name;
                                                }
                                                result.AdditionalPlanDetails.Add(pd);
                                            }
                                        }
                                    }
                                    break;
                                case 4:
                                    {
                                        List<PlanKPIDetail> additionalPlanDetails = new List<PlanKPIDetail>();
                                        result.AdditionalPlanDetails = new List<PlanKPIMakingDetailDTO>();
                                        additionalPlanDetails = planStaff.PlanKPIDetails.Where(pd => pd.TargetGroupDetail == null).ToList();

                                        List<Criterion> templist = session.Query<Criterion>().Where(c => c.FromPlanKPIDetail != null && c.FromPlanKPIDetail.PlanStaff != null
                                            && c.FromPlanKPIDetail.PlanStaff.AgentObjectType != null
                                            && c.Staff.Id == staff.Id).ToList();

                                        List<Criterion> professorCriterion = templist.Where(c => ControllerHelpers.GetOriginalMethods(c.FromPlanKPIDetail.Id, session).Count > 0
                                           && c.FromPlanKPIDetail.PlanStaff.PlanKPI.Id == plan.Id).ToList();
                                        foreach (Criterion cri in professorCriterion)
                                        {
                                            PlanKPIDetail pld = additionalPlanDetails.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id);
                                            //PlanKPIDetail pld2 = planDetails2.SingleOrDefault(pl => pl.FromCriterion != null && pl.FromCriterion.Id == cri.Id && pl.TargetGroupDetail.Id != t.Id);
                                            //Khi cấp trên đã duyệt KH thì không nhận công việc nữa
                                            if (pld == null && !planStaff.IsLocked)
                                            {
                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, cri.FromPlanKPIDetail, 2, session);
                                                PlanKPIDetail childPlan = ControllerHelpers.CopyPlanKPIDetail(cri.FromPlanKPIDetail);
                                                childPlan.FromCriterion = new Criterion() { Id = cri.Id };
                                                childPlan.ParentPlanKPIDetail = cri.FromPlanKPIDetail;
                                                childPlan.PlanStaff = planStaff;
                                                childPlan.Id = Guid.NewGuid();
                                                childPlan.MaxRecord = pd.MaxRecord;
                                                childPlan.BasicResource = childPlan.ParentPlanKPIDetail.BasicResource;
                                                childPlan.TargetGroupDetail = null;
                                                childPlan.StaffLeader = cri.FromPlanKPIDetail.StaffLeader != null ? new Staff() { Id = cri.FromPlanKPIDetail.StaffLeader.Id } : null;
                                                childPlan.PlanKPIDetail_KPIs = new List<PlanKPIDetail_KPI>();
                                                pd.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                                                foreach (PlanKPIDetail_KPI kpi in childPlan.ParentPlanKPIDetail.PlanKPIDetail_KPIs)
                                                {
                                                    PlanKPIDetail_KPI child = new PlanKPIDetail_KPI();
                                                    child.Id = Guid.NewGuid();
                                                    child.Name = kpi.Name;
                                                    child.MeasureUnit = kpi.MeasureUnit != null ? new MeasureUnit { Id = kpi.MeasureUnit.Id, Name = kpi.MeasureUnit.Name } : null;
                                                    child.PlanKPIDetail = new PlanKPIDetail { Id = childPlan.Id };
                                                    childPlan.PlanKPIDetail_KPIs.Add(child);

                                                    PlanKPIDetail_KPIDTO parent = new PlanKPIDetail_KPIDTO();
                                                    parent.Id = kpi.Id;
                                                    parent.Name = kpi.Name;
                                                    pd.ParentPlanKPIDetail_KPIs.Add(parent);
                                                }
                                                SessionManager.DoWork(session1 =>
                                                {
                                                    session1.Save(childPlan);
                                                });

                                                if (childPlan.ParentPlanKPIDetail.CriterionDictionary != null && childPlan.ParentPlanKPIDetail.CriterionDictionary.ProfessorCriterion != null)
                                                {
                                                    foreach (TargetGroupPlanMakingDTO tg in result.TargetGroupPlanMakings)
                                                    {
                                                        if (tg.TargetGroupDetailTypeId == 4) //Nhóm hoạt động khác
                                                        {
                                                            foreach (PlanKPIMakingDetailDTO pldto in tg.PlanKPIDetails)
                                                            {
                                                                // kiểm tra nếu đúng tiêu chí thì add hoạt động vào
                                                                if (pldto.FromProfessorCriterionId == childPlan.ParentPlanKPIDetail.CriterionDictionary.ProfessorCriterion.Id)
                                                                {
                                                                    List<ProfessorOtherActivityDTO> activityList = new List<ProfessorOtherActivityDTO>();
                                                                    activityList = pldto.ProfessorOtherActivities.Where(p => p.CriterionDictionary != null && p.CriterionDictionary.Id == childPlan.ParentPlanKPIDetail.CriterionDictionary.Id).ToList();
                                                                    if (activityList.Count == 0) // Nếu giảng viên chưa có hoạt động đó thì mới thêm
                                                                    {
                                                                        ProfessorOtherActivity pa = new ProfessorOtherActivity();
                                                                        pa.Id = Guid.NewGuid();
                                                                        pa.NumberOfTime = 1;
                                                                        pa.NumberOfHour = childPlan.ParentPlanKPIDetail.SubStaffs.Where(p => p.Staff.Id == staff.Id).Select(p => p.NumberOfHour).SingleOrDefault();
                                                                        pa.CriterionDictionary = new CriterionDictionary() { Id = childPlan.ParentPlanKPIDetail.CriterionDictionary.Id };
                                                                        pa.PlanKPIDetail = new PlanKPIDetail() { Id = pldto.Id };
                                                                        pa.ExecuteMethod = null;
                                                                        pa.BasicResource = null;
                                                                        pa.IsAssign = true;

                                                                        SessionManager.DoWork(session1 =>
                                                                        {
                                                                            session1.Save(pa);
                                                                        });
                                                                        ProfessorOtherActivityDTO pad = pa.Map<ProfessorOtherActivityDTO>();
                                                                        pad.Name = childPlan.ParentPlanKPIDetail.CriterionDictionary.Name; //mục đích hiển thị tên từ điển
                                                                        pldto.ProfessorOtherActivities.Add(pad); //hiển thị hoạt động mới
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }

                                                pd.Id = childPlan.Id;
                                                //Staff subjectLeader = session.Query<Staff>().Where(s => s.StaffInfo.Subject.Id == staff.StaffInfo.Subject.Id && s.StaffInfo.Position.AgentObjectType.Id == 6).SingleOrDefault();
                                                Staff subjectLeader = ControllerHelpers.GetSubjectLeaderFromCriterion(cri);
                                                pd.StaffLeader = new StaffDTO();
                                                pd.StaffLeader.Id = subjectLeader.Id;
                                                pd.StaffLeader.Name = subjectLeader.StaffProfile != null ? subjectLeader.StaffProfile.Name : "";
                                                //Thêm cột tên từ điển
                                                pd.CriterionDictionaryName = childPlan.ParentPlanKPIDetail.CriterionDictionary != null ? childPlan.ParentPlanKPIDetail.CriterionDictionary.Name : null;
                                                result.AdditionalPlanDetails.Add(pd);
                                            }
                                            else
                                            {
                                                PlanKPIMakingDetailDTO pd = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                                                //Staff subjectLeader = session.Query<Staff>().Where(s => s.StaffInfo.Subject.Id == staff.StaffInfo.Subject.Id && s.StaffInfo.Position.AgentObjectType.Id == 6).SingleOrDefault();
                                                Staff subjectLeader = ControllerHelpers.GetSubjectLeaderFromCriterion(cri);
                                                pd.StaffLeader = new StaffDTO();
                                                pd.StaffLeader.Id = subjectLeader.Id;
                                                pd.StaffLeader.Name = subjectLeader.StaffProfile != null ? subjectLeader.StaffProfile.Name : "";
                                                //Thêm cột tên từ điển
                                                if (pld.FromCriterion != null && pld.FromCriterion.FromPlanKPIDetail != null && pld.FromCriterion.FromPlanKPIDetail.CriterionDictionary != null)
                                                {
                                                    pd.CriterionDictionaryName = pld.FromCriterion.FromPlanKPIDetail.CriterionDictionary.Name;
                                                }
                                                result.AdditionalPlanDetails.Add(pd);
                                            }
                                        }
                                    }
                                    break;
                            }
                            #endregion   //  Xử lý dữ liệu

                            #endregion
                        }

                        //Cập nhật cache dữ liệu
                        //foreach (PlanKPIDetail pld in newPlanDetails)
                        //{
                        //    ControllerHelpers.UpdatePlanDetailDic(pld, 1, session);
                        //}

                        //watch.Stop();
                        //var elapsedMs = watch.ElapsedMilliseconds;

                        //logMessage += "(Time: " + elapsedMs + ")";

                        //NLog.Logger logger = NLog.LogManager.GetCurrentClassLogger();
                        //logger.Fatal(logMessage);

                    }
                    else
                    {

                    }
                });

                SessionManager.DoWork(session =>
                {

                    if (result.Id != Guid.Empty)
                    {
                        try
                        {
                            foreach (TargetGroupPlanMakingDTO tg in result.TargetGroupPlanMakings)
                            {
                                //tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(pl => ControllerHelpers.GetOriginalMethods(pl.Id, session).Min(pld => pld.StartTime)).ThenBy(pl => ControllerHelpers.GetOriginalMethods(pl.Id, session).Min(pld => pld.EndTime)).ThenBy(pl => pl.TargetDetail).ToList();
                                //tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(pl => pl.TargetDetail).ToList();
                                tg.PlanKPIDetails = tg.PlanKPIDetails.OrderBy(pl => pl.OrderNumber).ThenBy(pl => pl.TargetDetail).ToList(); //sắp xếp theo số thứ tự
                                foreach (PlanKPIMakingDetailDTO me in tg.PlanKPIDetails)
                                {
                                    me.Methods = me.Methods.OrderBy(m => m.OrderNumber).ThenBy(m => m.Name).ToList();
                                    me.PlanKPIDetail_KPIs = me.PlanKPIDetail_KPIs.OrderBy(p => p.OrderNumber).ToList();
                                    me.ProfessorOtherActivities = me.ProfessorOtherActivities.OrderBy(p => p.OrderNumber).ToList();
                                    me.ScienceResearches = me.ScienceResearches.OrderBy(p => p.OrderNumber).ToList();
                                }
                            }
                        }
                        catch (Exception e)
                        {

                        }
                    }
                });
            }
            catch (Exception ex)
            {
                Helper.ErrorLog("PlanKPIDetailApiController/GetList", ex);
                throw ex;
            }
            return result;
        }

        [Authorize]
        [Route("")]
        public AgentObjectDetailDTO GetWorkingModeByPlanStaff(Guid planStaffId)
        {
            var result = new AgentObjectDetailDTO();
            SessionManager.DoWork(session =>
            {
                var agentObjectDetail = session.Query<PlanStaff>().SingleOrDefault(q => q.Id == planStaffId).AgentObjectDetail;
                if (agentObjectDetail != null)
                {
                    result.Id = agentObjectDetail.Id;
                    result.NumberOfSection = agentObjectDetail.NumberOfSection;
                    result.ScienceResearch = agentObjectDetail.ScienceResearch;
                    result.OtherActivity = agentObjectDetail.OtherActivity;
                    result.AgentObjectId = agentObjectDetail.AgentObject != null ? agentObjectDetail.AgentObject.Id : Guid.Empty;
                    result.WorkingModeId = agentObjectDetail.WorkingMode != null ? agentObjectDetail.WorkingMode.Id : Guid.Empty;
                    result.WorkingModeName = agentObjectDetail.WorkingMode != null ? agentObjectDetail.WorkingMode.Name : "";
                }
                else result = null;
            });
            return result;
        }

        [Authorize]
        [Route("")]
        public int GetSaveWorkingMode(Guid planStaffId, Guid workingModeId)
        {
            int result = 0;
            SessionManager.DoWork(session =>
            {
                PlanStaff planstaff = session.Query<PlanStaff>().SingleOrDefault(q => q.Id == planStaffId);
                if (planstaff != null)
                {
                    if (planstaff.IsWorkingModeLocked == false)
                    {
                        planstaff.AgentObjectDetail = new AgentObjectDetail() { Id = workingModeId };
                        session.Update(planstaff);
                        result = 1;
                    }
                }
            });
            return result;
        }

        [Authorize]
        [Route("")]
        public int GetLockWorkingModeProfessor(Guid planStaffId)
        {
            int result = 0;
            SessionManager.DoWork(session =>
            {
                PlanStaff planstaff = session.Query<PlanStaff>().SingleOrDefault(q => q.Id == planStaffId);
                if (planstaff != null)
                {
                    planstaff.IsWorkingModeLocked = true;
                    session.Update(planstaff);
                    result = 1;
                }
            });
            return result;
        }

        [Authorize]
        [Route("")]
        public bool GetCheckIsLockWorkingMode(Guid planStaffId)
        {
            var result = false;
            SessionManager.DoWork(session =>
            {
                PlanStaff planstaff = session.Query<PlanStaff>().SingleOrDefault(q => q.Id == planStaffId);
                if (planstaff != null && planstaff.IsWorkingModeLocked)
                {
                    result = true;
                }
            });
            return result;
        }

        [Authorize]
        [Route("")]
        public PlanKPIMakingDetailDTO GetObjDTO(Guid id, int agentObjectTypeId)
        {
            PlanKPIMakingDetailDTO result = new PlanKPIMakingDetailDTO();

            PlanKPIDetail pld = new PlanKPIDetail();
            SessionManager.DoWork(session =>
            {
                pld = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == id);
                if (agentObjectTypeId != 1)
                {
                    result = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                }
                result.AgentObjectTypeId = agentObjectTypeId;
                switch (agentObjectTypeId)
                {
                    case (int)AgentObjectTypes.GiangVien:
                        {
                            result.Id = pld.Id;
                            result.Name = pld.Name;
                            result.BasicResource = pld.BasicResource;
                            result.ExecuteMethod = pld.ExecuteMethod;
                            result.StartDateString = pld.StartTime.ToLocalTime().ToString("dd/MM/yyyy");
                            result.EndTimeString = pld.EndTime.ToLocalTime().ToString("dd/MM/yyyy");
                            result.CurrentKPI = pld.CurrentKPI;
                            result.PreviousKPI = pld.PreviousKPI;
                            result.TargetDetail = pld.TargetDetail;
                            result.TargetDetailName = pld.FromProfessorCriterion != null ? pld.FromProfessorCriterion.Name : "";
                            result.FromProfessorCriterion = new ProfessorCriterionDTO();
                            result.FromProfessorCriterion.Id = pld.FromProfessorCriterion.Id;
                            result.FromProfessorCriterion.Record = pld.FromProfessorCriterion.Record;
                            result.StartTime = pld.StartTime;
                            result.EndTime = pld.EndTime;
                            result.TargetDetail = pld.TargetDetail;
                            result.ProfessorOtherActivities = new List<ProfessorOtherActivityDTO>();
                            foreach (ProfessorOtherActivity pa in pld.ProfessorOtherActivities)
                            {
                                ProfessorOtherActivityDTO pad = new ProfessorOtherActivityDTO();
                                pad.Id = pa.Id;
                                pad.Name = pa.CriterionDictionary != null ? pa.CriterionDictionary.Name : pa.Name;
                                pad.NumberOfTime = pa.NumberOfTime;
                                pad.NumberOfHour = pa.NumberOfHour;
                                pad.OrderNumber = pa.CriterionDictionary != null ? pa.CriterionDictionary.OrderNumber : pa.OrderNumber;
                                pad.ExecuteMethod = pa.ExecuteMethod;
                                pad.BasicResource = pa.BasicResource;
                                result.ProfessorOtherActivities.Add(pad);
                            }
                            result.ProfessorOtherActivities = result.ProfessorOtherActivities.OrderBy(p => p.OrderNumber).ThenBy(p => p.NumberOfHour).ToList();
                            result.ScienceResearches = new List<ScienceResearchDTO>();
                            foreach (ScienceResearch pa in pld.ScienceResearches)
                            {
                                ScienceResearchDTO pad = new ScienceResearchDTO();
                                pad.Id = pa.Id;
                                pad.Name = pa.CriterionDictionary != null ? pa.CriterionDictionary.Name : pa.Name;
                                pad.NumberOfResearch = pa.NumberOfResearch;
                                pad.NumberOfHour = pa.CriterionDictionary != null ? pa.CriterionDictionary.Record : pa.NumberOfHour;
                                pad.OrderNumber = pa.CriterionDictionary != null ? pa.CriterionDictionary.OrderNumber : pa.OrderNumber;
                                pad.ExecuteMethod = pa.ExecuteMethod;
                                pad.BasicResource = pa.BasicResource;
                                result.ScienceResearches.Add(pad);
                            }
                            result.ScienceResearches = result.ScienceResearches.OrderBy(p => p.OrderNumber).ThenBy(p => p.NumberOfResearch).ToList();
                            result.StartDateString = pld.StartTime.ToString("dd/MM/yyyy");
                            result.EndTimeString = pld.EndTime.ToString("dd/MM/yyyy");

                        }
                        break;
                    case (int)AgentObjectTypes.NhanVien:
                        {
                            //if (result.StaffLeader == null)
                            //{
                            //    StaffApiController controller = new StaffApiController();
                            //    result.StaffLeader = new StaffDTO();
                            //    //result.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                            //}
                            //result.IsMoved = pld.IsMoved;
                            result.FromCriterionId = pld.FromCriterion?.Id ?? Guid.Empty;
                            result.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                            PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(result.Id, session);
                            if (parentpl.PlanKPIDetail_KPIs != null)
                            {
                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                {
                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                    kd.Id = kpi.Id;
                                    kd.Name = kpi.Name;
                                    result.ParentPlanKPIDetail_KPIs.Add(kd);
                                }
                            }
                            try
                            {
                                if (result.CurrentKPI != null)
                                {
                                    Guid currentKPIId = new Guid(result.CurrentKPI);
                                    result.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                }
                                if (result.TargetDetail != null)
                                {
                                    Guid targetDetailId = new Guid(result.TargetDetail);
                                    result.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                }
                            }
                            catch (Exception e)
                            {

                            }
                        }
                        break;
                    case (int)AgentObjectTypes.PhongBan:
                        {
                            //if (result.StaffLeader == null)
                            //{
                            //    StaffApiController controller = new StaffApiController();
                            //    result.StaffLeader = new StaffDTO();
                            //    result.StaffLeader.Id = controller.GetDepartmentLeader(staff.Department.Id).Id;
                            //}
                            //  result.IsMoved = pld.IsMoved;
                            result.FromCriterionId = pld.FromCriterion?.Id ?? Guid.Empty;
                            result.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                            PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(result.Id, session);
                            if (parentpl.PlanKPIDetail_KPIs != null)
                            {
                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                {
                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                    kd.Id = kpi.Id;
                                    kd.Name = kpi.Name;
                                    result.ParentPlanKPIDetail_KPIs.Add(kd);
                                }
                            }
                            //if (pld.ParentPlanKPIDetail != null && pld.ParentPlanKPIDetail.StaffLeader != null)
                            //{
                            //    result.AdminLeaderId = pld.ParentPlanKPIDetail.StaffLeader.Id;
                            //    result.AdminLeaderName = pld.ParentPlanKPIDetail.StaffLeader.StaffProfile.Name;
                            //}
                            //Lấy BGH chỉ đạo

                            Guid adminPlanDetailId = ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session) != null ? ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id : Guid.Empty;
                            PlanKPIDetail adminPlanDetail = new PlanKPIDetail();
                            adminPlanDetail = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == adminPlanDetailId);
                            //Kiểm tra nếu là plandetail của BGH mới gắn BGH chỉ đạo
                            if (adminPlanDetail != null && adminPlanDetail.PlanStaff.WebGroupId != Guid.Empty)
                            {
                                result.AdminLeaderId = adminPlanDetail.StaffLeader != null ? adminPlanDetail.StaffLeader.Id : Guid.Empty;
                                result.AdminLeaderName = adminPlanDetail.StaffLeader != null ? adminPlanDetail.StaffLeader.StaffProfile.Name : "";
                            }
                            try
                            {
                                if (result.CurrentKPI != null)
                                {
                                    Guid currentKPIId = new Guid(result.CurrentKPI);
                                    result.CurrentKPISecond = session.Query<CriterionDictionary>().Where(c => c.Id == currentKPIId).Select(c => c.Name).SingleOrDefault();
                                }
                                if (result.TargetDetail != null)
                                {
                                    Guid targetDetailId = new Guid(result.TargetDetail);
                                    result.TargetDetailName = session.Query<CriterionDictionary>().Where(c => c.Id == targetDetailId).Select(c => c.Name).SingleOrDefault();
                                }
                            }
                            catch (Exception e)
                            {

                            }
                        }
                        break;
                    case (int)AgentObjectTypes.BanGiamHieu:
                        {
                            foreach (Department subd in pld.SubDepartments)
                            {
                                //pd.SubDepartmentIds.Add(subd.Id);
                                result.SubDepartmentNames.Add(subd.Name);
                            }
                        }
                        break;
                    case (int)AgentObjectTypes.Khoa:
                        {
                            // result.IsMoved = pld.IsMoved;
                            result.FromCriterionId = pld.FromCriterion?.Id ?? Guid.Empty;
                            PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(result.Id, session);
                            if (parentpl.PlanKPIDetail_KPIs != null)
                            {
                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                {
                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                    kd.Id = kpi.Id;
                                    kd.Name = kpi.Name;
                                    result.ParentPlanKPIDetail_KPIs.Add(kd);
                                }
                            }
                            //Lấy BGH chỉ đạo
                            Guid adminPlanDetailId = ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session) != null ? ControllerHelpers.GetOriginalParentPlanKPIDetail(pld, session).Id : Guid.Empty;
                            PlanKPIDetail adminPlanDetail = new PlanKPIDetail();
                            adminPlanDetail = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == adminPlanDetailId);
                            //Kiểm tra nếu là plandetail của BGH mới gắn BGH chỉ đạo
                            if (adminPlanDetail != null && adminPlanDetail.PlanStaff.WebGroupId != Guid.Empty)
                            {
                                result.AdminLeaderId = adminPlanDetail.StaffLeader != null ? adminPlanDetail.StaffLeader.Id : Guid.Empty;
                                result.AdminLeaderName = adminPlanDetail.StaffLeader != null ? adminPlanDetail.StaffLeader.StaffProfile.Name : "";
                            }
                        }
                        break;
                    case (int)AgentObjectTypes.BoMon:
                        {
                            if (result.StaffLeader == null)
                            {
                                StaffApiController controller = new StaffApiController();
                                result.StaffLeader = new StaffDTO();
                            }
                            result.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                            PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(result.Id, session);
                            if (parentpl.PlanKPIDetail_KPIs != null)
                            {
                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                {
                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                    kd.Id = kpi.Id;
                                    kd.Name = kpi.Name;
                                    result.ParentPlanKPIDetail_KPIs.Add(kd);
                                }
                            }
                        }
                        break;
                    case (int)AgentObjectTypes.PhoPhongBan:
                        {
                            result.ParentPlanKPIDetail_KPIs = new List<PlanKPIDetail_KPIDTO>();
                            PlanKPIDetailDTO parentpl = ControllerHelpers.GetParentPlanKPIDetail(result.Id, session);
                            if (parentpl.PlanKPIDetail_KPIs != null)
                            {
                                foreach (PlanKPIDetail_KPIDTO kpi in parentpl.PlanKPIDetail_KPIs)
                                {
                                    PlanKPIDetail_KPIDTO kd = new PlanKPIDetail_KPIDTO();
                                    kd.Id = kpi.Id;
                                    kd.Name = kpi.Name;
                                    result.ParentPlanKPIDetail_KPIs.Add(kd);
                                }
                            }
                        }
                        break;
                }

                result.Methods = result.Methods.OrderBy(m => m.OrderNumber).ThenBy(m => m.Name).ToList();
                result.PlanKPIDetail_KPIs = result.PlanKPIDetail_KPIs.OrderBy(p => p.OrderNumber).ToList();
            });
            return result;
        }

        [Authorize]
        [Route("")]
        public PlanKPIMakingDetailDTO GetObj(Guid id, int agentObjectTypeId)
        {
            PlanKPIMakingDetailDTO result = new PlanKPIMakingDetailDTO();
            SessionManager.DoWork(session =>
            {

                PlanKPIDetail pld = session.Query<PlanKPIDetail>().SingleOrDefault(a => a.Id == id);

                result = ControllerHelpers.ParsePlanDetail(null, pld, 2, session);
                if (agentObjectTypeId == 6 || agentObjectTypeId == 12)
                {
                    result.SubStaffIds = new List<Guid>();
                }
                //if (pld.TargetGroupDetail.TargetGroupDetailType.Id == 7)
                //{
                //    pld.IsMoved = true;
                //}
                //else
                //    result.PlanDetailSubStaffs = new List<PlanDetailSubStaffDTO>();
                result.AgentObjectTypeId = agentObjectTypeId;
                // result.IsMoved = pld.IsMoved;
                //result = session.Query<PlanKPIDetail>().SingleOrDefault(a => a.Id == id).Map<PlanKPIDetailDTO>();
            });
            return result;
        }

        [Authorize]
        [Route("")]
        public PlanDetailMakingDTO Put1(PlanDetailMakingDTO obj)
        {
            //Xóa các kế hoạch chi tiết không tồn tại
            //SessionManager.DoWork(session =>
            //{
            //    PlanStaff planStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Id == obj.PlanStaffId);
            //    if (planStaff != null)
            //    {
            //        Staff staff = session.Query<Staff>().SingleOrDefault(s => s.Id == obj.StaffDTO.Id);
            //        List<Guid> agentObjectsId = staff.StaffInfo.AgentObjects.Select(s => s.Id).ToList();
            //        foreach (TargetGroupPlanMakingDTO tg in obj.TargetGroupPlanMakings)
            //        {
            //            if (tg.TargetGroupDetailTypeId != 2)
            //            {
            //                List<PlanKPIDetail> originalPlanKPIDetails = planStaff.PlanKPIDetails.Where(p => p.TargetGroupDetail.Id == tg.TargetGroupId).ToList();
            //                List<PlanKPIDetail> deletingPlanKPIDetails = originalPlanKPIDetails.Where(p => !tg.PlanKPIDetails.Any(p1 => p1.Id == p.Id)).ToList();
            //                foreach (PlanKPIDetail pd in deletingPlanKPIDetails)
            //                {
            //                    bool canDelete = !session.Query<ResultDetail>().Any(rd => rd.PlanKPIDetail.Id == pd.Id);
            //                    if (canDelete)
            //                    {
            //                        session.Delete(pd);
            //                    }
            //                }
            //            }
            //        }
            //    }
            //});


            SessionManager.DoWork(session =>
            {
                Staff staff = session.Query<Staff>().SingleOrDefault(s => s.Id == obj.StaffDTO.Id);
                PlanStaff planStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Id == obj.PlanStaffId);
                if (planStaff == null)
                {
                    planStaff = new PlanStaff();
                    planStaff.Id = Guid.NewGuid();
                    planStaff.PlanKPI = new PlanKPI() { Id = obj.PlanId };
                    planStaff.IsLocked = false;
                    planStaff.ModifiedTime = DateTime.Now;
                    planStaff.Staff = staff;
                    planStaff.Vision = obj.Vision;
                    planStaff.Mission = obj.Mission;
                    session.Save(planStaff);
                }
                else
                {
                    planStaff.ModifiedTime = DateTime.Now;
                    planStaff.Vision = obj.Vision;
                    planStaff.Mission = obj.Mission;
                    session.Update(planStaff);
                }

                List<Guid> agentObjectsId = staff.StaffInfo.AgentObjects.Select(s => s.Id).ToList();
                int AgentObjectTypeId = -1;
                if (obj.AgentObjectId == Guid.Empty)
                    AgentObjectTypeId = obj.StaffDTO.AgentObjectTypeId;
                else
                {
                    AgentObject agentObject = session.Query<AgentObject>().SingleOrDefault(a => a.Id == obj.AgentObjectId);
                    AgentObjectTypeId = agentObject.AgentObjectType.Id;
                }

                foreach (TargetGroupPlanMakingDTO tg in obj.TargetGroupPlanMakings)
                {
                    switch (AgentObjectTypeId)
                    {
                        case 1:
                            {
                                #region Giangvien
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }

                                #endregion
                            }
                            break;
                        //Dành cho nhân viên
                        case 2:
                            {
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }
                            }
                            break;
                        case 3:
                            {
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }
                            }
                            break;
                        case 4:
                            {

                            }
                            break;
                        case 5:
                            {
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }
                            }
                            break;
                        case 6:
                            {
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }
                            }
                            break;
                        case 7:
                            {
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }
                            }
                            break;
                        case 8:
                            {
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }
                            }
                            break;
                        case 9:
                            {
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }
                            }
                            break;
                        case 12:
                            {
                                if (tg.TargetGroupDetailTypeId == 0)
                                {
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail updatePlanKPIDetail = new PlanKPIDetail();
                                        updatePlanKPIDetail = session.Query<PlanKPIDetail>().Where(pld => pld.Id == p.Id).SingleOrDefault();
                                        updatePlanKPIDetail.TargetDetail = p.TargetDetail;
                                        updatePlanKPIDetail.Name = p.Name;
                                        updatePlanKPIDetail.BasicResource = p.BasicResource;
                                        updatePlanKPIDetail.ExecuteMethod = p.ExecuteMethod;
                                        updatePlanKPIDetail.StartTime = p.StartTime.ToLocalTime();
                                        updatePlanKPIDetail.EndTime = p.EndTime.ToLocalTime();
                                        updatePlanKPIDetail.PreviousKPI = p.PreviousKPI;
                                        updatePlanKPIDetail.CurrentKPI = p.CurrentKPI;
                                        updatePlanKPIDetail.PlanStaff = planStaff;
                                        session.Merge(updatePlanKPIDetail);
                                    }
                                }
                            }
                            break;
                    }



                }
            });
            return obj;
        }

        //public PlanStaff PutLockPlan(Guid Obj)
        //{
        //    PlanStaff planStaff = null;
        //    //SessionManager.DoWork(session =>
        //    //{
        //    //    planStaff = session.Query<PlanStaff>().Where(ps => ps.Id == planStaffId).FirstOrDefault();
        //    //    planStaff.IsLocked = true;
        //    //    session.Update(planStaff);
        //    //});
        //    return planStaff;
        //}
        [Authorize]
        [Route("")]
        public bool PutLockPlanStaff(PlanDetailMakingDTO obj)
        {
            PlanStaff ps = new PlanStaff();
            SessionManager.DoWork(session =>
            {
                ps = session.Query<PlanStaff>().SingleOrDefault(pt => pt.Id == obj.PlanStaffId);
                ps.IsLocked = !ps.IsLocked;
                session.Update(ps);
            });
            return ps.IsLocked;
        }

        [Authorize]
        [Route("")]
        public int PutVision(PlanDetailMakingDTO obj)
        {
            int result = 0;
            try
            {
                SessionManager.DoWork(session =>
                {
                    PlanStaff ps = session.Query<PlanStaff>().SingleOrDefault(pt => pt.Id == obj.PlanStaffId);
                    ps.Vision = obj.Vision;
                    session.Update(ps);
                    result = 1;
                });
            }
            catch (Exception e)
            {

            }
            return result;
        }

        [Authorize]
        [Route("")]
        public int PutMission(PlanDetailMakingDTO obj)
        {
            int result = 0;
            try
            {
                SessionManager.DoWork(session =>
                {
                    PlanStaff ps = session.Query<PlanStaff>().SingleOrDefault(pt => pt.Id == obj.PlanStaffId);
                    ps.Mission = obj.Mission;
                    session.Update(ps);
                    result = 1;
                });
            }
            catch (Exception e)
            {
            }
            return result;
        }

        [Authorize]
        [Route("")]
        public IEnumerable<MeasureUnit> GetMeasureUnits()
        {
            List<MeasureUnit> result = new List<MeasureUnit>();
            SessionManager.DoWork(session =>
            {
                result = session.Query<MeasureUnit>().ToList();
            });
            return result;
        }
        [Authorize]
        [Route("")]
        public List<MailListDTO> PutLock(PlanDetailMakingDTO obj)
        {
            //Tạo list gửi mail
            List<MailListDTO> result = new List<MailListDTO>();
            SessionManager.DoWork(session =>
            {
                Staff staff = session.Query<Staff>().SingleOrDefault(s => s.Id == obj.StaffDTO.Id);
                ApplicationUser applicationUser = AuthenticationHelper.GetUserById(new Guid(HttpContext.Current.User.Identity.GetUserId()), HttpContext.Current.User.Identity.Name);
                Guid deptId = new Guid(applicationUser.DepartmentId != null ? applicationUser.DepartmentId : Guid.Empty.ToString());
                PlanStaff planStaff = session.Query<PlanStaff>().SingleOrDefault(ps => ps.Id == obj.PlanStaffId);
                // PlanStaff planStaff = session.Query<PlanStaff>().Where(ps=>(ps.Id==obj.PlanStaffId) || (ps.AgentObjectType.Id == 3)).FirstOrDefault();
                if (planStaff == null)
                {
                    planStaff = new PlanStaff();
                    planStaff.Id = Guid.NewGuid();
                    planStaff.PlanKPI = new PlanKPI() { Id = obj.PlanId };
                    planStaff.IsLocked = false;
                    planStaff.ModifiedTime = DateTime.Now;
                    planStaff.Staff = staff;
                    session.Save(planStaff);
                }
                else
                {
                    planStaff.ModifiedTime = DateTime.Now;
                    session.Update(planStaff);
                }
                TargetGroupPlanMakingDTO copyTg = null;

                foreach (TargetGroupPlanMakingDTO tg in obj.TargetGroupPlanMakings)
                {
                    //Chỉ khóa những kế hoạch chưa khóa (IsLocked = false)
                    //tg.PlanKPIDetails = tg.PlanKPIDetails.Where(p => p.IsLocked == false).ToList();
                    int AgentObjectTypeId = -1;
                    AgentObjectTypeId = obj.StaffDTO.AgentObjectTypeId;
                    switch (AgentObjectTypeId)
                    {
                        case 1:
                            {

                            }
                            break;
                        case 2:
                            {

                            }
                            break;

                        //Trưởng phòng
                        case 3:
                            {
                                #region Trưởng phòng
                                switch (tg.TargetGroupDetailTypeId)
                                {
                                    #region 1
                                    case 1:
                                        {
                                            copyTg = tg;

                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {

                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }

                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 2 3
                                    case 2:
                                        {


                                        }
                                        break;
                                    case 3:
                                        {

                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                //nhóm mục tiêu thứ 3 (1 dòng): nếu KH đó đã lưu thì mới khóa
                                                if (p.StaffLeader != null)
                                                {
                                                    List<Criterion> criterions = new List<Criterion>();
                                                    if (staff != null)
                                                        criterions = session.Query<Criterion>().Where(c => c.Department.Id == staff.Department.Id && c.TargetGroupDetail.Id == tg.TargetGroupId).ToList();
                                                    else
                                                        //User KPI ko có Staff                                                 
                                                        criterions = session.Query<Criterion>().Where(c => c.Department.Id == deptId && c.TargetGroupDetail.Id == tg.TargetGroupId).ToList();

                                                    if (criterions.Count > 0)
                                                    {
                                                        Criterion existCri = criterions.FirstOrDefault();
                                                        existCri.Name = p.TargetDetail;
                                                        existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                        session.Merge(existCri);
                                                    }
                                                    else
                                                    {
                                                        PlanKPIDetail pdn = new PlanKPIDetail();
                                                        pdn = ControllerHelpers.ParsePlanKPIDetail(p, null, planStaff, tg, true);
                                                        Criterion criterion = new Criterion();
                                                        if (staff != null)
                                                            criterion = ControllerHelpers.ParseNewCriterion(p.TargetDetail, staff.Department, null, pdn, new PlanKPI() { Id = obj.PlanId }, new TargetGroupDetail() { Id = tg.TargetGroupId }, 1, 0);
                                                        else
                                                            //User KPI ko có Staff       
                                                            criterion = ControllerHelpers.ParseNewCriterion(p.TargetDetail, new Department { Id = deptId }, null, pdn, new PlanKPI() { Id = obj.PlanId }, new TargetGroupDetail() { Id = tg.TargetGroupId }, 1, 0);
                                                        criterion.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                        session.Save(criterion);
                                                    }
                                                    PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);
                                                    plDetail.IsLocked = true;
                                                    session.Update(plDetail);
                                                }
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 6
                                    case 6:
                                        {
                                            copyTg = tg;

                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            // UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            // UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }

                                        }
                                        break;
                                    #endregion
                                    #region 7
                                    case 7:
                                        {
                                            copyTg = tg;


                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }

                                        }
                                        break;
                                        #endregion
                                }
                                #endregion
                            }
                            break;
                        case 4:
                            {
                                #region Ban Giám hiệu

                                if (tg.TargetGroupDetailTypeId == 1)
                                {
                                    List<Criterion> totalCriterions = session.Query<Criterion>().ToList();
                                    foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                    {
                                        PlanKPIDetail pdn = new PlanKPIDetail();
                                        MethodDTO mt = new MethodDTO();

                                        PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);
                                        pdn.Criterions = plDetail.Criterions;

                                        //Khóa người chỉ đạo
                                        List<Criterion> leadStaffCriterions = pdn.Criterions.Where(c => c.Staff != null && c.Staff.Id == plDetail.StaffLeader.Id).ToList();
                                        if (leadStaffCriterions.Count <= 0 && p.StaffLeader != null)
                                        {
                                            Criterion criterion = new Criterion();
                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == p.StaffLeader.Id).ToList();
                                            Criterion existCri = criterions.SingleOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                            if (existCri == null)
                                            {
                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, p.StaffLeader.Id, 1, false);
                                                session.Save(criterion);
                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                MailListDTO item = new MailListDTO();
                                                item.StaffId = p.StaffLeader.Id;
                                                item.CriterionId = criterion.Id;
                                                result.Add(item);
                                                //pdn.Criterions.Add(criterion);
                                            }
                                            else
                                            {
                                                existCri.Name = p.TargetDetail;
                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                existCri.Staff = p.StaffId != null ? new Staff() { Id = p.StaffLeader.Id } : null;
                                                existCri.MaxRecord = p.MaxRecord;
                                                session.Merge(existCri);
                                            }
                                        }
                                        else
                                        {
                                            foreach (Criterion cri in leadStaffCriterions)
                                            {
                                                cri.Name = p.TargetDetail;
                                                cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                cri.Department = p.LeadDepartment != null ? new Department() { Id = p.LeadDepartment.Id } : null;
                                                cri.MaxRecord = p.MaxRecord;
                                                session.Merge(cri);
                                            }
                                        }


                                        //Khóa đơn vị chủ trì
                                        List<Criterion> leadCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == plDetail.LeadDepartment.Id).ToList();
                                        if (leadCriterions.Count <= 0)
                                        {
                                            Criterion criterion = new Criterion();
                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == p.LeadDepartment.Id).ToList();
                                            //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                            Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                            if (existCri == null)
                                            {
                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, p.LeadDepartment.Id, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 6, false);
                                                session.Save(criterion);

                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                MailListDTO item = new MailListDTO();
                                                item.DepartmentId = p.LeadDepartment.Id;
                                                item.CriterionId = criterion.Id;
                                                result.Add(item);
                                                //pdn.Criterions.Add(criterion);
                                            }
                                            else
                                            {
                                                existCri.Name = p.TargetDetail;
                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                existCri.Department = p.LeadDepartment != null ? new Department() { Id = p.LeadDepartment.Id } : null;
                                                existCri.MaxRecord = p.MaxRecord;
                                                session.Merge(existCri);

                                            }
                                        }
                                        else
                                        {
                                            foreach (Criterion cri in leadCriterions)
                                            {
                                                cri.Name = p.TargetDetail;
                                                cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                cri.Department = p.LeadDepartment != null ? new Department() { Id = p.LeadDepartment.Id } : null;
                                                cri.MaxRecord = p.MaxRecord;
                                                session.Merge(cri);
                                            }
                                        }

                                        //Cập nhật công việc đc phân công cho đơn vị
                                        UpdateDepartment(plDetail, p, session);

                                        plDetail.IsLocked = true;
                                        session.Update(plDetail);
                                    }
                                }
                                //    }
                                //}

                                #endregion
                            }
                            break;
                        case 5:
                            {
                                #region Khoa Viện Trung Tâm
                                switch (tg.TargetGroupDetailTypeId)
                                {
                                    #region 1
                                    case 1:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);
                                                pdn.Criterions = plDetail.Criterions;

                                                //Khóa xuong bộ môn
                                                foreach (var n in plDetail.SubDepartments)
                                                {
                                                    List<Criterion> leadCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == plDetail.LeadDepartment.Id).ToList();
                                                    if (leadCriterions.Count <= 0)
                                                    {
                                                        Criterion criterion = new Criterion();
                                                        List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == p.LeadDepartment.Id).ToList();
                                                        //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                        Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                        if (existCri == null)
                                                        {
                                                            criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, new MethodDTO(), n.Id, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 6, false);
                                                            session.Save(criterion);

                                                            //Nếu cri thêm mới thì add vào list gửi mail
                                                            MailListDTO item = new MailListDTO();
                                                            item.DepartmentId = n.Id;
                                                            item.CriterionId = criterion.Id;
                                                            result.Add(item);
                                                            //pdn.Criterions.Add(criterion);
                                                        }
                                                        else
                                                        {
                                                            existCri.Name = p.TargetDetail;
                                                            existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                            existCri.MaxRecord = p.MaxRecord;
                                                            session.Merge(existCri);

                                                        }
                                                    }
                                                    else
                                                    {
                                                        foreach (Criterion cri in leadCriterions)
                                                        {
                                                            cri.Name = p.TargetDetail;
                                                            cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                            cri.Department = new Department() { Id = n.Id };
                                                            cri.MaxRecord = p.MaxRecord;
                                                            session.Merge(cri);
                                                        }
                                                    }

                                                    //Cập nhật công việc đc phân công cho bộ môn
                                                    UpdateDepartment(plDetail, p, session);
                                                }

                                                //Khóa xuong người thực hiện
                                                foreach (var n in plDetail.SubStaffs)
                                                {

                                                    List<Criterion> leadCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == plDetail.LeadDepartment.Id).ToList();

                                                    Criterion existCri = leadCriterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);

                                                    if (existCri == null)
                                                    {
                                                        Criterion criterion = new Criterion();
                                                        criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, new MethodDTO(), Guid.Empty, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, true);
                                                        criterion.StaffLeader = null;
                                                        criterion.Staff = new Staff() { Id = n.Staff.Id };
                                                        criterion.Department = null;
                                                        session.Save(criterion);
                                                        //pdn.Criterions.Add(criterion);

                                                        //Nếu cri thêm mới thì add vào list gửi mail
                                                        MailListDTO item = new MailListDTO();
                                                        item.StaffId = n.Staff.Id;
                                                        item.CriterionId = criterion.Id;
                                                        result.Add(item);
                                                    }
                                                    else
                                                    {
                                                        existCri.Name = p.TargetDetail;
                                                        existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                        existCri.Staff = new Staff() { Id = n.Staff.Id };
                                                        existCri.MaxRecord = p.MaxRecord;
                                                        session.Merge(existCri);

                                                        //Phục hồi các công việc đã  bị hủy
                                                        PlanKPIDetailReborn(existCri, session);
                                                    }

                                                    //Cập nhật công việc đc phân công cho bộ môn
                                                    UpdateDepartment(plDetail, p, session);
                                                }

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null && it != p.StaffLeader.Id)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                        }
                                                    }
                                                    //Cập nhật công việc đc phân công cho cá nhân
                                                    UpdateStaff(plDetail, p, session);

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                        }
                                                        //Cập nhật công việc đc phân công cho đơn vị
                                                        UpdateDepartment(plDetail, p, session);
                                                    }

                                                    plDetail.IsLocked = true;
                                                    session.Update(plDetail);
                                                }
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 6
                                    case 6:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == p.LeadDepartment.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 7
                                    case 7:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                        #endregion
                                }
                                #endregion
                            }
                            break;
                        case 6:
                            {
                                #region Bộ môn
                                switch (tg.TargetGroupDetailTypeId)
                                {
                                    #region 1
                                    case 1:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);
                                                pdn.Criterions = plDetail.Criterions;

                                                //Khóa xuong bộ môn
                                                foreach (var n in plDetail.SubDepartments)
                                                {
                                                    List<Criterion> leadCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == plDetail.LeadDepartment.Id).ToList();
                                                    if (leadCriterions.Count <= 0)
                                                    {
                                                        Criterion criterion = new Criterion();
                                                        List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == p.LeadDepartment.Id).ToList();
                                                        //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                        Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                        if (existCri == null)
                                                        {
                                                            criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, new MethodDTO(), n.Id, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 6, false);
                                                            session.Save(criterion);

                                                            //Nếu cri thêm mới thì add vào list gửi mail
                                                            MailListDTO item = new MailListDTO();
                                                            item.DepartmentId = n.Id;
                                                            item.CriterionId = criterion.Id;
                                                            result.Add(item);
                                                            //pdn.Criterions.Add(criterion);
                                                        }
                                                        else
                                                        {
                                                            existCri.Name = p.TargetDetail;
                                                            existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                            existCri.MaxRecord = p.MaxRecord;
                                                            session.Merge(existCri);

                                                        }
                                                    }
                                                    else
                                                    {
                                                        foreach (Criterion cri in leadCriterions)
                                                        {
                                                            cri.Name = p.TargetDetail;
                                                            cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                            cri.Department = new Department() { Id = n.Id };
                                                            cri.MaxRecord = p.MaxRecord;
                                                            session.Merge(cri);
                                                        }
                                                    }

                                                    //Cập nhật công việc đc phân công cho bộ môn
                                                    UpdateDepartment(plDetail, p, session);
                                                }

                                                //Khóa xuong người thực hiện
                                                foreach (var n in plDetail.SubStaffs)
                                                {

                                                    List<Criterion> leadCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == plDetail.LeadDepartment.Id).ToList();

                                                    Criterion existCri = leadCriterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);

                                                    if (existCri == null)
                                                    {
                                                        Criterion criterion = new Criterion();
                                                        criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, new MethodDTO(), Guid.Empty, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, true);
                                                        criterion.StaffLeader = null;
                                                        criterion.Staff = new Staff() { Id = n.Staff.Id };
                                                        criterion.Department = null;
                                                        session.Save(criterion);
                                                        //pdn.Criterions.Add(criterion);

                                                        //Nếu cri thêm mới thì add vào list gửi mail
                                                        MailListDTO item = new MailListDTO();
                                                        item.StaffId = n.Staff.Id;
                                                        item.CriterionId = criterion.Id;
                                                        result.Add(item);
                                                    }
                                                    else
                                                    {
                                                        existCri.Name = p.TargetDetail;
                                                        existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                        existCri.Staff = new Staff() { Id = n.Staff.Id };
                                                        existCri.MaxRecord = p.MaxRecord;
                                                        session.Merge(existCri);

                                                        //Phục hồi các công việc đã  bị hủy
                                                        PlanKPIDetailReborn(existCri, session);
                                                    }

                                                    //Cập nhật công việc đc phân công cho bộ môn
                                                    UpdateDepartment(plDetail, p, session);
                                                }

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null && it != p.StaffLeader.Id)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                        }
                                                    }
                                                    //Cập nhật công việc đc phân công cho cá nhân
                                                    UpdateStaff(plDetail, p, session);

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                        }
                                                        //Cập nhật công việc đc phân công cho đơn vị
                                                        UpdateDepartment(plDetail, p, session);
                                                    }

                                                    plDetail.IsLocked = true;
                                                    session.Update(plDetail);
                                                }
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 6
                                    case 6:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == p.LeadDepartment.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 7
                                    case 7:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                        #endregion
                                }
                                #endregion
                            }
                            break;
                        case 7:
                            {
                                #region Phó Trưởng phòng
                                switch (tg.TargetGroupDetailTypeId)
                                {
                                    #region 1
                                    case 1:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null && it != p.StaffLeader.Id)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                        }
                                                    }
                                                    //Cập nhật công việc đc phân công cho cá nhân
                                                    UpdateStaff(plDetail, p, session);

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                        }
                                                        //Cập nhật công việc đc phân công cho đơn vị
                                                        UpdateDepartment(plDetail, p, session);
                                                    }

                                                    plDetail.IsLocked = true;
                                                    session.Update(plDetail);
                                                }
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 6
                                    case 6:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 6, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == p.LeadDepartment.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 7, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 7
                                    case 7:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 6, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                    #endregion
                                    case 2:
                                        {


                                        }
                                        break;
                                    case 3:
                                        {


                                        }
                                        break;
                                }
                                #endregion
                            }
                            break;
                        case 8:
                            {
                                #region Phó Khoa Viện Trung Tâm
                                switch (tg.TargetGroupDetailTypeId)
                                {
                                    #region 1
                                    case 1:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null && it != p.StaffLeader.Id)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                        }
                                                    }
                                                    //Cập nhật công việc đc phân công cho cá nhân
                                                    UpdateStaff(plDetail, p, session);

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, p.TargetGroupDetail.Id == new Guid("1FEC7670-B91E-4E24-AC68-45E270CECED3") ? 7 : 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                        }
                                                        //Cập nhật công việc đc phân công cho đơn vị
                                                        UpdateDepartment(plDetail, p, session);
                                                    }

                                                    plDetail.IsLocked = true;
                                                    session.Update(plDetail);
                                                }
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 6
                                    case 6:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 6, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == p.LeadDepartment.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                    #endregion
                                    #region 7
                                    case 7:
                                        {
                                            copyTg = tg;
                                            foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                            {
                                                PlanKPIDetail pdn = new PlanKPIDetail();
                                                //PlanKPIDetail updatePlanKPIDetail = session.Query<PlanKPIDetail>().SingleOrDefault(pld => pld.Id == p.Id);
                                                //pdn = ControllerHelpers.ParsePlanKPIDetail(p, updatePlanKPIDetail, planStaff, tg, false);
                                                PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);

                                                foreach (MethodDTO mt in p.Methods)
                                                {
                                                    // khóa xuống nhân viên cùng đơn vị
                                                    foreach (Guid it in mt.StaffId)
                                                    {
                                                        if (p.StaffLeader != null)
                                                        {
                                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == it).ToList();
                                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));

                                                            if (existCri == null)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, Guid.Empty, 6, true);
                                                                criterion.StaffLeader = null;
                                                                criterion.Staff = new Staff() { Id = it };
                                                                criterion.Department = null;
                                                                session.Save(criterion);
                                                                //pdn.Criterions.Add(criterion);

                                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                                MailListDTO item = new MailListDTO();
                                                                item.StaffId = it;
                                                                item.CriterionId = criterion.Id;
                                                                result.Add(item);
                                                            }
                                                            else
                                                            {
                                                                existCri.Name = p.TargetDetail;
                                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                existCri.Staff = new Staff() { Id = it };
                                                                existCri.MaxRecord = p.MaxRecord;
                                                                session.Merge(existCri);

                                                                //Phục hồi các công việc đã  bị hủy
                                                                PlanKPIDetailReborn(existCri, session);
                                                            }
                                                            //Cập nhật công việc đc phân công cho cá nhân
                                                            UpdateStaff(plDetail, p, session);
                                                        }
                                                    }

                                                    // khóa đơn vị cùng thực hiện
                                                    foreach (var de in mt.LeadDepartment)
                                                    {
                                                        if (deptId != de.DepartmentId.Id)
                                                        {
                                                            List<Criterion> leaddepCriterions = pdn.Criterions.Where(c => c.Department != null && c.Department.Id == de.DepartmentId.Id).ToList();
                                                            if (leaddepCriterions.Count <= 0)
                                                            {
                                                                Criterion criterion = new Criterion();
                                                                List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Department.Id == de.DepartmentId.Id).ToList();
                                                                //SingleOrDefault lỗi nên chuyển thành FirstOrDefault
                                                                Criterion existCri = criterions.FirstOrDefault(c => c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id);
                                                                if (existCri == null)
                                                                {
                                                                    criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, de.DepartmentId.Id, 2, false);
                                                                    session.Save(criterion);

                                                                    //Nếu cri thêm mới thì add vào list gửi mail
                                                                    MailListDTO item = new MailListDTO();
                                                                    item.DepartmentId = de.DepartmentId.Id;
                                                                    item.CriterionId = criterion.Id;
                                                                    result.Add(item);
                                                                    //pdn.Criterions.Add(criterion);
                                                                }
                                                                else
                                                                {
                                                                    existCri.Name = p.TargetDetail;
                                                                    existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    existCri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    existCri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(existCri);

                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (Criterion cri in leaddepCriterions)
                                                                {
                                                                    cri.Name = p.TargetDetail;
                                                                    cri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                                    cri.Department = de.DepartmentId.Id != null ? new Department() { Id = de.DepartmentId.Id } : null;
                                                                    cri.MaxRecord = p.MaxRecord;
                                                                    session.Merge(cri);
                                                                }
                                                            }

                                                            //Cập nhật công việc đc phân công cho đơn vị
                                                            UpdateDepartment(plDetail, p, session);
                                                        }
                                                    }
                                                }
                                                plDetail.IsLocked = true;
                                                session.Update(plDetail);
                                            }
                                        }
                                        break;
                                        #endregion
                                }
                                #endregion
                            }
                            break;
                        case 12:
                            {
                                #region Trưởng ngành
                                foreach (PlanKPIMakingDetailDTO p in tg.PlanKPIDetails)
                                {
                                    PlanKPIDetail pdn = new PlanKPIDetail();
                                    MethodDTO mt = new MethodDTO();

                                    PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().Single(pd => pd.Id == p.Id);
                                    pdn.Criterions = plDetail.Criterions;

                                    foreach (Guid sid in p.SubStaffIds)
                                    {

                                        List<Criterion> subCriterions = pdn.Criterions.Where(c => c.Staff != null && c.Staff.Id == sid).ToList();
                                        if (subCriterions.Count <= 0)
                                        {
                                            List<Criterion> criterions = session.Query<Criterion>().Where(c => c.Staff.Id == sid).ToList();
                                            Criterion existCri = criterions.SingleOrDefault(c => (c.FromPlanKPIDetail != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id));
                                            if (existCri == null)
                                            {
                                                Criterion criterion = new Criterion();
                                                criterion = ControllerHelpers.ParseCriterion(tg, obj, pdn, p, mt, sid, 5, false);
                                                session.Save(criterion);

                                                //Nếu cri thêm mới thì add vào list gửi mail
                                                MailListDTO item = new MailListDTO();
                                                item.StaffId = sid;
                                                item.CriterionId = criterion.Id;
                                                result.Add(item);
                                                //pdn.Criterions.Add(criterion);
                                            }
                                            else
                                            {
                                                existCri.Name = p.TargetDetail;
                                                existCri.FromPlanKPIDetail = new PlanKPIDetail() { Id = p.Id };
                                                existCri.MaxRecord = p.MaxRecord;
                                                session.Merge(existCri);

                                                //Phục hồi các công việc đã  bị hủy
                                                PlanKPIDetailReborn(existCri, session);
                                            }
                                        }
                                        else
                                        {
                                            foreach (Criterion cri in subCriterions)
                                            {
                                                cri.Name = p.TargetDetail;
                                                cri.MaxRecord = p.MaxRecord;
                                                session.Update(cri);
                                                //Phục hồi các công việc đã  bị hủy
                                                PlanKPIDetailReborn(cri, session);
                                            }
                                        }
                                    }
                                    //Cập nhật công việc đc phân công cho cá nhân
                                    UpdateStaff(plDetail, p, session);
                                    plDetail.IsLocked = true;
                                    session.Update(plDetail);
                                }
                                #endregion
                            }
                            break;
                    }
                }
            });
            return result;
        }

        //public int Delete(PlanKPIDetail obj)
        //{
        //    int result = 0;
        //    try
        //    {
        //        SessionManager.DoWork(session =>
        //        {
        //            if (obj != null)
        //            {
        //                bool check = false;
        //                check = session.Query<Criterion>().Any(c => c.FromPlanKPIDetail.Id == obj.Id);
        //                if (check == false)
        //                {
        //                    session.Delete(obj);
        //                    result = 1;
        //                }
        //            }
        //        });
        //        SessionManager.DoWork(session =>
        //        {
        //            PlanKPIDetail pkpiDetail = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == obj.Id);
        //            if (pkpiDetail == null)
        //                ControllerHelpers.UpdatePlanDetailDic(obj, 2, session);
        //        });
        //    }
        //    catch(Exception e)
        //    {
        //        result = 0;
        //    }
        //    return result;
        //}

        [Authorize]
        [Route("")]
        public int PutSendMail(List<MailListDTO> obj)
        {
            ControllerHelpers.SendMail(obj);
            return 1;
        }
        [Authorize]
        [Route("")]
        public int Delete(PlanKPIDetail obj)
        {
            int result = 0;
            //try
            //{
            SessionManager.DoWork(session =>
            {
                PlanKPIDetail deletePlan = session.Query<PlanKPIDetail>().SingleOrDefault(pl => pl.Id == obj.Id);
                if (deletePlan != null)
                {
                    List<ResultDetail> rs = session.Query<ResultDetail>().Where(r => r.PlanKPIDetail.Id == obj.Id).ToList();
                    if (rs != null)
                    {
                        //foreach(ResultDetail rt in rs)
                        //{
                        //    session.Delete(rt);
                        //}
                    }
                    deletePlan.IsDelete = true;
                    session.Merge(deletePlan);
                    result = 1;
                }
            });
            //SessionManager.DoWork(session =>
            //{
            //    PlanKPIDetail pkpiDetail = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == obj.Id);
            //    if (pkpiDetail == null)
            //        ControllerHelpers.UpdatePlanDetailDic(obj, 2, session);
            //});
            //}
            //catch (Exception e)
            //{
            //    result = 0;
            //}
            return result;
        }

        [Authorize]
        [Route("")]
        public int DeleteDisable(PlanKPIDetail obj)
        {
            int result = 0;
            //try
            //{
            SessionManager.DoWork(session =>
            {
                PlanKPIDetail disablePlan = session.Query<PlanKPIDetail>().SingleOrDefault(pl => pl.Id == obj.Id);
                if (disablePlan != null)
                {
                    List<PlanKPIDetail> childPlanDetail = ControllerHelpers.GetAllChildPlanKPIDetail(obj.Id, session);
                    disablePlan.IsDisable = !disablePlan.IsDisable;
                    session.Merge(disablePlan);

                    foreach (PlanKPIDetail pld in childPlanDetail)
                    {
                        pld.IsDisable = disablePlan.IsDisable;
                        session.Update(pld);
                    }

                    result = 1;
                }
            });
            //SessionManager.DoWork(session =>
            //{
            //    PlanKPIDetail pkpiDetail = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == obj.Id);
            //    if (pkpiDetail == null)
            //        ControllerHelpers.UpdatePlanDetailDic(obj, 1, session);
            //});
            //}
            //catch (Exception e)
            //{
            //    result = 0;
            //}
            return result;
        }
        [Authorize]
        [Route("")]
        public int IsDeleteAllChild(PlanKPIDetail obj, NHibernate.ISession session, bool delete)
        {
            int result = 0;
            //try
            //{
            List<PlanKPIDetail> childPlanDetail = ControllerHelpers.GetAllChildStaffPlanKPIDetail(obj.Id, session);
            obj.IsDelete = delete;

            foreach (PlanKPIDetail pld in childPlanDetail)
            {
                pld.IsDelete = delete;
                session.Update(pld);
                //ControllerHelpers.UpdatePlanDetailDic(pld, 1, session);
            }
            session.Update(obj);
            result = 1;
            //ControllerHelpers.UpdatePlanDetailDic(obj, 1, session);
            //}
            //catch (Exception e)
            //{
            //    result = 0;
            //}
            return result;
        }

        [Authorize]
        [Route("")]
        public void UpdateSubject(PlanKPIDetail plDetail, PlanKPIMakingDetailDTO p, NHibernate.ISession session)
        {
            //Lấy Id và cri ID của những đơn vị đã được phân công công việc
            List<SubDepartmentCriterion> subDepartmentCris =
            session.Query<Criterion>()
            .Where(c => c.FromPlanKPIDetail.Id == plDetail.Id && c.Staff == null && c.Department != null)
            .Select(c => new SubDepartmentCriterion { DepartmentId = c.Department.Id, CriterionId = c.Id }).ToList();

            List<Guid> SubDeptIds2 = subDepartmentCris.Select(c => c.DepartmentId).ToList();

            //Những đơn vị đã được phân công công việc nhưng bị rút lại quyết định (hiện tại ko phân công nữa)
            List<Guid> SubDeptIds3 = SubDeptIds2.Except(p.SubjectIds).ToList();

            //Xóa kế hoạch đã phân công cho đơn vị
            foreach (Guid subDeptId in SubDeptIds3)
            {
                //Lấy cri đã phân công cho đơn vị
                Guid substCri = subDepartmentCris.Where(crit => crit.DepartmentId == subDeptId).Select(crit => crit.CriterionId).SingleOrDefault();
                //Lấy plandetail
                List<PlanKPIDetail> subPlanDetails = ControllerHelpers.GetListPlanDetailByCriterion(substCri, session);
                if (subPlanDetails.Count == 0)
                {
                    var cri = session.Query<Criterion>().SingleOrDefault(q => q.Id == substCri);
                    if (cri != null)
                        session.Delete(cri);
                }
                else
                {
                    foreach (PlanKPIDetail subPlanDetail in subPlanDetails)
                    {
                        IsDeleteAllChild(subPlanDetail, session, true);
                    }
                }
            }
        }
        [Authorize]
        [Route("")]
        public void PlanKPIDetailReborn(Criterion cri, NHibernate.ISession session)
        {
            //Tìm các plandetail bị isdeleted của cri
            List<PlanKPIDetail> subPlanDetails = ControllerHelpers.GetListDeletedPlanDetailByCriterion(cri.Id, session);

            //Tìm tất cả con của plandetail và phục hồi
            foreach (PlanKPIDetail subPlanDetail in subPlanDetails)
            {
                IsDeleteAllChild(subPlanDetail, session, false);
            }
        }
        [Authorize]
        [Route("")]
        public void UpdateDepartment(PlanKPIDetail plDetail, PlanKPIMakingDetailDTO p, NHibernate.ISession session)
        {
            //Lấy Id và cri ID của những đơn vị đã được phân công công việc
            List<SubDepartmentCriterion> subDepartmentCris =
            session.Query<Criterion>()
            .Where(c => c.FromPlanKPIDetail.Id == plDetail.Id && c.Staff == null && c.Department != null)
            .Select(c => new SubDepartmentCriterion { DepartmentId = c.Department.Id, CriterionId = c.Id }).ToList();

            List<Guid> SubDeptIds2 = subDepartmentCris.Select(c => c.DepartmentId).ToList();

            //Những đơn vị đã được phân công công việc nhưng bị rút lại quyết định (hiện tại ko phân công nữa, bao gồm cả đơn vị chủ trì)
            if (p.LeadDepartment != null && p.LeadDepartment.Id != Guid.Empty)
            {
                p.SubDepartmentIds.Add(p.LeadDepartment.Id);
            }
            List<Guid> SubDeptIds3 = SubDeptIds2.Except(p.SubDepartmentIds).ToList();

            //Xóa kế hoạch đã phân công cho đơn vị
            foreach (Guid subDeptId in SubDeptIds3)
            {
                //Lấy cri đã phân công cho đơn vị
                Guid substCri = subDepartmentCris.Where(crit => crit.DepartmentId == subDeptId).Select(crit => crit.CriterionId).FirstOrDefault();
                //Lấy plandetail
                List<PlanKPIDetail> subPlanDetails = ControllerHelpers.GetListPlanDetailByCriterion(substCri, session);
                if (subPlanDetails.Count == 0)
                {
                    var cri = session.Query<Criterion>().SingleOrDefault(q => q.Id == substCri);
                    //if (cri != null)
                    //  session.Delete(cri);
                }
                else
                {
                    foreach (PlanKPIDetail subPlanDetail in subPlanDetails)
                    {
                        IsDeleteAllChild(subPlanDetail, session, true);
                    }
                }
            }
        }
        [Authorize]
        [Route("")]
        public void UpdateStaff(PlanKPIDetail plDetail, PlanKPIMakingDetailDTO p, NHibernate.ISession session)
        {
            //Lấy Id và cri ID của những cá nhân đã được phân công công việc
            List<SubStaffCriterion> subStaffCris =
            session.Query<Criterion>()
            .Where(c => c.FromPlanKPIDetail.Id == plDetail.Id && c.Staff != null && c.Department == null)
            .Select(c => new SubStaffCriterion { StaffId = c.Staff.Id, CriterionId = c.Id }).ToList();

            List<Guid> SubStaffIds2 = subStaffCris.Select(c => c.StaffId).ToList();

            //Những cá nhân đã được phân công công việc nhưng bị rút lại quyết định (hiện tại ko phân công nữa)
            List<Guid> SubStaffIds3 = SubStaffIds2.Except(p.SubStaffIds).ToList();

            //Xóa kế hoạch đã phân công cho cá nhân
            foreach (Guid substId in SubStaffIds3)
            {
                //Lấy cri đã phân công cho cá nhân
                Guid substCri = subStaffCris.Where(c => c.StaffId == substId).Select(c => c.CriterionId).FirstOrDefault();
                //Lấy plandetail
                List<PlanKPIDetail> subPlanDetails = ControllerHelpers.GetListPlanDetailByCriterion(substCri, session);
                if (subPlanDetails.Count == 0)
                {
                    var cri = session.Query<Criterion>().SingleOrDefault(q => q.Id == substCri);
                    //if (cri != null)
                    // session.Delete(cri);
                }
                else
                {
                    foreach (PlanKPIDetail subPlanDetail in subPlanDetails)
                    {
                        IsDeleteAllChild(subPlanDetail, session, true);
                    }
                }
            }
        }

        [Authorize]
        [Route("")]
        public void UpdateParentPlanDetail(Guid Id, int AgentObjectTypeId, NHibernate.ISession session) // Không sử dụng nữa (chuyển qua dùng stored)
        {
            if (Id == Guid.Empty) //Plan detail này đã được xóa
            {
                return;
            }

            PlanKPIDetail plDetail = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == Id);

            //Lấy Id và cri ID của những cá nhân đã được phân công công việc
            //List<SubStaffCriterion> subStaffCris =
            //session.Query<Criterion>()
            //.Where(c => c.FromPlanKPIDetail.Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail).Id && c.Staff != null && c.Department == null)
            //.Select(c => new SubStaffCriterion { StaffId = c.Staff.Id, CriterionId = c.Id }).ToList();

            List<Criterion> criterions = session.Query<Criterion>().ToList();
            List<SubStaffCriterion> subStaffCris = new List<SubStaffCriterion>();
            foreach (Criterion c in criterions)
            {
                if (c.FromPlanKPIDetail != null && c.Staff != null && ControllerHelpers.GetOriginalParentPlanKPIDetail(c.FromPlanKPIDetail, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id)
                {
                    SubStaffCriterion subStaffCri = new SubStaffCriterion()
                    {
                        StaffId = c.Staff.Id,
                        CriterionId = c.Id
                    };
                    subStaffCris.Add(subStaffCri);
                }
            }

            //update cho các cá nhân đã nhận công việc
            List<Guid> SubStaffIds2 = subStaffCris.Select(c => c.StaffId).ToList();
            if (plDetail.ParentPlanKPIDetail != null)
            {
                foreach (Guid substId in SubStaffIds2)
                {
                    //Lấy cri đã phân công cho cá nhân
                    Guid substCri = subStaffCris.Where(c => c.StaffId == substId).Select(c => c.CriterionId).SingleOrDefault();
                    //Lấy plandetail
                    List<PlanKPIDetail> subPlanDetails = ControllerHelpers.GetListPlanDetailByCriterion(substCri, session);
                    //update ParentPlanKPIDetail cho tất cả plandetail đã nhận công việc
                    foreach (PlanKPIDetail subPlanDetail in subPlanDetails)
                    {
                        subPlanDetail.ParentPlanKPIDetail = plDetail;
                        session.Update(subPlanDetail);
                    }
                }
            }

            //update cho các plankpi có parent là plankpi hiện tại (cùng 1 staff hoặc 1 department)
            if (AgentObjectTypeId == (int)AgentObjectTypes.PhongBan || AgentObjectTypeId == (int)AgentObjectTypes.Khoa)
            {
                if (plDetail.PlanStaff.Department != null && plDetail.PlanStaff.PlanKPI != null)
                {
                    List<PlanKPIDetail> pls = session.Query<PlanKPIDetail>().Where(p => p.PlanStaff.Department != null && p.PlanStaff.Department.Id == plDetail.PlanStaff.Department.Id && p.PlanStaff.PlanKPI.ParentPlan != null && p.PlanStaff.PlanKPI.ParentPlan.Id == plDetail.PlanStaff.PlanKPI.Id).ToList();
                    pls = pls.Where(p => ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id).ToList();

                    foreach (PlanKPIDetail p in pls)
                    {
                        p.ParentPlanKPIDetail = plDetail;
                        session.Update(p);
                    }
                }
            }
            else
            {
                if (plDetail.PlanStaff.Staff != null && plDetail.PlanStaff.PlanKPI != null)
                {
                    List<PlanKPIDetail> pls = session.Query<PlanKPIDetail>().Where(p => p.PlanStaff.Staff != null && p.PlanStaff.Staff.Id == plDetail.PlanStaff.Staff.Id && p.PlanStaff.PlanKPI.ParentPlan != null && p.PlanStaff.PlanKPI.ParentPlan.Id == plDetail.PlanStaff.PlanKPI.Id).ToList();
                    pls = pls.Where(p => ControllerHelpers.GetOriginalParentPlanKPIDetail(p, session).Id == ControllerHelpers.GetOriginalParentPlanKPIDetail(plDetail, session).Id).ToList();

                    foreach (PlanKPIDetail p in pls)
                    {
                        p.ParentPlanKPIDetail = plDetail;
                        session.Update(p);
                    }
                }
            }
        }
        [Authorize]
        [Route("")]
        public void UpdateParentPlanDetail2(Guid Id, int AgentObjectTypeId, WebUser_Factory factory)
        {
            if (Id == Guid.Empty) //Plan detail này đã được xóa
            {
                return;
            }
            factory.Context.spd_KPI_CapNhatParentChoCacCongViecDuocPhanCongPhucVuNgungSuDung(Id, AgentObjectTypeId);
        }
        //[Authorize]
        //[Route("")]
        //public void PutRefreshUpdatePlanDetailCache()
        //{
        //    SessionManager.DoWork(session =>
        //    {
        //        ControllerHelpers.UpdatePlanDetailDic(session);
        //    });

        //}

        //[Authorize]
        //[Route("")]
        //public void PutUpdatePlanDetailCache(PlanKPIDetail planDetail)
        //{
        //    SessionManager.DoWork(session =>
        //    {
        //        ControllerHelpers.UpdatePlanDetailDic(planDetail, 1, session);
        //    });

        //}

        [Authorize]
        [Route("")]
        public int GetMaxOrderNumberPlanKPIDetail(Guid planStaffId, Guid targetGroupId)
        {
            int result = 0;
            SessionManager.DoWork(session =>
            {
                result = ControllerHelpers.GetMaxOrderNumberPlanKPIDetail(planStaffId, targetGroupId, session);
            });
            return result;
        }

        /// <summary>
        /// save other activity and science research
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        [Authorize]
        [Route("")]
        public string PutActivity(PlanKPIMakingDetailDTO obj)
        {
            string result = "0";

            SessionManager.DoWork(session =>
            {
                //switch (obj.AgentObjectTypeId)
                //{
                //    case 1:
                //        {
                PlanKPIDetail pld = session.Query<PlanKPIDetail>().SingleOrDefault(p => p.Id == obj.Id);
                if (pld != null)
                {
                    //Kiểm tra hđ hiện tại nếu chưa có trong hđ cũ thì thêm mới
                    if (obj.ActivityIds != null)
                    {
                        foreach (Guid did in obj.ActivityIds)
                        {
                            bool check = pld.ProfessorOtherActivities.Any(p => p.CriterionDictionary.Id == did);
                            if (check == false)
                            {
                                ProfessorOtherActivity pa = new ProfessorOtherActivity();
                                pa.Id = Guid.NewGuid();
                                pa.CriterionDictionary = new CriterionDictionary() { Id = did };
                                pa.NumberOfHour = session.Query<CriterionDictionary>().Where(p => p.Id == did).Select(p => p.NumberOfHour).SingleOrDefault();
                                pld.ProfessorOtherActivities.Add(pa);
                            }
                        }
                    }
                    if (obj.ScienceResearchIds != null)
                    {
                        foreach (Guid did in obj.ScienceResearchIds)
                        {
                            bool check = pld.ScienceResearches.Any(p => p.CriterionDictionary.Id == did);
                            if (check == false)
                            {
                                ScienceResearch sr = new ScienceResearch();
                                sr.Id = Guid.NewGuid();
                                sr.CriterionDictionary = new CriterionDictionary() { Id = did };
                                pld.ScienceResearches.Add(sr);
                            }
                        }
                    }
                    pld.IsLocked = false;
                    session.Update(pld);

                    result = pld.Id.ToString();
                    //    }
                    //}
                    //break;
                }
            });

            return result;
        }

        public class SubStaffCriterion
        {
            public Guid StaffId { get; set; }
            public Guid CriterionId { get; set; }
        }
        public class SubDepartmentCriterion
        {
            public Guid DepartmentId { get; set; }
            public Guid CriterionId { get; set; }
        }

    }
}