//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 01:49:02 ngay 20/01/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="HopDong")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HopDong : ERP_Core.BaseEntityObject//EntityObject
    {
    	static HopDong()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public HopDong()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new HopDong object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static HopDong CreateHopDong(System.Guid oid)
        {
            HopDong hopDong = new HopDong();
            hopDong.Oid = oid;
            return hopDong;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> QuanLyHopDongThinhGiang
        {
            get
            {
                return _quanLyHopDongThinhGiang;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _quanLyHopDongThinhGiang;
    			bool stopChanging = false;
                On_QuanLyHopDongThinhGiang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("QuanLyHopDongThinhGiang");
    			if(!stopChanging)
    			{
    				_quanLyHopDongThinhGiang = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("QuanLyHopDongThinhGiang");
    				On_QuanLyHopDongThinhGiang_Changed(oldValue, _quanLyHopDongThinhGiang);//\\
    			}
            }
        }
    	public static String QuanLyHopDongThinhGiang_PropertyName { get { return "QuanLyHopDongThinhGiang"; } }
        private Nullable<System.Guid> _quanLyHopDongThinhGiang;
        partial void On_QuanLyHopDongThinhGiang_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_QuanLyHopDongThinhGiang_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string LoaiHopDong
        {
            get
            {
                return _loaiHopDong;
            }
            set
            {
    			string oldValue =  _loaiHopDong;
    			bool stopChanging = false;
                On_LoaiHopDong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LoaiHopDong");
    			if(!stopChanging)
    			{
    				_loaiHopDong = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("LoaiHopDong");
    				On_LoaiHopDong_Changed(oldValue, _loaiHopDong);//\\
    			}
            }
        }
    	public static String LoaiHopDong_PropertyName { get { return "LoaiHopDong"; } }
        private string _loaiHopDong;
        partial void On_LoaiHopDong_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_LoaiHopDong_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ThongTinTruong
        {
            get
            {
                return _thongTinTruong;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _thongTinTruong;
    			bool stopChanging = false;
                On_ThongTinTruong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ThongTinTruong");
    			if(!stopChanging)
    			{
    				_thongTinTruong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ThongTinTruong");
    				On_ThongTinTruong_Changed(oldValue, _thongTinTruong);//\\
    			}
            }
        }
    	public static String ThongTinTruong_PropertyName { get { return "ThongTinTruong"; } }
        private Nullable<System.Guid> _thongTinTruong;
        partial void On_ThongTinTruong_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ThongTinTruong_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DienThoai
        {
            get
            {
                return _dienThoai;
            }
            set
            {
    			string oldValue =  _dienThoai;
    			bool stopChanging = false;
                On_DienThoai_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DienThoai");
    			if(!stopChanging)
    			{
    				_dienThoai = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DienThoai");
    				On_DienThoai_Changed(oldValue, _dienThoai);//\\
    			}
            }
        }
    	public static String DienThoai_PropertyName { get { return "DienThoai"; } }
        private string _dienThoai;
        partial void On_DienThoai_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DienThoai_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DiaChi
        {
            get
            {
                return _diaChi;
            }
            set
            {
    			string oldValue =  _diaChi;
    			bool stopChanging = false;
                On_DiaChi_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DiaChi");
    			if(!stopChanging)
    			{
    				_diaChi = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DiaChi");
    				On_DiaChi_Changed(oldValue, _diaChi);//\\
    			}
            }
        }
    	public static String DiaChi_PropertyName { get { return "DiaChi"; } }
        private string _diaChi;
        partial void On_DiaChi_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DiaChi_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SoHopDong
        {
            get
            {
                return _soHopDong;
            }
            set
            {
    			string oldValue =  _soHopDong;
    			bool stopChanging = false;
                On_SoHopDong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoHopDong");
    			if(!stopChanging)
    			{
    				_soHopDong = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("SoHopDong");
    				On_SoHopDong_Changed(oldValue, _soHopDong);//\\
    			}
            }
        }
    	public static String SoHopDong_PropertyName { get { return "SoHopDong"; } }
        private string _soHopDong;
        partial void On_SoHopDong_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_SoHopDong_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayKy
        {
            get
            {
                return _ngayKy;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayKy;
    			bool stopChanging = false;
                On_NgayKy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayKy");
    			if(!stopChanging)
    			{
    				_ngayKy = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayKy");
    				On_NgayKy_Changed(oldValue, _ngayKy);//\\
    			}
            }
        }
    	public static String NgayKy_PropertyName { get { return "NgayKy"; } }
        private Nullable<System.DateTime> _ngayKy;
        partial void On_NgayKy_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayKy_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> PhanLoaiNguoiKy
        {
            get
            {
                return _phanLoaiNguoiKy;
            }
            set
            {
    			Nullable<byte> oldValue =  _phanLoaiNguoiKy;
    			bool stopChanging = false;
                On_PhanLoaiNguoiKy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("PhanLoaiNguoiKy");
    			if(!stopChanging)
    			{
    				_phanLoaiNguoiKy = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("PhanLoaiNguoiKy");
    				On_PhanLoaiNguoiKy_Changed(oldValue, _phanLoaiNguoiKy);//\\
    			}
            }
        }
    	public static String PhanLoaiNguoiKy_PropertyName { get { return "PhanLoaiNguoiKy"; } }
        private Nullable<byte> _phanLoaiNguoiKy;
        partial void On_PhanLoaiNguoiKy_Changing(Nullable<byte> currentValue, ref Nullable<byte> newValue, ref bool stopChanging);
        partial void On_PhanLoaiNguoiKy_Changed(Nullable<byte> oldValue, Nullable<byte> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ChucVuNguoiKy
        {
            get
            {
                return _chucVuNguoiKy;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _chucVuNguoiKy;
    			bool stopChanging = false;
                On_ChucVuNguoiKy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ChucVuNguoiKy");
    			if(!stopChanging)
    			{
    				_chucVuNguoiKy = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ChucVuNguoiKy");
    				On_ChucVuNguoiKy_Changed(oldValue, _chucVuNguoiKy);//\\
    			}
            }
        }
    	public static String ChucVuNguoiKy_PropertyName { get { return "ChucVuNguoiKy"; } }
        private Nullable<System.Guid> _chucVuNguoiKy;
        partial void On_ChucVuNguoiKy_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ChucVuNguoiKy_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NguoiKy
        {
            get
            {
                return _nguoiKy;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _nguoiKy;
    			bool stopChanging = false;
                On_NguoiKy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NguoiKy");
    			if(!stopChanging)
    			{
    				_nguoiKy = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NguoiKy");
    				On_NguoiKy_Changed(oldValue, _nguoiKy);//\\
    			}
            }
        }
    	public static String NguoiKy_PropertyName { get { return "NguoiKy"; } }
        private Nullable<System.Guid> _nguoiKy;
        partial void On_NguoiKy_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NguoiKy_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NhanVien
        {
            get
            {
                return _nhanVien;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _nhanVien;
    			bool stopChanging = false;
                On_NhanVien_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NhanVien");
    			if(!stopChanging)
    			{
    				_nhanVien = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NhanVien");
    				On_NhanVien_Changed(oldValue, _nhanVien);//\\
    			}
            }
        }
    	public static String NhanVien_PropertyName { get { return "NhanVien"; } }
        private Nullable<System.Guid> _nhanVien;
        partial void On_NhanVien_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NhanVien_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> QuocTich
        {
            get
            {
                return _quocTich;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _quocTich;
    			bool stopChanging = false;
                On_QuocTich_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("QuocTich");
    			if(!stopChanging)
    			{
    				_quocTich = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("QuocTich");
    				On_QuocTich_Changed(oldValue, _quocTich);//\\
    			}
            }
        }
    	public static String QuocTich_PropertyName { get { return "QuocTich"; } }
        private Nullable<System.Guid> _quocTich;
        partial void On_QuocTich_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_QuocTich_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ChucDanhChuyenMon
        {
            get
            {
                return _chucDanhChuyenMon;
            }
            set
            {
    			string oldValue =  _chucDanhChuyenMon;
    			bool stopChanging = false;
                On_ChucDanhChuyenMon_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ChucDanhChuyenMon");
    			if(!stopChanging)
    			{
    				_chucDanhChuyenMon = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("ChucDanhChuyenMon");
    				On_ChucDanhChuyenMon_Changed(oldValue, _chucDanhChuyenMon);//\\
    			}
            }
        }
    	public static String ChucDanhChuyenMon_PropertyName { get { return "ChucDanhChuyenMon"; } }
        private string _chucDanhChuyenMon;
        partial void On_ChucDanhChuyenMon_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_ChucDanhChuyenMon_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> BoPhan
        {
            get
            {
                return _boPhan;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _boPhan;
    			bool stopChanging = false;
                On_BoPhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BoPhan");
    			if(!stopChanging)
    			{
    				_boPhan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BoPhan");
    				On_BoPhan_Changed(oldValue, _boPhan);//\\
    			}
            }
        }
    	public static String BoPhan_PropertyName { get { return "BoPhan"; } }
        private Nullable<System.Guid> _boPhan;
        partial void On_BoPhan_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_BoPhan_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> HopDongCu
        {
            get
            {
                return _hopDongCu;
            }
            set
            {
    			Nullable<bool> oldValue =  _hopDongCu;
    			bool stopChanging = false;
                On_HopDongCu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HopDongCu");
    			if(!stopChanging)
    			{
    				_hopDongCu = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("HopDongCu");
    				On_HopDongCu_Changed(oldValue, _hopDongCu);//\\
    			}
            }
        }
    	public static String HopDongCu_PropertyName { get { return "HopDongCu"; } }
        private Nullable<bool> _hopDongCu;
        partial void On_HopDongCu_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_HopDongCu_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CanCu
        {
            get
            {
                return _canCu;
            }
            set
            {
    			string oldValue =  _canCu;
    			bool stopChanging = false;
                On_CanCu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CanCu");
    			if(!stopChanging)
    			{
    				_canCu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("CanCu");
    				On_CanCu_Changed(oldValue, _canCu);//\\
    			}
            }
        }
    	public static String CanCu_PropertyName { get { return "CanCu"; } }
        private string _canCu;
        partial void On_CanCu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_CanCu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string GhiChu
        {
            get
            {
                return _ghiChu;
            }
            set
            {
    			string oldValue =  _ghiChu;
    			bool stopChanging = false;
                On_GhiChu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GhiChu");
    			if(!stopChanging)
    			{
    				_ghiChu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("GhiChu");
    				On_GhiChu_Changed(oldValue, _ghiChu);//\\
    			}
            }
        }
    	public static String GhiChu_PropertyName { get { return "GhiChu"; } }
        private string _ghiChu;
        partial void On_GhiChu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_GhiChu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> GiayToHoSo
        {
            get
            {
                return _giayToHoSo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _giayToHoSo;
    			bool stopChanging = false;
                On_GiayToHoSo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GiayToHoSo");
    			if(!stopChanging)
    			{
    				_giayToHoSo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GiayToHoSo");
    				On_GiayToHoSo_Changed(oldValue, _giayToHoSo);//\\
    			}
            }
        }
    	public static String GiayToHoSo_PropertyName { get { return "GiayToHoSo"; } }
        private Nullable<System.Guid> _giayToHoSo;
        partial void On_GiayToHoSo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_GiayToHoSo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ObjectType
        {
            get
            {
                return _objectType;
            }
            set
            {
    			Nullable<int> oldValue =  _objectType;
    			bool stopChanging = false;
                On_ObjectType_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ObjectType");
    			if(!stopChanging)
    			{
    				_objectType = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ObjectType");
    				On_ObjectType_Changed(oldValue, _objectType);//\\
    			}
            }
        }
    	public static String ObjectType_PropertyName { get { return "ObjectType"; } }
        private Nullable<int> _objectType;
        partial void On_ObjectType_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_ObjectType_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgaySinh
        {
            get
            {
                return _ngaySinh;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngaySinh;
    			bool stopChanging = false;
                On_NgaySinh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgaySinh");
    			if(!stopChanging)
    			{
    				_ngaySinh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgaySinh");
    				On_NgaySinh_Changed(oldValue, _ngaySinh);//\\
    			}
            }
        }
    	public static String NgaySinh_PropertyName { get { return "NgaySinh"; } }
        private Nullable<System.DateTime> _ngaySinh;
        partial void On_NgaySinh_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgaySinh_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NoiSinh
        {
            get
            {
                return _noiSinh;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _noiSinh;
    			bool stopChanging = false;
                On_NoiSinh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NoiSinh");
    			if(!stopChanging)
    			{
    				_noiSinh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NoiSinh");
    				On_NoiSinh_Changed(oldValue, _noiSinh);//\\
    			}
            }
        }
    	public static String NoiSinh_PropertyName { get { return "NoiSinh"; } }
        private Nullable<System.Guid> _noiSinh;
        partial void On_NoiSinh_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NoiSinh_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CMND
        {
            get
            {
                return _cMND;
            }
            set
            {
    			string oldValue =  _cMND;
    			bool stopChanging = false;
                On_CMND_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CMND");
    			if(!stopChanging)
    			{
    				_cMND = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("CMND");
    				On_CMND_Changed(oldValue, _cMND);//\\
    			}
            }
        }
    	public static String CMND_PropertyName { get { return "CMND"; } }
        private string _cMND;
        partial void On_CMND_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_CMND_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayCap
        {
            get
            {
                return _ngayCap;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayCap;
    			bool stopChanging = false;
                On_NgayCap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayCap");
    			if(!stopChanging)
    			{
    				_ngayCap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayCap");
    				On_NgayCap_Changed(oldValue, _ngayCap);//\\
    			}
            }
        }
    	public static String NgayCap_PropertyName { get { return "NgayCap"; } }
        private Nullable<System.DateTime> _ngayCap;
        partial void On_NgayCap_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayCap_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NoiCap
        {
            get
            {
                return _noiCap;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _noiCap;
    			bool stopChanging = false;
                On_NoiCap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NoiCap");
    			if(!stopChanging)
    			{
    				_noiCap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NoiCap");
    				On_NoiCap_Changed(oldValue, _noiCap);//\\
    			}
            }
        }
    	public static String NoiCap_PropertyName { get { return "NoiCap"; } }
        private Nullable<System.Guid> _noiCap;
        partial void On_NoiCap_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NoiCap_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string NoiLamViec
        {
            get
            {
                return _noiLamViec;
            }
            set
            {
    			string oldValue =  _noiLamViec;
    			bool stopChanging = false;
                On_NoiLamViec_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NoiLamViec");
    			if(!stopChanging)
    			{
    				_noiLamViec = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("NoiLamViec");
    				On_NoiLamViec_Changed(oldValue, _noiLamViec);//\\
    			}
            }
        }
    	public static String NoiLamViec_PropertyName { get { return "NoiLamViec"; } }
        private string _noiLamViec;
        partial void On_NoiLamViec_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_NoiLamViec_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> LoaiCoQuan
        {
            get
            {
                return _loaiCoQuan;
            }
            set
            {
    			Nullable<byte> oldValue =  _loaiCoQuan;
    			bool stopChanging = false;
                On_LoaiCoQuan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LoaiCoQuan");
    			if(!stopChanging)
    			{
    				_loaiCoQuan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LoaiCoQuan");
    				On_LoaiCoQuan_Changed(oldValue, _loaiCoQuan);//\\
    			}
            }
        }
    	public static String LoaiCoQuan_PropertyName { get { return "LoaiCoQuan"; } }
        private Nullable<byte> _loaiCoQuan;
        partial void On_LoaiCoQuan_Changing(Nullable<byte> currentValue, ref Nullable<byte> newValue, ref bool stopChanging);
        partial void On_LoaiCoQuan_Changed(Nullable<byte> oldValue, Nullable<byte> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenCoQuan
        {
            get
            {
                return _tenCoQuan;
            }
            set
            {
    			string oldValue =  _tenCoQuan;
    			bool stopChanging = false;
                On_TenCoQuan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenCoQuan");
    			if(!stopChanging)
    			{
    				_tenCoQuan = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenCoQuan");
    				On_TenCoQuan_Changed(oldValue, _tenCoQuan);//\\
    			}
            }
        }
    	public static String TenCoQuan_PropertyName { get { return "TenCoQuan"; } }
        private string _tenCoQuan;
        partial void On_TenCoQuan_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenCoQuan_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenNguoiKy
        {
            get
            {
                return _tenNguoiKy;
            }
            set
            {
    			string oldValue =  _tenNguoiKy;
    			bool stopChanging = false;
                On_TenNguoiKy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenNguoiKy");
    			if(!stopChanging)
    			{
    				_tenNguoiKy = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenNguoiKy");
    				On_TenNguoiKy_Changed(oldValue, _tenNguoiKy);//\\
    			}
            }
        }
    	public static String TenNguoiKy_PropertyName { get { return "TenNguoiKy"; } }
        private string _tenNguoiKy;
        partial void On_TenNguoiKy_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenNguoiKy_Changed(string oldValue, string currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_HopDong_BoPhan", "BoPhan")]
        public BoPhan BoPhan1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_HopDong_BoPhan", "BoPhan").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_BoPhan1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_HopDong_BoPhan", "BoPhan").Value = value;
    				On_BoPhan1_Changed(this.BoPhan1);//\\//
    			}
    	    }
        }
    	public static String BoPhan1_ReferencePropertyName { get { return "BoPhan1"; } }
    	partial void On_BoPhan1_Changing(ref BoPhan newValue, ref bool stopChanging);
    	partial void On_BoPhan1_Changed(BoPhan currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoPhan> BoPhan1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_HopDong_BoPhan", "BoPhan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoPhan>("ERPModel.FK_HopDong_BoPhan", "BoPhan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_HopDong_ChucVuNguoiKy", "ChucVu")]
        public ChucVu ChucVu
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChucVu>("ERPModel.FK_HopDong_ChucVuNguoiKy", "ChucVu").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_ChucVu_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChucVu>("ERPModel.FK_HopDong_ChucVuNguoiKy", "ChucVu").Value = value;
    				On_ChucVu_Changed(this.ChucVu);//\\//
    			}
    	    }
        }
    	public static String ChucVu_ReferencePropertyName { get { return "ChucVu"; } }
    	partial void On_ChucVu_Changing(ref ChucVu newValue, ref bool stopChanging);
    	partial void On_ChucVu_Changed(ChucVu currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChucVu> ChucVuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChucVu>("ERPModel.FK_HopDong_ChucVuNguoiKy", "ChucVu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChucVu>("ERPModel.FK_HopDong_ChucVuNguoiKy", "ChucVu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_HopDong_NoiSinh", "DiaChi")]
        public DiaChi DiaChi1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiaChi>("ERPModel.FK_HopDong_NoiSinh", "DiaChi").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_DiaChi1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiaChi>("ERPModel.FK_HopDong_NoiSinh", "DiaChi").Value = value;
    				On_DiaChi1_Changed(this.DiaChi1);//\\//
    			}
    	    }
        }
    	public static String DiaChi1_ReferencePropertyName { get { return "DiaChi1"; } }
    	partial void On_DiaChi1_Changing(ref DiaChi newValue, ref bool stopChanging);
    	partial void On_DiaChi1_Changed(DiaChi currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DiaChi> DiaChi1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiaChi>("ERPModel.FK_HopDong_NoiSinh", "DiaChi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DiaChi>("ERPModel.FK_HopDong_NoiSinh", "DiaChi", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_HopDong_GiayToHoSo", "GiayToHoSo")]
        public GiayToHoSo GiayToHoSo1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiayToHoSo>("ERPModel.FK_HopDong_GiayToHoSo", "GiayToHoSo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_GiayToHoSo1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiayToHoSo>("ERPModel.FK_HopDong_GiayToHoSo", "GiayToHoSo").Value = value;
    				On_GiayToHoSo1_Changed(this.GiayToHoSo1);//\\//
    			}
    	    }
        }
    	public static String GiayToHoSo1_ReferencePropertyName { get { return "GiayToHoSo1"; } }
    	partial void On_GiayToHoSo1_Changing(ref GiayToHoSo newValue, ref bool stopChanging);
    	partial void On_GiayToHoSo1_Changed(GiayToHoSo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GiayToHoSo> GiayToHoSo1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiayToHoSo>("ERPModel.FK_HopDong_GiayToHoSo", "GiayToHoSo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GiayToHoSo>("ERPModel.FK_HopDong_GiayToHoSo", "GiayToHoSo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_HopDong_NguoiKy", "ThongTinNhanVien")]
        public ThongTinNhanVien ThongTinNhanVien
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_HopDong_NguoiKy", "ThongTinNhanVien").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_ThongTinNhanVien_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_HopDong_NguoiKy", "ThongTinNhanVien").Value = value;
    				On_ThongTinNhanVien_Changed(this.ThongTinNhanVien);//\\//
    			}
    	    }
        }
    	public static String ThongTinNhanVien_ReferencePropertyName { get { return "ThongTinNhanVien"; } }
    	partial void On_ThongTinNhanVien_Changing(ref ThongTinNhanVien newValue, ref bool stopChanging);
    	partial void On_ThongTinNhanVien_Changed(ThongTinNhanVien currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThongTinNhanVien> ThongTinNhanVienReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_HopDong_NguoiKy", "ThongTinNhanVien");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ThongTinNhanVien>("ERPModel.FK_HopDong_NguoiKy", "ThongTinNhanVien", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_HopDong_NhanVien", "NhanVien")]
        public NhanVien NhanVien1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVien>("ERPModel.FK_HopDong_NhanVien", "NhanVien").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_NhanVien1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVien>("ERPModel.FK_HopDong_NhanVien", "NhanVien").Value = value;
    				On_NhanVien1_Changed(this.NhanVien1);//\\//
    			}
    	    }
        }
    	public static String NhanVien1_ReferencePropertyName { get { return "NhanVien1"; } }
    	partial void On_NhanVien1_Changing(ref NhanVien newValue, ref bool stopChanging);
    	partial void On_NhanVien1_Changed(NhanVien currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NhanVien> NhanVien1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVien>("ERPModel.FK_HopDong_NhanVien", "NhanVien");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NhanVien>("ERPModel.FK_HopDong_NhanVien", "NhanVien", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_HopDong_NoiCap", "TinhThanh")]
        public TinhThanh TinhThanh
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhThanh>("ERPModel.FK_HopDong_NoiCap", "TinhThanh").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_TinhThanh_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhThanh>("ERPModel.FK_HopDong_NoiCap", "TinhThanh").Value = value;
    				On_TinhThanh_Changed(this.TinhThanh);//\\//
    			}
    	    }
        }
    	public static String TinhThanh_ReferencePropertyName { get { return "TinhThanh"; } }
    	partial void On_TinhThanh_Changing(ref TinhThanh newValue, ref bool stopChanging);
    	partial void On_TinhThanh_Changed(TinhThanh currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TinhThanh> TinhThanhReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhThanh>("ERPModel.FK_HopDong_NoiCap", "TinhThanh");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TinhThanh>("ERPModel.FK_HopDong_NoiCap", "TinhThanh", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_HopDong_QuocTich", "QuocGia")]
        public QuocGia QuocGia
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuocGia>("ERPModel.FK_HopDong_QuocTich", "QuocGia").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_QuocGia_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuocGia>("ERPModel.FK_HopDong_QuocTich", "QuocGia").Value = value;
    				On_QuocGia_Changed(this.QuocGia);//\\//
    			}
    	    }
        }
    	public static String QuocGia_ReferencePropertyName { get { return "QuocGia"; } }
    	partial void On_QuocGia_Changing(ref QuocGia newValue, ref bool stopChanging);
    	partial void On_QuocGia_Changed(QuocGia currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuocGia> QuocGiaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuocGia>("ERPModel.FK_HopDong_QuocTich", "QuocGia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuocGia>("ERPModel.FK_HopDong_QuocTich", "QuocGia", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_HopDongHienTai", "NhanVien")]
        public EntityCollection<NhanVien> NhanViens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_HopDongHienTai", "NhanVien");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_NhanViens_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_HopDongHienTai", "NhanVien", value);
    					On_NhanViens_Changed(this.NhanViens);//\\//
    				}
    			}
            }
        }
    	public static String NhanViens_EntityCollectionPropertyName { get { return "NhanViens"; } }
    	partial void On_NhanViens_Changing(ref EntityCollection<NhanVien> newValue, ref bool stopChanging);
    	partial void On_NhanViens_Changed(EntityCollection<NhanVien> currentValue);

        #endregion

    }
}
