//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 01:49:02 ngay 20/01/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="CoQuanThue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoQuanThue : ERP_Core.BaseEntityObject//EntityObject
    {
    	static CoQuanThue()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public CoQuanThue()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new CoQuanThue object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static CoQuanThue CreateCoQuanThue(System.Guid oid)
        {
            CoQuanThue coQuanThue = new CoQuanThue();
            coQuanThue.Oid = oid;
            return coQuanThue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaQuanLy
        {
            get
            {
                return _maQuanLy;
            }
            set
            {
    			string oldValue =  _maQuanLy;
    			bool stopChanging = false;
                On_MaQuanLy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaQuanLy");
    			if(!stopChanging)
    			{
    				_maQuanLy = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaQuanLy");
    				On_MaQuanLy_Changed(oldValue, _maQuanLy);//\\
    			}
            }
        }
    	public static String MaQuanLy_PropertyName { get { return "MaQuanLy"; } }
        private string _maQuanLy;
        partial void On_MaQuanLy_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaQuanLy_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenCoQuanThue
        {
            get
            {
                return _tenCoQuanThue;
            }
            set
            {
    			string oldValue =  _tenCoQuanThue;
    			bool stopChanging = false;
                On_TenCoQuanThue_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenCoQuanThue");
    			if(!stopChanging)
    			{
    				_tenCoQuanThue = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenCoQuanThue");
    				On_TenCoQuanThue_Changed(oldValue, _tenCoQuanThue);//\\
    			}
            }
        }
    	public static String TenCoQuanThue_PropertyName { get { return "TenCoQuanThue"; } }
        private string _tenCoQuanThue;
        partial void On_TenCoQuanThue_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenCoQuanThue_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> DonViChuQuan
        {
            get
            {
                return _donViChuQuan;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _donViChuQuan;
    			bool stopChanging = false;
                On_DonViChuQuan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DonViChuQuan");
    			if(!stopChanging)
    			{
    				_donViChuQuan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DonViChuQuan");
    				On_DonViChuQuan_Changed(oldValue, _donViChuQuan);//\\
    			}
            }
        }
    	public static String DonViChuQuan_PropertyName { get { return "DonViChuQuan"; } }
        private Nullable<System.Guid> _donViChuQuan;
        partial void On_DonViChuQuan_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_DonViChuQuan_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CoQuanThue_DonViChuQuan", "CoQuanThue1")]
        public EntityCollection<CoQuanThue> CoQuanThue1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CoQuanThue>("ERPModel.FK_CoQuanThue_DonViChuQuan", "CoQuanThue1");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CoQuanThue1_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CoQuanThue>("ERPModel.FK_CoQuanThue_DonViChuQuan", "CoQuanThue1", value);
    					On_CoQuanThue1_Changed(this.CoQuanThue1);//\\//
    				}
    			}
            }
        }
    	public static String CoQuanThue1_EntityCollectionPropertyName { get { return "CoQuanThue1"; } }
    	partial void On_CoQuanThue1_Changing(ref EntityCollection<CoQuanThue> newValue, ref bool stopChanging);
    	partial void On_CoQuanThue1_Changed(EntityCollection<CoQuanThue> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CoQuanThue_DonViChuQuan", "CoQuanThue")]
        public CoQuanThue CoQuanThue2
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CoQuanThue>("ERPModel.FK_CoQuanThue_DonViChuQuan", "CoQuanThue").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CoQuanThue2_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CoQuanThue>("ERPModel.FK_CoQuanThue_DonViChuQuan", "CoQuanThue").Value = value;
    				On_CoQuanThue2_Changed(this.CoQuanThue2);//\\//
    			}
    	    }
        }
    	public static String CoQuanThue2_ReferencePropertyName { get { return "CoQuanThue2"; } }
    	partial void On_CoQuanThue2_Changing(ref CoQuanThue newValue, ref bool stopChanging);
    	partial void On_CoQuanThue2_Changed(CoQuanThue currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CoQuanThue> CoQuanThue2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CoQuanThue>("ERPModel.FK_CoQuanThue_DonViChuQuan", "CoQuanThue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CoQuanThue>("ERPModel.FK_CoQuanThue_DonViChuQuan", "CoQuanThue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVienThongTinLuong_CoQuanThue", "NhanVienThongTinLuong")]
        public EntityCollection<NhanVienThongTinLuong> NhanVienThongTinLuongs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NhanVienThongTinLuong>("ERPModel.FK_NhanVienThongTinLuong_CoQuanThue", "NhanVienThongTinLuong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_NhanVienThongTinLuongs_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NhanVienThongTinLuong>("ERPModel.FK_NhanVienThongTinLuong_CoQuanThue", "NhanVienThongTinLuong", value);
    					On_NhanVienThongTinLuongs_Changed(this.NhanVienThongTinLuongs);//\\//
    				}
    			}
            }
        }
    	public static String NhanVienThongTinLuongs_EntityCollectionPropertyName { get { return "NhanVienThongTinLuongs"; } }
    	partial void On_NhanVienThongTinLuongs_Changing(ref EntityCollection<NhanVienThongTinLuong> newValue, ref bool stopChanging);
    	partial void On_NhanVienThongTinLuongs_Changed(EntityCollection<NhanVienThongTinLuong> currentValue);

        #endregion

    }
}
