//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 05:03:08 ngay 23/05/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="KyTinhLuong")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KyTinhLuong : ERP_Core.BaseEntityObject//EntityObject
    {
    	static KyTinhLuong()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public KyTinhLuong()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new KyTinhLuong object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static KyTinhLuong CreateKyTinhLuong(System.Guid oid)
        {
            KyTinhLuong kyTinhLuong = new KyTinhLuong();
            kyTinhLuong.Oid = oid;
            return kyTinhLuong;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Thang
        {
            get
            {
                return _thang;
            }
            set
            {
    			Nullable<int> oldValue =  _thang;
    			bool stopChanging = false;
                On_Thang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Thang");
    			if(!stopChanging)
    			{
    				_thang = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Thang");
    				On_Thang_Changed(oldValue, _thang);//\\
    			}
            }
        }
    	public static String Thang_PropertyName { get { return "Thang"; } }
        private Nullable<int> _thang;
        partial void On_Thang_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_Thang_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Nam
        {
            get
            {
                return _nam;
            }
            set
            {
    			Nullable<int> oldValue =  _nam;
    			bool stopChanging = false;
                On_Nam_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Nam");
    			if(!stopChanging)
    			{
    				_nam = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Nam");
    				On_Nam_Changed(oldValue, _nam);//\\
    			}
            }
        }
    	public static String Nam_PropertyName { get { return "Nam"; } }
        private Nullable<int> _nam;
        partial void On_Nam_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_Nam_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> TuNgay
        {
            get
            {
                return _tuNgay;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _tuNgay;
    			bool stopChanging = false;
                On_TuNgay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TuNgay");
    			if(!stopChanging)
    			{
    				_tuNgay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TuNgay");
    				On_TuNgay_Changed(oldValue, _tuNgay);//\\
    			}
            }
        }
    	public static String TuNgay_PropertyName { get { return "TuNgay"; } }
        private Nullable<System.DateTime> _tuNgay;
        partial void On_TuNgay_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_TuNgay_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DenNgay
        {
            get
            {
                return _denNgay;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _denNgay;
    			bool stopChanging = false;
                On_DenNgay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DenNgay");
    			if(!stopChanging)
    			{
    				_denNgay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DenNgay");
    				On_DenNgay_Changed(oldValue, _denNgay);//\\
    			}
            }
        }
    	public static String DenNgay_PropertyName { get { return "DenNgay"; } }
        private Nullable<System.DateTime> _denNgay;
        partial void On_DenNgay_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_DenNgay_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> SoNgay
        {
            get
            {
                return _soNgay;
            }
            set
            {
    			Nullable<decimal> oldValue =  _soNgay;
    			bool stopChanging = false;
                On_SoNgay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoNgay");
    			if(!stopChanging)
    			{
    				_soNgay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoNgay");
    				On_SoNgay_Changed(oldValue, _soNgay);//\\
    			}
            }
        }
    	public static String SoNgay_PropertyName { get { return "SoNgay"; } }
        private Nullable<decimal> _soNgay;
        partial void On_SoNgay_Changing(Nullable<decimal> currentValue, ref Nullable<decimal> newValue, ref bool stopChanging);
        partial void On_SoNgay_Changed(Nullable<decimal> oldValue, Nullable<decimal> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> KhoaSo
        {
            get
            {
                return _khoaSo;
            }
            set
            {
    			Nullable<bool> oldValue =  _khoaSo;
    			bool stopChanging = false;
                On_KhoaSo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("KhoaSo");
    			if(!stopChanging)
    			{
    				_khoaSo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("KhoaSo");
    				On_KhoaSo_Changed(oldValue, _khoaSo);//\\
    			}
            }
        }
    	public static String KhoaSo_PropertyName { get { return "KhoaSo"; } }
        private Nullable<bool> _khoaSo;
        partial void On_KhoaSo_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_KhoaSo_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CommonInfo
        {
            get
            {
                return _commonInfo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _commonInfo;
    			bool stopChanging = false;
                On_CommonInfo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CommonInfo");
    			if(!stopChanging)
    			{
    				_commonInfo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CommonInfo");
    				On_CommonInfo_Changed(oldValue, _commonInfo);//\\
    			}
            }
        }
    	public static String CommonInfo_PropertyName { get { return "CommonInfo"; } }
        private Nullable<System.Guid> _commonInfo;
        partial void On_CommonInfo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CommonInfo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> MocTinhThueTNCN
        {
            get
            {
                return _mocTinhThueTNCN;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _mocTinhThueTNCN;
    			bool stopChanging = false;
                On_MocTinhThueTNCN_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MocTinhThueTNCN");
    			if(!stopChanging)
    			{
    				_mocTinhThueTNCN = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MocTinhThueTNCN");
    				On_MocTinhThueTNCN_Changed(oldValue, _mocTinhThueTNCN);//\\
    			}
            }
        }
    	public static String MocTinhThueTNCN_PropertyName { get { return "MocTinhThueTNCN"; } }
        private Nullable<System.Guid> _mocTinhThueTNCN;
        partial void On_MocTinhThueTNCN_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_MocTinhThueTNCN_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CompanyInfo
        {
            get
            {
                return _companyInfo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _companyInfo;
    			bool stopChanging = false;
                On_CompanyInfo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CompanyInfo");
    			if(!stopChanging)
    			{
    				_companyInfo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CompanyInfo");
    				On_CompanyInfo_Changed(oldValue, _companyInfo);//\\
    			}
            }
        }
    	public static String CompanyInfo_PropertyName { get { return "CompanyInfo"; } }
        private Nullable<System.Guid> _companyInfo;
        partial void On_CompanyInfo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CompanyInfo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> QuanLyChamCong
        {
            get
            {
                return _quanLyChamCong;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _quanLyChamCong;
    			bool stopChanging = false;
                On_QuanLyChamCong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("QuanLyChamCong");
    			if(!stopChanging)
    			{
    				_quanLyChamCong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("QuanLyChamCong");
    				On_QuanLyChamCong_Changed(oldValue, _quanLyChamCong);//\\
    			}
            }
        }
    	public static String QuanLyChamCong_PropertyName { get { return "QuanLyChamCong"; } }
        private Nullable<System.Guid> _quanLyChamCong;
        partial void On_QuanLyChamCong_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_QuanLyChamCong_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_BangLuongNhanVien_KyTinhLuong", "BangLuongNhanVien")]
        public EntityCollection<BangLuongNhanVien> BangLuongNhanViens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BangLuongNhanVien>("ERPModel.FK_BangLuongNhanVien_KyTinhLuong", "BangLuongNhanVien");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_BangLuongNhanViens_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BangLuongNhanVien>("ERPModel.FK_BangLuongNhanVien_KyTinhLuong", "BangLuongNhanVien", value);
    					On_BangLuongNhanViens_Changed(this.BangLuongNhanViens);//\\//
    				}
    			}
            }
        }
    	public static String BangLuongNhanViens_EntityCollectionPropertyName { get { return "BangLuongNhanViens"; } }
    	partial void On_BangLuongNhanViens_Changing(ref EntityCollection<BangLuongNhanVien> newValue, ref bool stopChanging);
    	partial void On_BangLuongNhanViens_Changed(EntityCollection<BangLuongNhanVien> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_KyTinhLuong_CompanyInfo", "CompanyInfo")]
        public CompanyInfo CompanyInfo1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_KyTinhLuong_CompanyInfo", "CompanyInfo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CompanyInfo1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_KyTinhLuong_CompanyInfo", "CompanyInfo").Value = value;
    				On_CompanyInfo1_Changed(this.CompanyInfo1);//\\//
    			}
    	    }
        }
    	public static String CompanyInfo1_ReferencePropertyName { get { return "CompanyInfo1"; } }
    	partial void On_CompanyInfo1_Changing(ref CompanyInfo newValue, ref bool stopChanging);
    	partial void On_CompanyInfo1_Changed(CompanyInfo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyInfo> CompanyInfo1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_KyTinhLuong_CompanyInfo", "CompanyInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyInfo>("ERPModel.FK_KyTinhLuong_CompanyInfo", "CompanyInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_QuanLyChamCong_KyTinhLuong", "CC_QuanLyChamCong")]
        public EntityCollection<CC_QuanLyChamCong> CC_QuanLyChamCong
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_QuanLyChamCong>("ERPModel.FK_CC_QuanLyChamCong_KyTinhLuong", "CC_QuanLyChamCong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_QuanLyChamCong_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_QuanLyChamCong>("ERPModel.FK_CC_QuanLyChamCong_KyTinhLuong", "CC_QuanLyChamCong", value);
    					On_CC_QuanLyChamCong_Changed(this.CC_QuanLyChamCong);//\\//
    				}
    			}
            }
        }
    	public static String CC_QuanLyChamCong_EntityCollectionPropertyName { get { return "CC_QuanLyChamCong"; } }
    	partial void On_CC_QuanLyChamCong_Changing(ref EntityCollection<CC_QuanLyChamCong> newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyChamCong_Changed(EntityCollection<CC_QuanLyChamCong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_KyTinhLuong_QuanLyChamCong", "CC_QuanLyChamCong")]
        public CC_QuanLyChamCong CC_QuanLyChamCong1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CC_QuanLyChamCong>("ERPModel.FK_KyTinhLuong_QuanLyChamCong", "CC_QuanLyChamCong").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CC_QuanLyChamCong1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CC_QuanLyChamCong>("ERPModel.FK_KyTinhLuong_QuanLyChamCong", "CC_QuanLyChamCong").Value = value;
    				On_CC_QuanLyChamCong1_Changed(this.CC_QuanLyChamCong1);//\\//
    			}
    	    }
        }
    	public static String CC_QuanLyChamCong1_ReferencePropertyName { get { return "CC_QuanLyChamCong1"; } }
    	partial void On_CC_QuanLyChamCong1_Changing(ref CC_QuanLyChamCong newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyChamCong1_Changed(CC_QuanLyChamCong currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CC_QuanLyChamCong> CC_QuanLyChamCong1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CC_QuanLyChamCong>("ERPModel.FK_KyTinhLuong_QuanLyChamCong", "CC_QuanLyChamCong");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CC_QuanLyChamCong>("ERPModel.FK_KyTinhLuong_QuanLyChamCong", "CC_QuanLyChamCong", value);
                }
            }
        }

        #endregion

    }
}
