//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 05:03:08 ngay 23/05/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : ERP_Core.BaseEntityObject//EntityObject
    {
    	static Department()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public Department()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static Department CreateDepartment(System.Guid oid)
        {
            Department department = new Department();
            department.Oid = oid;
            return department;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> STT
        {
            get
            {
                return _sTT;
            }
            set
            {
    			Nullable<decimal> oldValue =  _sTT;
    			bool stopChanging = false;
                On_STT_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("STT");
    			if(!stopChanging)
    			{
    				_sTT = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("STT");
    				On_STT_Changed(oldValue, _sTT);//\\
    			}
            }
        }
    	public static String STT_PropertyName { get { return "STT"; } }
        private Nullable<decimal> _sTT;
        partial void On_STT_Changing(Nullable<decimal> currentValue, ref Nullable<decimal> newValue, ref bool stopChanging);
        partial void On_STT_Changed(Nullable<decimal> oldValue, Nullable<decimal> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaQuanLy
        {
            get
            {
                return _maQuanLy;
            }
            set
            {
    			string oldValue =  _maQuanLy;
    			bool stopChanging = false;
                On_MaQuanLy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaQuanLy");
    			if(!stopChanging)
    			{
    				_maQuanLy = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaQuanLy");
    				On_MaQuanLy_Changed(oldValue, _maQuanLy);//\\
    			}
            }
        }
    	public static String MaQuanLy_PropertyName { get { return "MaQuanLy"; } }
        private string _maQuanLy;
        partial void On_MaQuanLy_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaQuanLy_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenBoPhan
        {
            get
            {
                return _tenBoPhan;
            }
            set
            {
    			string oldValue =  _tenBoPhan;
    			bool stopChanging = false;
                On_TenBoPhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenBoPhan");
    			if(!stopChanging)
    			{
    				_tenBoPhan = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenBoPhan");
    				On_TenBoPhan_Changed(oldValue, _tenBoPhan);//\\
    			}
            }
        }
    	public static String TenBoPhan_PropertyName { get { return "TenBoPhan"; } }
        private string _tenBoPhan;
        partial void On_TenBoPhan_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenBoPhan_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> LoaiBoPhan
        {
            get
            {
                return _loaiBoPhan;
            }
            set
            {
    			Nullable<byte> oldValue =  _loaiBoPhan;
    			bool stopChanging = false;
                On_LoaiBoPhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LoaiBoPhan");
    			if(!stopChanging)
    			{
    				_loaiBoPhan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LoaiBoPhan");
    				On_LoaiBoPhan_Changed(oldValue, _loaiBoPhan);//\\
    			}
            }
        }
    	public static String LoaiBoPhan_PropertyName { get { return "LoaiBoPhan"; } }
        private Nullable<byte> _loaiBoPhan;
        partial void On_LoaiBoPhan_Changing(Nullable<byte> currentValue, ref Nullable<byte> newValue, ref bool stopChanging);
        partial void On_LoaiBoPhan_Changed(Nullable<byte> oldValue, Nullable<byte> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ParentDepartment
        {
            get
            {
                return _parentDepartment;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _parentDepartment;
    			bool stopChanging = false;
                On_ParentDepartment_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ParentDepartment");
    			if(!stopChanging)
    			{
    				_parentDepartment = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ParentDepartment");
    				On_ParentDepartment_Changed(oldValue, _parentDepartment);//\\
    			}
            }
        }
    	public static String ParentDepartment_PropertyName { get { return "ParentDepartment"; } }
        private Nullable<System.Guid> _parentDepartment;
        partial void On_ParentDepartment_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ParentDepartment_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CompanyInfo
        {
            get
            {
                return _companyInfo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _companyInfo;
    			bool stopChanging = false;
                On_CompanyInfo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CompanyInfo");
    			if(!stopChanging)
    			{
    				_companyInfo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CompanyInfo");
    				On_CompanyInfo_Changed(oldValue, _companyInfo);//\\
    			}
            }
        }
    	public static String CompanyInfo_PropertyName { get { return "CompanyInfo"; } }
        private Nullable<System.Guid> _companyInfo;
        partial void On_CompanyInfo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CompanyInfo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> NgungHoatDong
        {
            get
            {
                return _ngungHoatDong;
            }
            set
            {
    			Nullable<bool> oldValue =  _ngungHoatDong;
    			bool stopChanging = false;
                On_NgungHoatDong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgungHoatDong");
    			if(!stopChanging)
    			{
    				_ngungHoatDong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgungHoatDong");
    				On_NgungHoatDong_Changed(oldValue, _ngungHoatDong);//\\
    			}
            }
        }
    	public static String NgungHoatDong_PropertyName { get { return "NgungHoatDong"; } }
        private Nullable<bool> _ngungHoatDong;
        partial void On_NgungHoatDong_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_NgungHoatDong_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ObjectType
        {
            get
            {
                return _objectType;
            }
            set
            {
    			Nullable<int> oldValue =  _objectType;
    			bool stopChanging = false;
                On_ObjectType_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ObjectType");
    			if(!stopChanging)
    			{
    				_objectType = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ObjectType");
    				On_ObjectType_Changed(oldValue, _objectType);//\\
    			}
            }
        }
    	public static String ObjectType_PropertyName { get { return "ObjectType"; } }
        private Nullable<int> _objectType;
        partial void On_ObjectType_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_ObjectType_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ParentDepartment_Storage
        {
            get
            {
                return _parentDepartment_Storage;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _parentDepartment_Storage;
    			bool stopChanging = false;
                On_ParentDepartment_Storage_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ParentDepartment_Storage");
    			if(!stopChanging)
    			{
    				_parentDepartment_Storage = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ParentDepartment_Storage");
    				On_ParentDepartment_Storage_Changed(oldValue, _parentDepartment_Storage);//\\
    			}
            }
        }
    	public static String ParentDepartment_Storage_PropertyName { get { return "ParentDepartment_Storage"; } }
        private Nullable<System.Guid> _parentDepartment_Storage;
        partial void On_ParentDepartment_Storage_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ParentDepartment_Storage_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ID
        {
            get
            {
                return _iD;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _iD;
    			bool stopChanging = false;
                On_ID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ID");
    			if(!stopChanging)
    			{
    				_iD = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ID");
    				On_ID_Changed(oldValue, _iD);//\\
    			}
            }
        }
    	public static String ID_PropertyName { get { return "ID"; } }
        private Nullable<System.Guid> _iD;
        partial void On_ID_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ID_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ParentID
        {
            get
            {
                return _parentID;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _parentID;
    			bool stopChanging = false;
                On_ParentID_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ParentID");
    			if(!stopChanging)
    			{
    				_parentID = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ParentID");
    				On_ParentID_Changed(oldValue, _parentID);//\\
    			}
            }
        }
    	public static String ParentID_PropertyName { get { return "ParentID"; } }
        private Nullable<System.Guid> _parentID;
        partial void On_ParentID_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ParentID_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_Department_ParentDepartment", "Department1")]
        public EntityCollection<Department> Department1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("ERPModel.FK_Department_ParentDepartment", "Department1");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_Department1_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("ERPModel.FK_Department_ParentDepartment", "Department1", value);
    					On_Department1_Changed(this.Department1);//\\//
    				}
    			}
            }
        }
    	public static String Department1_EntityCollectionPropertyName { get { return "Department1"; } }
    	partial void On_Department1_Changing(ref EntityCollection<Department> newValue, ref bool stopChanging);
    	partial void On_Department1_Changed(EntityCollection<Department> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_Department_ParentDepartment", "Department")]
        public Department Department2
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ERPModel.FK_Department_ParentDepartment", "Department").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_Department2_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ERPModel.FK_Department_ParentDepartment", "Department").Value = value;
    				On_Department2_Changed(this.Department2);//\\//
    			}
    	    }
        }
    	public static String Department2_ReferencePropertyName { get { return "Department2"; } }
    	partial void On_Department2_Changing(ref Department newValue, ref bool stopChanging);
    	partial void On_Department2_Changed(Department currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> Department2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ERPModel.FK_Department_ParentDepartment", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("ERPModel.FK_Department_ParentDepartment", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_WebUser_Department_Department", "WebUser_Department")]
        public EntityCollection<WebUser_Department> WebUser_Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebUser_Department>("ERPModel.FK_WebUser_Department_Department", "WebUser_Department");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_WebUser_Department_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebUser_Department>("ERPModel.FK_WebUser_Department_Department", "WebUser_Department", value);
    					On_WebUser_Department_Changed(this.WebUser_Department);//\\//
    				}
    			}
            }
        }
    	public static String WebUser_Department_EntityCollectionPropertyName { get { return "WebUser_Department"; } }
    	partial void On_WebUser_Department_Changing(ref EntityCollection<WebUser_Department> newValue, ref bool stopChanging);
    	partial void On_WebUser_Department_Changed(EntityCollection<WebUser_Department> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_Department", "NhanVien")]
        public EntityCollection<NhanVien> NhanViens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_Department", "NhanVien");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_NhanViens_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_Department", "NhanVien", value);
    					On_NhanViens_Changed(this.NhanViens);//\\//
    				}
    			}
            }
        }
    	public static String NhanViens_EntityCollectionPropertyName { get { return "NhanViens"; } }
    	partial void On_NhanViens_Changing(ref EntityCollection<NhanVien> newValue, ref bool stopChanging);
    	partial void On_NhanViens_Changed(EntityCollection<NhanVien> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_Department_SuDung", "NhanVien")]
        public EntityCollection<NhanVien> NhanViens1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_Department_SuDung", "NhanVien");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_NhanViens1_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_Department_SuDung", "NhanVien", value);
    					On_NhanViens1_Changed(this.NhanViens1);//\\//
    				}
    			}
            }
        }
    	public static String NhanViens1_EntityCollectionPropertyName { get { return "NhanViens1"; } }
    	partial void On_NhanViens1_Changing(ref EntityCollection<NhanVien> newValue, ref bool stopChanging);
    	partial void On_NhanViens1_Changed(EntityCollection<NhanVien> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_ChiTietChamCong_BoPhan", "CC_ChiTietChamCong")]
        public EntityCollection<CC_ChiTietChamCong> CC_ChiTietChamCong
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_ChiTietChamCong>("ERPModel.FK_CC_ChiTietChamCong_BoPhan", "CC_ChiTietChamCong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_ChiTietChamCong_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_ChiTietChamCong>("ERPModel.FK_CC_ChiTietChamCong_BoPhan", "CC_ChiTietChamCong", value);
    					On_CC_ChiTietChamCong_Changed(this.CC_ChiTietChamCong);//\\//
    				}
    			}
            }
        }
    	public static String CC_ChiTietChamCong_EntityCollectionPropertyName { get { return "CC_ChiTietChamCong"; } }
    	partial void On_CC_ChiTietChamCong_Changing(ref EntityCollection<CC_ChiTietChamCong> newValue, ref bool stopChanging);
    	partial void On_CC_ChiTietChamCong_Changed(EntityCollection<CC_ChiTietChamCong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CompanyInfo_Oid", "CompanyInfo")]
        public CompanyInfo CompanyInfo1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_CompanyInfo_Oid", "CompanyInfo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CompanyInfo1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_CompanyInfo_Oid", "CompanyInfo").Value = value;
    				On_CompanyInfo1_Changed(this.CompanyInfo1);//\\//
    			}
    	    }
        }
    	public static String CompanyInfo1_ReferencePropertyName { get { return "CompanyInfo1"; } }
    	partial void On_CompanyInfo1_Changing(ref CompanyInfo newValue, ref bool stopChanging);
    	partial void On_CompanyInfo1_Changed(CompanyInfo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyInfo> CompanyInfo1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_CompanyInfo_Oid", "CompanyInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyInfo>("ERPModel.FK_CompanyInfo_Oid", "CompanyInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_Department_CompanyInfo", "CompanyInfo")]
        public CompanyInfo CompanyInfo2
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_Department_CompanyInfo", "CompanyInfo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CompanyInfo2_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_Department_CompanyInfo", "CompanyInfo").Value = value;
    				On_CompanyInfo2_Changed(this.CompanyInfo2);//\\//
    			}
    	    }
        }
    	public static String CompanyInfo2_ReferencePropertyName { get { return "CompanyInfo2"; } }
    	partial void On_CompanyInfo2_Changing(ref CompanyInfo newValue, ref bool stopChanging);
    	partial void On_CompanyInfo2_Changed(CompanyInfo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyInfo> CompanyInfo2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("ERPModel.FK_Department_CompanyInfo", "CompanyInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyInfo>("ERPModel.FK_Department_CompanyInfo", "CompanyInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_ChamCongTheoNgay_BoPhan", "CC_ChamCongTheoNgay")]
        public EntityCollection<CC_ChamCongTheoNgay> CC_ChamCongTheoNgay
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_ChamCongTheoNgay>("ERPModel.FK_CC_ChamCongTheoNgay_BoPhan", "CC_ChamCongTheoNgay");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_ChamCongTheoNgay_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_ChamCongTheoNgay>("ERPModel.FK_CC_ChamCongTheoNgay_BoPhan", "CC_ChamCongTheoNgay", value);
    					On_CC_ChamCongTheoNgay_Changed(this.CC_ChamCongTheoNgay);//\\//
    				}
    			}
            }
        }
    	public static String CC_ChamCongTheoNgay_EntityCollectionPropertyName { get { return "CC_ChamCongTheoNgay"; } }
    	partial void On_CC_ChamCongTheoNgay_Changing(ref EntityCollection<CC_ChamCongTheoNgay> newValue, ref bool stopChanging);
    	partial void On_CC_ChamCongTheoNgay_Changed(EntityCollection<CC_ChamCongTheoNgay> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_ChamCongNgayNghi_BoPhan", "CC_ChamCongNgayNghi")]
        public EntityCollection<CC_ChamCongNgayNghi> CC_ChamCongNgayNghi
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_ChamCongNgayNghi>("ERPModel.FK_CC_ChamCongNgayNghi_BoPhan", "CC_ChamCongNgayNghi");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_ChamCongNgayNghi_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_ChamCongNgayNghi>("ERPModel.FK_CC_ChamCongNgayNghi_BoPhan", "CC_ChamCongNgayNghi", value);
    					On_CC_ChamCongNgayNghi_Changed(this.CC_ChamCongNgayNghi);//\\//
    				}
    			}
            }
        }
    	public static String CC_ChamCongNgayNghi_EntityCollectionPropertyName { get { return "CC_ChamCongNgayNghi"; } }
    	partial void On_CC_ChamCongNgayNghi_Changing(ref EntityCollection<CC_ChamCongNgayNghi> newValue, ref bool stopChanging);
    	partial void On_CC_ChamCongNgayNghi_Changed(EntityCollection<CC_ChamCongNgayNghi> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_ChamCongNgayNghi_BoPhan1", "CC_ChamCongNgayNghi")]
        public EntityCollection<CC_ChamCongNgayNghi> CC_ChamCongNgayNghi1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_ChamCongNgayNghi>("ERPModel.FK_CC_ChamCongNgayNghi_BoPhan1", "CC_ChamCongNgayNghi");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_ChamCongNgayNghi1_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_ChamCongNgayNghi>("ERPModel.FK_CC_ChamCongNgayNghi_BoPhan1", "CC_ChamCongNgayNghi", value);
    					On_CC_ChamCongNgayNghi1_Changed(this.CC_ChamCongNgayNghi1);//\\//
    				}
    			}
            }
        }
    	public static String CC_ChamCongNgayNghi1_EntityCollectionPropertyName { get { return "CC_ChamCongNgayNghi1"; } }
    	partial void On_CC_ChamCongNgayNghi1_Changing(ref EntityCollection<CC_ChamCongNgayNghi> newValue, ref bool stopChanging);
    	partial void On_CC_ChamCongNgayNghi1_Changed(EntityCollection<CC_ChamCongNgayNghi> currentValue);

        #endregion

    }
}
