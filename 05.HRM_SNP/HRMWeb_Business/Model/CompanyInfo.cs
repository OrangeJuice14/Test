//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 05:03:08 ngay 23/05/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="CompanyInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyInfo : ERP_Core.BaseEntityObject//EntityObject
    {
    	static CompanyInfo()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public CompanyInfo()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyInfo object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static CompanyInfo CreateCompanyInfo(System.Guid oid)
        {
            CompanyInfo companyInfo = new CompanyInfo();
            companyInfo.Oid = oid;
            return companyInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenVietTat
        {
            get
            {
                return _tenVietTat;
            }
            set
            {
    			string oldValue =  _tenVietTat;
    			bool stopChanging = false;
                On_TenVietTat_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenVietTat");
    			if(!stopChanging)
    			{
    				_tenVietTat = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenVietTat");
    				On_TenVietTat_Changed(oldValue, _tenVietTat);//\\
    			}
            }
        }
    	public static String TenVietTat_PropertyName { get { return "TenVietTat"; } }
        private string _tenVietTat;
        partial void On_TenVietTat_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenVietTat_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DonViChuQuan
        {
            get
            {
                return _donViChuQuan;
            }
            set
            {
    			string oldValue =  _donViChuQuan;
    			bool stopChanging = false;
                On_DonViChuQuan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DonViChuQuan");
    			if(!stopChanging)
    			{
    				_donViChuQuan = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DonViChuQuan");
    				On_DonViChuQuan_Changed(oldValue, _donViChuQuan);//\\
    			}
            }
        }
    	public static String DonViChuQuan_PropertyName { get { return "DonViChuQuan"; } }
        private string _donViChuQuan;
        partial void On_DonViChuQuan_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DonViChuQuan_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NamThanhLap
        {
            get
            {
                return _namThanhLap;
            }
            set
            {
    			Nullable<int> oldValue =  _namThanhLap;
    			bool stopChanging = false;
                On_NamThanhLap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NamThanhLap");
    			if(!stopChanging)
    			{
    				_namThanhLap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NamThanhLap");
    				On_NamThanhLap_Changed(oldValue, _namThanhLap);//\\
    			}
            }
        }
    	public static String NamThanhLap_PropertyName { get { return "NamThanhLap"; } }
        private Nullable<int> _namThanhLap;
        partial void On_NamThanhLap_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_NamThanhLap_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> DiaChi
        {
            get
            {
                return _diaChi;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _diaChi;
    			bool stopChanging = false;
                On_DiaChi_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DiaChi");
    			if(!stopChanging)
    			{
    				_diaChi = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DiaChi");
    				On_DiaChi_Changed(oldValue, _diaChi);//\\
    			}
            }
        }
    	public static String DiaChi_PropertyName { get { return "DiaChi"; } }
        private Nullable<System.Guid> _diaChi;
        partial void On_DiaChi_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_DiaChi_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DienThoai
        {
            get
            {
                return _dienThoai;
            }
            set
            {
    			string oldValue =  _dienThoai;
    			bool stopChanging = false;
                On_DienThoai_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DienThoai");
    			if(!stopChanging)
    			{
    				_dienThoai = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DienThoai");
    				On_DienThoai_Changed(oldValue, _dienThoai);//\\
    			}
            }
        }
    	public static String DienThoai_PropertyName { get { return "DienThoai"; } }
        private string _dienThoai;
        partial void On_DienThoai_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DienThoai_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _email;
            }
            set
            {
    			string oldValue =  _email;
    			bool stopChanging = false;
                On_Email_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Email");
    			if(!stopChanging)
    			{
    				_email = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Email");
    				On_Email_Changed(oldValue, _email);//\\
    			}
            }
        }
    	public static String Email_PropertyName { get { return "Email"; } }
        private string _email;
        partial void On_Email_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Email_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Fax
        {
            get
            {
                return _fax;
            }
            set
            {
    			string oldValue =  _fax;
    			bool stopChanging = false;
                On_Fax_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Fax");
    			if(!stopChanging)
    			{
    				_fax = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Fax");
    				On_Fax_Changed(oldValue, _fax);//\\
    			}
            }
        }
    	public static String Fax_PropertyName { get { return "Fax"; } }
        private string _fax;
        partial void On_Fax_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Fax_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string WebSite
        {
            get
            {
                return _webSite;
            }
            set
            {
    			string oldValue =  _webSite;
    			bool stopChanging = false;
                On_WebSite_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("WebSite");
    			if(!stopChanging)
    			{
    				_webSite = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("WebSite");
    				On_WebSite_Changed(oldValue, _webSite);//\\
    			}
            }
        }
    	public static String WebSite_PropertyName { get { return "WebSite"; } }
        private string _webSite;
        partial void On_WebSite_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_WebSite_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CommonInfo
        {
            get
            {
                return _commonInfo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _commonInfo;
    			bool stopChanging = false;
                On_CommonInfo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CommonInfo");
    			if(!stopChanging)
    			{
    				_commonInfo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CommonInfo");
    				On_CommonInfo_Changed(oldValue, _commonInfo);//\\
    			}
            }
        }
    	public static String CommonInfo_PropertyName { get { return "CommonInfo"; } }
        private Nullable<System.Guid> _commonInfo;
        partial void On_CommonInfo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CommonInfo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaSoThue
        {
            get
            {
                return _maSoThue;
            }
            set
            {
    			string oldValue =  _maSoThue;
    			bool stopChanging = false;
                On_MaSoThue_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaSoThue");
    			if(!stopChanging)
    			{
    				_maSoThue = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaSoThue");
    				On_MaSoThue_Changed(oldValue, _maSoThue);//\\
    			}
            }
        }
    	public static String MaSoThue_PropertyName { get { return "MaSoThue"; } }
        private string _maSoThue;
        partial void On_MaSoThue_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaSoThue_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public byte[] Logo
        {
            get
            {
                return StructuralObject.GetValidValue(_logo);
            }
            set
            {
    			byte[] oldValue =  _logo;
    			bool stopChanging = false;
                On_Logo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Logo");
    			if(!stopChanging)
    			{
    				_logo = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Logo");
    				On_Logo_Changed(oldValue, _logo);//\\
    			}
            }
        }
    	public static String Logo_PropertyName { get { return "Logo"; } }
        private byte[] _logo;
        partial void On_Logo_Changing(byte[] currentValue, ref byte[] newValue, ref bool stopChanging);
        partial void On_Logo_Changed(byte[] oldValue, byte[] currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> MocTinhThueTNCN
        {
            get
            {
                return _mocTinhThueTNCN;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _mocTinhThueTNCN;
    			bool stopChanging = false;
                On_MocTinhThueTNCN_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MocTinhThueTNCN");
    			if(!stopChanging)
    			{
    				_mocTinhThueTNCN = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MocTinhThueTNCN");
    				On_MocTinhThueTNCN_Changed(oldValue, _mocTinhThueTNCN);//\\
    			}
            }
        }
    	public static String MocTinhThueTNCN_PropertyName { get { return "MocTinhThueTNCN"; } }
        private Nullable<System.Guid> _mocTinhThueTNCN;
        partial void On_MocTinhThueTNCN_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_MocTinhThueTNCN_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_BangLuongNhanVien_CompanyInfo", "BangLuongNhanVien")]
        public EntityCollection<BangLuongNhanVien> BangLuongNhanViens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BangLuongNhanVien>("ERPModel.FK_BangLuongNhanVien_CompanyInfo", "BangLuongNhanVien");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_BangLuongNhanViens_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BangLuongNhanVien>("ERPModel.FK_BangLuongNhanVien_CompanyInfo", "BangLuongNhanVien", value);
    					On_BangLuongNhanViens_Changed(this.BangLuongNhanViens);//\\//
    				}
    			}
            }
        }
    	public static String BangLuongNhanViens_EntityCollectionPropertyName { get { return "BangLuongNhanViens"; } }
    	partial void On_BangLuongNhanViens_Changing(ref EntityCollection<BangLuongNhanVien> newValue, ref bool stopChanging);
    	partial void On_BangLuongNhanViens_Changed(EntityCollection<BangLuongNhanVien> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CompanyInfo_Oid", "Department")]
        public Department Department
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ERPModel.FK_CompanyInfo_Oid", "Department").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_Department_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ERPModel.FK_CompanyInfo_Oid", "Department").Value = value;
    				On_Department_Changed(this.Department);//\\//
    			}
    	    }
        }
    	public static String Department_ReferencePropertyName { get { return "Department"; } }
    	partial void On_Department_Changing(ref Department newValue, ref bool stopChanging);
    	partial void On_Department_Changed(Department currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ERPModel.FK_CompanyInfo_Oid", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("ERPModel.FK_CompanyInfo_Oid", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_Department_CompanyInfo", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("ERPModel.FK_Department_CompanyInfo", "Department");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_Departments_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("ERPModel.FK_Department_CompanyInfo", "Department", value);
    					On_Departments_Changed(this.Departments);//\\//
    				}
    			}
            }
        }
    	public static String Departments_EntityCollectionPropertyName { get { return "Departments"; } }
    	partial void On_Departments_Changing(ref EntityCollection<Department> newValue, ref bool stopChanging);
    	partial void On_Departments_Changed(EntityCollection<Department> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_KyTinhLuong_CompanyInfo", "KyTinhLuong")]
        public EntityCollection<KyTinhLuong> KyTinhLuongs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KyTinhLuong>("ERPModel.FK_KyTinhLuong_CompanyInfo", "KyTinhLuong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_KyTinhLuongs_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KyTinhLuong>("ERPModel.FK_KyTinhLuong_CompanyInfo", "KyTinhLuong", value);
    					On_KyTinhLuongs_Changed(this.KyTinhLuongs);//\\//
    				}
    			}
            }
        }
    	public static String KyTinhLuongs_EntityCollectionPropertyName { get { return "KyTinhLuongs"; } }
    	partial void On_KyTinhLuongs_Changing(ref EntityCollection<KyTinhLuong> newValue, ref bool stopChanging);
    	partial void On_KyTinhLuongs_Changed(EntityCollection<KyTinhLuong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_CompanyInfo", "NhanVien")]
        public EntityCollection<NhanVien> NhanViens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_CompanyInfo", "NhanVien");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_NhanViens_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_CompanyInfo", "NhanVien", value);
    					On_NhanViens_Changed(this.NhanViens);//\\//
    				}
    			}
            }
        }
    	public static String NhanViens_EntityCollectionPropertyName { get { return "NhanViens"; } }
    	partial void On_NhanViens_Changing(ref EntityCollection<NhanVien> newValue, ref bool stopChanging);
    	partial void On_NhanViens_Changed(EntityCollection<NhanVien> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_KyChamCong_CompanyInfo", "CC_KyChamCong")]
        public EntityCollection<CC_KyChamCong> CC_KyChamCong
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_KyChamCong>("ERPModel.FK_CC_KyChamCong_CompanyInfo", "CC_KyChamCong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_KyChamCong_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_KyChamCong>("ERPModel.FK_CC_KyChamCong_CompanyInfo", "CC_KyChamCong", value);
    					On_CC_KyChamCong_Changed(this.CC_KyChamCong);//\\//
    				}
    			}
            }
        }
    	public static String CC_KyChamCong_EntityCollectionPropertyName { get { return "CC_KyChamCong"; } }
    	partial void On_CC_KyChamCong_Changing(ref EntityCollection<CC_KyChamCong> newValue, ref bool stopChanging);
    	partial void On_CC_KyChamCong_Changed(EntityCollection<CC_KyChamCong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_QuanLyChamCong_CompanyInfo", "CC_QuanLyChamCong")]
        public EntityCollection<CC_QuanLyChamCong> CC_QuanLyChamCong
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_QuanLyChamCong>("ERPModel.FK_CC_QuanLyChamCong_CompanyInfo", "CC_QuanLyChamCong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_QuanLyChamCong_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_QuanLyChamCong>("ERPModel.FK_CC_QuanLyChamCong_CompanyInfo", "CC_QuanLyChamCong", value);
    					On_CC_QuanLyChamCong_Changed(this.CC_QuanLyChamCong);//\\//
    				}
    			}
            }
        }
    	public static String CC_QuanLyChamCong_EntityCollectionPropertyName { get { return "CC_QuanLyChamCong"; } }
    	partial void On_CC_QuanLyChamCong_Changing(ref EntityCollection<CC_QuanLyChamCong> newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyChamCong_Changed(EntityCollection<CC_QuanLyChamCong> currentValue);

        #endregion

    }
}
