//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 04:17:16 ngay 30/08/2016
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="GiayToHoSo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GiayToHoSo : ERP_Core.BaseEntityObject//EntityObject
    {
    	static GiayToHoSo()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public GiayToHoSo()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new GiayToHoSo object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static GiayToHoSo CreateGiayToHoSo(System.Guid oid)
        {
            GiayToHoSo giayToHoSo = new GiayToHoSo();
            giayToHoSo.Oid = oid;
            return giayToHoSo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> HoSo
        {
            get
            {
                return _hoSo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _hoSo;
    			bool stopChanging = false;
                On_HoSo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HoSo");
    			if(!stopChanging)
    			{
    				_hoSo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("HoSo");
    				On_HoSo_Changed(oldValue, _hoSo);//\\
    			}
            }
        }
    	public static String HoSo_PropertyName { get { return "HoSo"; } }
        private Nullable<System.Guid> _hoSo;
        partial void On_HoSo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_HoSo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> GiayTo
        {
            get
            {
                return _giayTo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _giayTo;
    			bool stopChanging = false;
                On_GiayTo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GiayTo");
    			if(!stopChanging)
    			{
    				_giayTo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GiayTo");
    				On_GiayTo_Changed(oldValue, _giayTo);//\\
    			}
            }
        }
    	public static String GiayTo_PropertyName { get { return "GiayTo"; } }
        private Nullable<System.Guid> _giayTo;
        partial void On_GiayTo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_GiayTo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SoGiayTo
        {
            get
            {
                return _soGiayTo;
            }
            set
            {
    			string oldValue =  _soGiayTo;
    			bool stopChanging = false;
                On_SoGiayTo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoGiayTo");
    			if(!stopChanging)
    			{
    				_soGiayTo = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("SoGiayTo");
    				On_SoGiayTo_Changed(oldValue, _soGiayTo);//\\
    			}
            }
        }
    	public static String SoGiayTo_PropertyName { get { return "SoGiayTo"; } }
        private string _soGiayTo;
        partial void On_SoGiayTo_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_SoGiayTo_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayBanHanh
        {
            get
            {
                return _ngayBanHanh;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayBanHanh;
    			bool stopChanging = false;
                On_NgayBanHanh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayBanHanh");
    			if(!stopChanging)
    			{
    				_ngayBanHanh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayBanHanh");
    				On_NgayBanHanh_Changed(oldValue, _ngayBanHanh);//\\
    			}
            }
        }
    	public static String NgayBanHanh_PropertyName { get { return "NgayBanHanh"; } }
        private Nullable<System.DateTime> _ngayBanHanh;
        partial void On_NgayBanHanh_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayBanHanh_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayLap
        {
            get
            {
                return _ngayLap;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayLap;
    			bool stopChanging = false;
                On_NgayLap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayLap");
    			if(!stopChanging)
    			{
    				_ngayLap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayLap");
    				On_NgayLap_Changed(oldValue, _ngayLap);//\\
    			}
            }
        }
    	public static String NgayLap_PropertyName { get { return "NgayLap"; } }
        private Nullable<System.DateTime> _ngayLap;
        partial void On_NgayLap_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayLap_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DuongDanFile
        {
            get
            {
                return _duongDanFile;
            }
            set
            {
    			string oldValue =  _duongDanFile;
    			bool stopChanging = false;
                On_DuongDanFile_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DuongDanFile");
    			if(!stopChanging)
    			{
    				_duongDanFile = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DuongDanFile");
    				On_DuongDanFile_Changed(oldValue, _duongDanFile);//\\
    			}
            }
        }
    	public static String DuongDanFile_PropertyName { get { return "DuongDanFile"; } }
        private string _duongDanFile;
        partial void On_DuongDanFile_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DuongDanFile_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> DangLuuTru
        {
            get
            {
                return _dangLuuTru;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _dangLuuTru;
    			bool stopChanging = false;
                On_DangLuuTru_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DangLuuTru");
    			if(!stopChanging)
    			{
    				_dangLuuTru = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DangLuuTru");
    				On_DangLuuTru_Changed(oldValue, _dangLuuTru);//\\
    			}
            }
        }
    	public static String DangLuuTru_PropertyName { get { return "DangLuuTru"; } }
        private Nullable<System.Guid> _dangLuuTru;
        partial void On_DangLuuTru_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_DangLuuTru_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> SoBan
        {
            get
            {
                return _soBan;
            }
            set
            {
    			Nullable<int> oldValue =  _soBan;
    			bool stopChanging = false;
                On_SoBan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoBan");
    			if(!stopChanging)
    			{
    				_soBan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoBan");
    				On_SoBan_Changed(oldValue, _soBan);//\\
    			}
            }
        }
    	public static String SoBan_PropertyName { get { return "SoBan"; } }
        private Nullable<int> _soBan;
        partial void On_SoBan_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_SoBan_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TrichYeu
        {
            get
            {
                return _trichYeu;
            }
            set
            {
    			string oldValue =  _trichYeu;
    			bool stopChanging = false;
                On_TrichYeu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TrichYeu");
    			if(!stopChanging)
    			{
    				_trichYeu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TrichYeu");
    				On_TrichYeu_Changed(oldValue, _trichYeu);//\\
    			}
            }
        }
    	public static String TrichYeu_PropertyName { get { return "TrichYeu"; } }
        private string _trichYeu;
        partial void On_TrichYeu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TrichYeu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string LuuTru
        {
            get
            {
                return _luuTru;
            }
            set
            {
    			string oldValue =  _luuTru;
    			bool stopChanging = false;
                On_LuuTru_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LuuTru");
    			if(!stopChanging)
    			{
    				_luuTru = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("LuuTru");
    				On_LuuTru_Changed(oldValue, _luuTru);//\\
    			}
            }
        }
    	public static String LuuTru_PropertyName { get { return "LuuTru"; } }
        private string _luuTru;
        partial void On_LuuTru_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_LuuTru_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_GiayToHoSo_DangLuuTru", "DangLuuTru")]
        public DangLuuTru DangLuuTru1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DangLuuTru>("ERPModel.FK_GiayToHoSo_DangLuuTru", "DangLuuTru").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_DangLuuTru1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DangLuuTru>("ERPModel.FK_GiayToHoSo_DangLuuTru", "DangLuuTru").Value = value;
    				On_DangLuuTru1_Changed(this.DangLuuTru1);//\\//
    			}
    	    }
        }
    	public static String DangLuuTru1_ReferencePropertyName { get { return "DangLuuTru1"; } }
    	partial void On_DangLuuTru1_Changing(ref DangLuuTru newValue, ref bool stopChanging);
    	partial void On_DangLuuTru1_Changed(DangLuuTru currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DangLuuTru> DangLuuTru1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DangLuuTru>("ERPModel.FK_GiayToHoSo_DangLuuTru", "DangLuuTru");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DangLuuTru>("ERPModel.FK_GiayToHoSo_DangLuuTru", "DangLuuTru", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_GiayToHoSo_GiayTo", "GiayTo")]
        public GiayTo GiayTo1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiayTo>("ERPModel.FK_GiayToHoSo_GiayTo", "GiayTo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_GiayTo1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiayTo>("ERPModel.FK_GiayToHoSo_GiayTo", "GiayTo").Value = value;
    				On_GiayTo1_Changed(this.GiayTo1);//\\//
    			}
    	    }
        }
    	public static String GiayTo1_ReferencePropertyName { get { return "GiayTo1"; } }
    	partial void On_GiayTo1_Changing(ref GiayTo newValue, ref bool stopChanging);
    	partial void On_GiayTo1_Changed(GiayTo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GiayTo> GiayTo1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiayTo>("ERPModel.FK_GiayToHoSo_GiayTo", "GiayTo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GiayTo>("ERPModel.FK_GiayToHoSo_GiayTo", "GiayTo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_GiayToHoSo_HoSo", "HoSo")]
        public HoSo HoSo1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_GiayToHoSo_HoSo", "HoSo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_HoSo1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_GiayToHoSo_HoSo", "HoSo").Value = value;
    				On_HoSo1_Changed(this.HoSo1);//\\//
    			}
    	    }
        }
    	public static String HoSo1_ReferencePropertyName { get { return "HoSo1"; } }
    	partial void On_HoSo1_Changing(ref HoSo newValue, ref bool stopChanging);
    	partial void On_HoSo1_Changed(HoSo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HoSo> HoSo1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_GiayToHoSo_HoSo", "HoSo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HoSo>("ERPModel.FK_GiayToHoSo_HoSo", "HoSo", value);
                }
            }
        }

        #endregion

    }
}
