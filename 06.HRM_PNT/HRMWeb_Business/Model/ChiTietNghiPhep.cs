//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 03:34:42 ngay 05/01/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="ChiTietNghiPhep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChiTietNghiPhep : ERP_Core.BaseEntityObject//EntityObject
    {
    	static ChiTietNghiPhep()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public ChiTietNghiPhep()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new ChiTietNghiPhep object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static ChiTietNghiPhep CreateChiTietNghiPhep(System.Guid oid)
        {
            ChiTietNghiPhep chiTietNghiPhep = new ChiTietNghiPhep();
            chiTietNghiPhep.Oid = oid;
            return chiTietNghiPhep;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ThongTinNghiPhep
        {
            get
            {
                return _thongTinNghiPhep;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _thongTinNghiPhep;
    			bool stopChanging = false;
                On_ThongTinNghiPhep_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ThongTinNghiPhep");
    			if(!stopChanging)
    			{
    				_thongTinNghiPhep = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ThongTinNghiPhep");
    				On_ThongTinNghiPhep_Changed(oldValue, _thongTinNghiPhep);//\\
    			}
            }
        }
    	public static String ThongTinNghiPhep_PropertyName { get { return "ThongTinNghiPhep"; } }
        private Nullable<System.Guid> _thongTinNghiPhep;
        partial void On_ThongTinNghiPhep_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ThongTinNghiPhep_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> TuNgay
        {
            get
            {
                return _tuNgay;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _tuNgay;
    			bool stopChanging = false;
                On_TuNgay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TuNgay");
    			if(!stopChanging)
    			{
    				_tuNgay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TuNgay");
    				On_TuNgay_Changed(oldValue, _tuNgay);//\\
    			}
            }
        }
    	public static String TuNgay_PropertyName { get { return "TuNgay"; } }
        private Nullable<System.DateTime> _tuNgay;
        partial void On_TuNgay_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_TuNgay_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DenNgay
        {
            get
            {
                return _denNgay;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _denNgay;
    			bool stopChanging = false;
                On_DenNgay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DenNgay");
    			if(!stopChanging)
    			{
    				_denNgay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DenNgay");
    				On_DenNgay_Changed(oldValue, _denNgay);//\\
    			}
            }
        }
    	public static String DenNgay_PropertyName { get { return "DenNgay"; } }
        private Nullable<System.DateTime> _denNgay;
        partial void On_DenNgay_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_DenNgay_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> TongSoNgayNghiPhep
        {
            get
            {
                return _tongSoNgayNghiPhep;
            }
            set
            {
    			Nullable<int> oldValue =  _tongSoNgayNghiPhep;
    			bool stopChanging = false;
                On_TongSoNgayNghiPhep_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TongSoNgayNghiPhep");
    			if(!stopChanging)
    			{
    				_tongSoNgayNghiPhep = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TongSoNgayNghiPhep");
    				On_TongSoNgayNghiPhep_Changed(oldValue, _tongSoNgayNghiPhep);//\\
    			}
            }
        }
    	public static String TongSoNgayNghiPhep_PropertyName { get { return "TongSoNgayNghiPhep"; } }
        private Nullable<int> _tongSoNgayNghiPhep;
        partial void On_TongSoNgayNghiPhep_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_TongSoNgayNghiPhep_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> SoNgayQuaHan
        {
            get
            {
                return _soNgayQuaHan;
            }
            set
            {
    			Nullable<int> oldValue =  _soNgayQuaHan;
    			bool stopChanging = false;
                On_SoNgayQuaHan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoNgayQuaHan");
    			if(!stopChanging)
    			{
    				_soNgayQuaHan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoNgayQuaHan");
    				On_SoNgayQuaHan_Changed(oldValue, _soNgayQuaHan);//\\
    			}
            }
        }
    	public static String SoNgayQuaHan_PropertyName { get { return "SoNgayQuaHan"; } }
        private Nullable<int> _soNgayQuaHan;
        partial void On_SoNgayQuaHan_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_SoNgayQuaHan_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Khoa
        {
            get
            {
                return _khoa;
            }
            set
            {
    			Nullable<bool> oldValue =  _khoa;
    			bool stopChanging = false;
                On_Khoa_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Khoa");
    			if(!stopChanging)
    			{
    				_khoa = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Khoa");
    				On_Khoa_Changed(oldValue, _khoa);//\\
    			}
            }
        }
    	public static String Khoa_PropertyName { get { return "Khoa"; } }
        private Nullable<bool> _khoa;
        partial void On_Khoa_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_Khoa_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string GhiChu
        {
            get
            {
                return _ghiChu;
            }
            set
            {
    			string oldValue =  _ghiChu;
    			bool stopChanging = false;
                On_GhiChu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GhiChu");
    			if(!stopChanging)
    			{
    				_ghiChu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("GhiChu");
    				On_GhiChu_Changed(oldValue, _ghiChu);//\\
    			}
            }
        }
    	public static String GhiChu_PropertyName { get { return "GhiChu"; } }
        private string _ghiChu;
        partial void On_GhiChu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_GhiChu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_ChiTietNghiPhep_ThongTinNghiPhep", "ThongTinNghiPhep")]
        public ThongTinNghiPhep ThongTinNghiPhep1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNghiPhep>("ERPModel.FK_ChiTietNghiPhep_ThongTinNghiPhep", "ThongTinNghiPhep").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_ThongTinNghiPhep1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNghiPhep>("ERPModel.FK_ChiTietNghiPhep_ThongTinNghiPhep", "ThongTinNghiPhep").Value = value;
    				On_ThongTinNghiPhep1_Changed(this.ThongTinNghiPhep1);//\\//
    			}
    	    }
        }
    	public static String ThongTinNghiPhep1_ReferencePropertyName { get { return "ThongTinNghiPhep1"; } }
    	partial void On_ThongTinNghiPhep1_Changing(ref ThongTinNghiPhep newValue, ref bool stopChanging);
    	partial void On_ThongTinNghiPhep1_Changed(ThongTinNghiPhep currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThongTinNghiPhep> ThongTinNghiPhep1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNghiPhep>("ERPModel.FK_ChiTietNghiPhep_ThongTinNghiPhep", "ThongTinNghiPhep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ThongTinNghiPhep>("ERPModel.FK_ChiTietNghiPhep_ThongTinNghiPhep", "ThongTinNghiPhep", value);
                }
            }
        }

        #endregion

    }
}
