//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 09:24:55 ngay 29/02/2020
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="CC_Attachments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CC_Attachments : ERP_Core.BaseEntityObject//EntityObject
    {
    	static CC_Attachments()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public CC_Attachments()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new CC_Attachments object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static CC_Attachments CreateCC_Attachments(System.Guid oid)
        {
            CC_Attachments cC_Attachments = new CC_Attachments();
            cC_Attachments.Oid = oid;
            return cC_Attachments;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> KhaiBaoCongTac
        {
            get
            {
                return _khaiBaoCongTac;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _khaiBaoCongTac;
    			bool stopChanging = false;
                On_KhaiBaoCongTac_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("KhaiBaoCongTac");
    			if(!stopChanging)
    			{
    				_khaiBaoCongTac = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("KhaiBaoCongTac");
    				On_KhaiBaoCongTac_Changed(oldValue, _khaiBaoCongTac);//\\
    			}
            }
        }
    	public static String KhaiBaoCongTac_PropertyName { get { return "KhaiBaoCongTac"; } }
        private Nullable<System.Guid> _khaiBaoCongTac;
        partial void On_KhaiBaoCongTac_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_KhaiBaoCongTac_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return _fileName;
            }
            set
            {
    			string oldValue =  _fileName;
    			bool stopChanging = false;
                On_FileName_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("FileName");
    			if(!stopChanging)
    			{
    				_fileName = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("FileName");
    				On_FileName_Changed(oldValue, _fileName);//\\
    			}
            }
        }
    	public static String FileName_PropertyName { get { return "FileName"; } }
        private string _fileName;
        partial void On_FileName_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_FileName_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_data);
            }
            set
            {
    			byte[] oldValue =  _data;
    			bool stopChanging = false;
                On_Data_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Data");
    			if(!stopChanging)
    			{
    				_data = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Data");
    				On_Data_Changed(oldValue, _data);//\\
    			}
            }
        }
    	public static String Data_PropertyName { get { return "Data"; } }
        private byte[] _data;
        partial void On_Data_Changing(byte[] currentValue, ref byte[] newValue, ref bool stopChanging);
        partial void On_Data_Changed(byte[] oldValue, byte[] currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> Date
        {
            get
            {
                return _date;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _date;
    			bool stopChanging = false;
                On_Date_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Date");
    			if(!stopChanging)
    			{
    				_date = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Date");
    				On_Date_Changed(oldValue, _date);//\\
    			}
            }
        }
    	public static String Date_PropertyName { get { return "Date"; } }
        private Nullable<System.DateTime> _date;
        partial void On_Date_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_Date_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_Attachments_CC_KhaiBaoCongTac", "CC_KhaiBaoCongTac")]
        public CC_KhaiBaoCongTac CC_KhaiBaoCongTac
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CC_KhaiBaoCongTac>("ERPModel.FK_CC_Attachments_CC_KhaiBaoCongTac", "CC_KhaiBaoCongTac").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_CC_KhaiBaoCongTac_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CC_KhaiBaoCongTac>("ERPModel.FK_CC_Attachments_CC_KhaiBaoCongTac", "CC_KhaiBaoCongTac").Value = value;
    				On_CC_KhaiBaoCongTac_Changed(this.CC_KhaiBaoCongTac);//\\//
    			}
    	    }
        }
    	public static String CC_KhaiBaoCongTac_ReferencePropertyName { get { return "CC_KhaiBaoCongTac"; } }
    	partial void On_CC_KhaiBaoCongTac_Changing(ref CC_KhaiBaoCongTac newValue, ref bool stopChanging);
    	partial void On_CC_KhaiBaoCongTac_Changed(CC_KhaiBaoCongTac currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CC_KhaiBaoCongTac> CC_KhaiBaoCongTacReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CC_KhaiBaoCongTac>("ERPModel.FK_CC_Attachments_CC_KhaiBaoCongTac", "CC_KhaiBaoCongTac");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CC_KhaiBaoCongTac>("ERPModel.FK_CC_Attachments_CC_KhaiBaoCongTac", "CC_KhaiBaoCongTac", value);
                }
            }
        }

        #endregion

    }
}
