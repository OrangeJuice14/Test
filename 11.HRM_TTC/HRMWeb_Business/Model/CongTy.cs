//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 09:24:55 ngay 29/02/2020
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="CongTy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CongTy : ERP_Core.BaseEntityObject//EntityObject
    {
    	static CongTy()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public CongTy()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new CongTy object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static CongTy CreateCongTy(System.Guid oid)
        {
            CongTy congTy = new CongTy();
            congTy.Oid = oid;
            return congTy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenVietTat
        {
            get
            {
                return _tenVietTat;
            }
            set
            {
    			string oldValue =  _tenVietTat;
    			bool stopChanging = false;
                On_TenVietTat_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenVietTat");
    			if(!stopChanging)
    			{
    				_tenVietTat = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenVietTat");
    				On_TenVietTat_Changed(oldValue, _tenVietTat);//\\
    			}
            }
        }
    	public static String TenVietTat_PropertyName { get { return "TenVietTat"; } }
        private string _tenVietTat;
        partial void On_TenVietTat_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenVietTat_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DonViChuQuan
        {
            get
            {
                return _donViChuQuan;
            }
            set
            {
    			string oldValue =  _donViChuQuan;
    			bool stopChanging = false;
                On_DonViChuQuan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DonViChuQuan");
    			if(!stopChanging)
    			{
    				_donViChuQuan = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DonViChuQuan");
    				On_DonViChuQuan_Changed(oldValue, _donViChuQuan);//\\
    			}
            }
        }
    	public static String DonViChuQuan_PropertyName { get { return "DonViChuQuan"; } }
        private string _donViChuQuan;
        partial void On_DonViChuQuan_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DonViChuQuan_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NamThanhLap
        {
            get
            {
                return _namThanhLap;
            }
            set
            {
    			Nullable<int> oldValue =  _namThanhLap;
    			bool stopChanging = false;
                On_NamThanhLap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NamThanhLap");
    			if(!stopChanging)
    			{
    				_namThanhLap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NamThanhLap");
    				On_NamThanhLap_Changed(oldValue, _namThanhLap);//\\
    			}
            }
        }
    	public static String NamThanhLap_PropertyName { get { return "NamThanhLap"; } }
        private Nullable<int> _namThanhLap;
        partial void On_NamThanhLap_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_NamThanhLap_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> DiaChi
        {
            get
            {
                return _diaChi;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _diaChi;
    			bool stopChanging = false;
                On_DiaChi_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DiaChi");
    			if(!stopChanging)
    			{
    				_diaChi = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DiaChi");
    				On_DiaChi_Changed(oldValue, _diaChi);//\\
    			}
            }
        }
    	public static String DiaChi_PropertyName { get { return "DiaChi"; } }
        private Nullable<System.Guid> _diaChi;
        partial void On_DiaChi_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_DiaChi_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DienThoai
        {
            get
            {
                return _dienThoai;
            }
            set
            {
    			string oldValue =  _dienThoai;
    			bool stopChanging = false;
                On_DienThoai_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DienThoai");
    			if(!stopChanging)
    			{
    				_dienThoai = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DienThoai");
    				On_DienThoai_Changed(oldValue, _dienThoai);//\\
    			}
            }
        }
    	public static String DienThoai_PropertyName { get { return "DienThoai"; } }
        private string _dienThoai;
        partial void On_DienThoai_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DienThoai_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _email;
            }
            set
            {
    			string oldValue =  _email;
    			bool stopChanging = false;
                On_Email_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Email");
    			if(!stopChanging)
    			{
    				_email = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Email");
    				On_Email_Changed(oldValue, _email);//\\
    			}
            }
        }
    	public static String Email_PropertyName { get { return "Email"; } }
        private string _email;
        partial void On_Email_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Email_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Fax
        {
            get
            {
                return _fax;
            }
            set
            {
    			string oldValue =  _fax;
    			bool stopChanging = false;
                On_Fax_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Fax");
    			if(!stopChanging)
    			{
    				_fax = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Fax");
    				On_Fax_Changed(oldValue, _fax);//\\
    			}
            }
        }
    	public static String Fax_PropertyName { get { return "Fax"; } }
        private string _fax;
        partial void On_Fax_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Fax_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string WebSite
        {
            get
            {
                return _webSite;
            }
            set
            {
    			string oldValue =  _webSite;
    			bool stopChanging = false;
                On_WebSite_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("WebSite");
    			if(!stopChanging)
    			{
    				_webSite = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("WebSite");
    				On_WebSite_Changed(oldValue, _webSite);//\\
    			}
            }
        }
    	public static String WebSite_PropertyName { get { return "WebSite"; } }
        private string _webSite;
        partial void On_WebSite_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_WebSite_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ThongTinChung
        {
            get
            {
                return _thongTinChung;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _thongTinChung;
    			bool stopChanging = false;
                On_ThongTinChung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ThongTinChung");
    			if(!stopChanging)
    			{
    				_thongTinChung = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ThongTinChung");
    				On_ThongTinChung_Changed(oldValue, _thongTinChung);//\\
    			}
            }
        }
    	public static String ThongTinChung_PropertyName { get { return "ThongTinChung"; } }
        private Nullable<System.Guid> _thongTinChung;
        partial void On_ThongTinChung_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ThongTinChung_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaSoThue
        {
            get
            {
                return _maSoThue;
            }
            set
            {
    			string oldValue =  _maSoThue;
    			bool stopChanging = false;
                On_MaSoThue_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaSoThue");
    			if(!stopChanging)
    			{
    				_maSoThue = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaSoThue");
    				On_MaSoThue_Changed(oldValue, _maSoThue);//\\
    			}
            }
        }
    	public static String MaSoThue_PropertyName { get { return "MaSoThue"; } }
        private string _maSoThue;
        partial void On_MaSoThue_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaSoThue_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> MocTinhThueTNCN
        {
            get
            {
                return _mocTinhThueTNCN;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _mocTinhThueTNCN;
    			bool stopChanging = false;
                On_MocTinhThueTNCN_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MocTinhThueTNCN");
    			if(!stopChanging)
    			{
    				_mocTinhThueTNCN = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MocTinhThueTNCN");
    				On_MocTinhThueTNCN_Changed(oldValue, _mocTinhThueTNCN);//\\
    			}
            }
        }
    	public static String MocTinhThueTNCN_PropertyName { get { return "MocTinhThueTNCN"; } }
        private Nullable<System.Guid> _mocTinhThueTNCN;
        partial void On_MocTinhThueTNCN_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_MocTinhThueTNCN_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public byte[] Logo
        {
            get
            {
                return StructuralObject.GetValidValue(_logo);
            }
            set
            {
    			byte[] oldValue =  _logo;
    			bool stopChanging = false;
                On_Logo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Logo");
    			if(!stopChanging)
    			{
    				_logo = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Logo");
    				On_Logo_Changed(oldValue, _logo);//\\
    			}
            }
        }
    	public static String Logo_PropertyName { get { return "Logo"; } }
        private byte[] _logo;
        partial void On_Logo_Changing(byte[] currentValue, ref byte[] newValue, ref bool stopChanging);
        partial void On_Logo_Changed(byte[] oldValue, byte[] currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> HeDaoTao
        {
            get
            {
                return _heDaoTao;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _heDaoTao;
    			bool stopChanging = false;
                On_HeDaoTao_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HeDaoTao");
    			if(!stopChanging)
    			{
    				_heDaoTao = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("HeDaoTao");
    				On_HeDaoTao_Changed(oldValue, _heDaoTao);//\\
    			}
            }
        }
    	public static String HeDaoTao_PropertyName { get { return "HeDaoTao"; } }
        private Nullable<System.Guid> _heDaoTao;
        partial void On_HeDaoTao_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_HeDaoTao_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> DinhPhi
        {
            get
            {
                return _dinhPhi;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _dinhPhi;
    			bool stopChanging = false;
                On_DinhPhi_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DinhPhi");
    			if(!stopChanging)
    			{
    				_dinhPhi = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DinhPhi");
    				On_DinhPhi_Changed(oldValue, _dinhPhi);//\\
    			}
            }
        }
    	public static String DinhPhi_PropertyName { get { return "DinhPhi"; } }
        private Nullable<System.Guid> _dinhPhi;
        partial void On_DinhPhi_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_DinhPhi_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> LoaiTruong
        {
            get
            {
                return _loaiTruong;
            }
            set
            {
    			Nullable<byte> oldValue =  _loaiTruong;
    			bool stopChanging = false;
                On_LoaiTruong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LoaiTruong");
    			if(!stopChanging)
    			{
    				_loaiTruong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LoaiTruong");
    				On_LoaiTruong_Changed(oldValue, _loaiTruong);//\\
    			}
            }
        }
    	public static String LoaiTruong_PropertyName { get { return "LoaiTruong"; } }
        private Nullable<byte> _loaiTruong;
        partial void On_LoaiTruong_Changing(Nullable<byte> currentValue, ref Nullable<byte> newValue, ref bool stopChanging);
        partial void On_LoaiTruong_Changed(Nullable<byte> oldValue, Nullable<byte> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string URLLogo
        {
            get
            {
                return _uRLLogo;
            }
            set
            {
    			string oldValue =  _uRLLogo;
    			bool stopChanging = false;
                On_URLLogo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("URLLogo");
    			if(!stopChanging)
    			{
    				_uRLLogo = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("URLLogo");
    				On_URLLogo_Changed(oldValue, _uRLLogo);//\\
    			}
            }
        }
    	public static String URLLogo_PropertyName { get { return "URLLogo"; } }
        private string _uRLLogo;
        partial void On_URLLogo_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_URLLogo_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> SuDungPOS
        {
            get
            {
                return _suDungPOS;
            }
            set
            {
    			Nullable<bool> oldValue =  _suDungPOS;
    			bool stopChanging = false;
                On_SuDungPOS_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SuDungPOS");
    			if(!stopChanging)
    			{
    				_suDungPOS = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SuDungPOS");
    				On_SuDungPOS_Changed(oldValue, _suDungPOS);//\\
    			}
            }
        }
    	public static String SuDungPOS_PropertyName { get { return "SuDungPOS"; } }
        private Nullable<bool> _suDungPOS;
        partial void On_SuDungPOS_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_SuDungPOS_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> MocQuyDoiThuNhapKhongThue
        {
            get
            {
                return _mocQuyDoiThuNhapKhongThue;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _mocQuyDoiThuNhapKhongThue;
    			bool stopChanging = false;
                On_MocQuyDoiThuNhapKhongThue_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MocQuyDoiThuNhapKhongThue");
    			if(!stopChanging)
    			{
    				_mocQuyDoiThuNhapKhongThue = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("MocQuyDoiThuNhapKhongThue");
    				On_MocQuyDoiThuNhapKhongThue_Changed(oldValue, _mocQuyDoiThuNhapKhongThue);//\\
    			}
            }
        }
    	public static String MocQuyDoiThuNhapKhongThue_PropertyName { get { return "MocQuyDoiThuNhapKhongThue"; } }
        private Nullable<System.Guid> _mocQuyDoiThuNhapKhongThue;
        partial void On_MocQuyDoiThuNhapKhongThue_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_MocQuyDoiThuNhapKhongThue_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_QuanLyChamCong_CongTy", "CC_QuanLyChamCong")]
        public EntityCollection<CC_QuanLyChamCong> CC_QuanLyChamCong
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_QuanLyChamCong>("ERPModel.FK_CC_QuanLyChamCong_CongTy", "CC_QuanLyChamCong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_QuanLyChamCong_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_QuanLyChamCong>("ERPModel.FK_CC_QuanLyChamCong_CongTy", "CC_QuanLyChamCong", value);
    					On_CC_QuanLyChamCong_Changed(this.CC_QuanLyChamCong);//\\//
    				}
    			}
            }
        }
    	public static String CC_QuanLyChamCong_EntityCollectionPropertyName { get { return "CC_QuanLyChamCong"; } }
    	partial void On_CC_QuanLyChamCong_Changing(ref EntityCollection<CC_QuanLyChamCong> newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyChamCong_Changed(EntityCollection<CC_QuanLyChamCong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_WebUsers_CongTy", "WebUser")]
        public EntityCollection<WebUser> WebUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebUser>("ERPModel.FK_WebUsers_CongTy", "WebUser");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_WebUsers_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebUser>("ERPModel.FK_WebUsers_CongTy", "WebUser", value);
    					On_WebUsers_Changed(this.WebUsers);//\\//
    				}
    			}
            }
        }
    	public static String WebUsers_EntityCollectionPropertyName { get { return "WebUsers"; } }
    	partial void On_WebUsers_Changing(ref EntityCollection<WebUser> newValue, ref bool stopChanging);
    	partial void On_WebUsers_Changed(EntityCollection<WebUser> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_ChamCongTheoNgay_CongTy", "CC_ChamCongTheoNgay")]
        public EntityCollection<CC_ChamCongTheoNgay> CC_ChamCongTheoNgay
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_ChamCongTheoNgay>("ERPModel.FK_CC_ChamCongTheoNgay_CongTy", "CC_ChamCongTheoNgay");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_ChamCongTheoNgay_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_ChamCongTheoNgay>("ERPModel.FK_CC_ChamCongTheoNgay_CongTy", "CC_ChamCongTheoNgay", value);
    					On_CC_ChamCongTheoNgay_Changed(this.CC_ChamCongTheoNgay);//\\//
    				}
    			}
            }
        }
    	public static String CC_ChamCongTheoNgay_EntityCollectionPropertyName { get { return "CC_ChamCongTheoNgay"; } }
    	partial void On_CC_ChamCongTheoNgay_Changing(ref EntityCollection<CC_ChamCongTheoNgay> newValue, ref bool stopChanging);
    	partial void On_CC_ChamCongTheoNgay_Changed(EntityCollection<CC_ChamCongTheoNgay> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_KyChamCong_CongTy", "CC_KyChamCong")]
        public EntityCollection<CC_KyChamCong> CC_KyChamCong
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_KyChamCong>("ERPModel.FK_CC_KyChamCong_CongTy", "CC_KyChamCong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_KyChamCong_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_KyChamCong>("ERPModel.FK_CC_KyChamCong_CongTy", "CC_KyChamCong", value);
    					On_CC_KyChamCong_Changed(this.CC_KyChamCong);//\\//
    				}
    			}
            }
        }
    	public static String CC_KyChamCong_EntityCollectionPropertyName { get { return "CC_KyChamCong"; } }
    	partial void On_CC_KyChamCong_Changing(ref EntityCollection<CC_KyChamCong> newValue, ref bool stopChanging);
    	partial void On_CC_KyChamCong_Changed(EntityCollection<CC_KyChamCong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_QuanLyNghiPhep_CongTy", "CC_QuanLyNghiPhep")]
        public EntityCollection<CC_QuanLyNghiPhep> CC_QuanLyNghiPhep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_QuanLyNghiPhep>("ERPModel.FK_CC_QuanLyNghiPhep_CongTy", "CC_QuanLyNghiPhep");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_QuanLyNghiPhep_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_QuanLyNghiPhep>("ERPModel.FK_CC_QuanLyNghiPhep_CongTy", "CC_QuanLyNghiPhep", value);
    					On_CC_QuanLyNghiPhep_Changed(this.CC_QuanLyNghiPhep);//\\//
    				}
    			}
            }
        }
    	public static String CC_QuanLyNghiPhep_EntityCollectionPropertyName { get { return "CC_QuanLyNghiPhep"; } }
    	partial void On_CC_QuanLyNghiPhep_Changing(ref EntityCollection<CC_QuanLyNghiPhep> newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyNghiPhep_Changed(EntityCollection<CC_QuanLyNghiPhep> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_QuanLyCongNgoaiGio_CongTy", "CC_QuanLyCongNgoaiGio")]
        public EntityCollection<CC_QuanLyCongNgoaiGio> CC_QuanLyCongNgoaiGio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_QuanLyCongNgoaiGio>("ERPModel.FK_CC_QuanLyCongNgoaiGio_CongTy", "CC_QuanLyCongNgoaiGio");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_QuanLyCongNgoaiGio_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_QuanLyCongNgoaiGio>("ERPModel.FK_CC_QuanLyCongNgoaiGio_CongTy", "CC_QuanLyCongNgoaiGio", value);
    					On_CC_QuanLyCongNgoaiGio_Changed(this.CC_QuanLyCongNgoaiGio);//\\//
    				}
    			}
            }
        }
    	public static String CC_QuanLyCongNgoaiGio_EntityCollectionPropertyName { get { return "CC_QuanLyCongNgoaiGio"; } }
    	partial void On_CC_QuanLyCongNgoaiGio_Changing(ref EntityCollection<CC_QuanLyCongNgoaiGio> newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyCongNgoaiGio_Changed(EntityCollection<CC_QuanLyCongNgoaiGio> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_BacLuong_CongTy", "BacLuong")]
        public EntityCollection<BacLuong> BacLuongs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BacLuong>("ERPModel.FK_BacLuong_CongTy", "BacLuong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_BacLuongs_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BacLuong>("ERPModel.FK_BacLuong_CongTy", "BacLuong", value);
    					On_BacLuongs_Changed(this.BacLuongs);//\\//
    				}
    			}
            }
        }
    	public static String BacLuongs_EntityCollectionPropertyName { get { return "BacLuongs"; } }
    	partial void On_BacLuongs_Changing(ref EntityCollection<BacLuong> newValue, ref bool stopChanging);
    	partial void On_BacLuongs_Changed(EntityCollection<BacLuong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_CongTy", "NhanVien")]
        public EntityCollection<NhanVien> NhanViens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_CongTy", "NhanVien");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_NhanViens_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NhanVien>("ERPModel.FK_NhanVien_CongTy", "NhanVien", value);
    					On_NhanViens_Changed(this.NhanViens);//\\//
    				}
    			}
            }
        }
    	public static String NhanViens_EntityCollectionPropertyName { get { return "NhanViens"; } }
    	partial void On_NhanViens_Changing(ref EntityCollection<NhanVien> newValue, ref bool stopChanging);
    	partial void On_NhanViens_Changed(EntityCollection<NhanVien> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NgachLuong_CongTy", "NgachLuong")]
        public EntityCollection<NgachLuong> NgachLuongs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NgachLuong>("ERPModel.FK_NgachLuong_CongTy", "NgachLuong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_NgachLuongs_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NgachLuong>("ERPModel.FK_NgachLuong_CongTy", "NgachLuong", value);
    					On_NgachLuongs_Changed(this.NgachLuongs);//\\//
    				}
    			}
            }
        }
    	public static String NgachLuongs_EntityCollectionPropertyName { get { return "NgachLuongs"; } }
    	partial void On_NgachLuongs_Changing(ref EntityCollection<NgachLuong> newValue, ref bool stopChanging);
    	partial void On_NgachLuongs_Changed(EntityCollection<NgachLuong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_BoPhan_CongTy", "BoPhan")]
        public EntityCollection<BoPhan> BoPhans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoPhan>("ERPModel.FK_BoPhan_CongTy", "BoPhan");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_BoPhans_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoPhan>("ERPModel.FK_BoPhan_CongTy", "BoPhan", value);
    					On_BoPhans_Changed(this.BoPhans);//\\//
    				}
    			}
            }
        }
    	public static String BoPhans_EntityCollectionPropertyName { get { return "BoPhans"; } }
    	partial void On_BoPhans_Changing(ref EntityCollection<BoPhan> newValue, ref bool stopChanging);
    	partial void On_BoPhans_Changed(EntityCollection<BoPhan> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CongTy_Oid", "BoPhan")]
        public BoPhan BoPhan
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_CongTy_Oid", "BoPhan").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_BoPhan_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_CongTy_Oid", "BoPhan").Value = value;
    				On_BoPhan_Changed(this.BoPhan);//\\//
    			}
    	    }
        }
    	public static String BoPhan_ReferencePropertyName { get { return "BoPhan"; } }
    	partial void On_BoPhan_Changing(ref BoPhan newValue, ref bool stopChanging);
    	partial void On_BoPhan_Changed(BoPhan currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoPhan> BoPhanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_CongTy_Oid", "BoPhan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoPhan>("ERPModel.FK_CongTy_Oid", "BoPhan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_KyTinhLuong_CongTy", "KyTinhLuong")]
        public EntityCollection<KyTinhLuong> KyTinhLuongs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KyTinhLuong>("ERPModel.FK_KyTinhLuong_CongTy", "KyTinhLuong");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_KyTinhLuongs_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KyTinhLuong>("ERPModel.FK_KyTinhLuong_CongTy", "KyTinhLuong", value);
    					On_KyTinhLuongs_Changed(this.KyTinhLuongs);//\\//
    				}
    			}
            }
        }
    	public static String KyTinhLuongs_EntityCollectionPropertyName { get { return "KyTinhLuongs"; } }
    	partial void On_KyTinhLuongs_Changing(ref EntityCollection<KyTinhLuong> newValue, ref bool stopChanging);
    	partial void On_KyTinhLuongs_Changed(EntityCollection<KyTinhLuong> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_NgayNghiTrongNam_CongTy", "CC_NgayNghiTrongNam")]
        public EntityCollection<CC_NgayNghiTrongNam> CC_NgayNghiTrongNam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_NgayNghiTrongNam>("ERPModel.FK_CC_NgayNghiTrongNam_CongTy", "CC_NgayNghiTrongNam");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_NgayNghiTrongNam_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_NgayNghiTrongNam>("ERPModel.FK_CC_NgayNghiTrongNam_CongTy", "CC_NgayNghiTrongNam", value);
    					On_CC_NgayNghiTrongNam_Changed(this.CC_NgayNghiTrongNam);//\\//
    				}
    			}
            }
        }
    	public static String CC_NgayNghiTrongNam_EntityCollectionPropertyName { get { return "CC_NgayNghiTrongNam"; } }
    	partial void On_CC_NgayNghiTrongNam_Changing(ref EntityCollection<CC_NgayNghiTrongNam> newValue, ref bool stopChanging);
    	partial void On_CC_NgayNghiTrongNam_Changed(EntityCollection<CC_NgayNghiTrongNam> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_HinhThucNghi_CongTy", "CC_HinhThucNghi")]
        public EntityCollection<CC_HinhThucNghi> CC_HinhThucNghi
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_HinhThucNghi>("ERPModel.FK_CC_HinhThucNghi_CongTy", "CC_HinhThucNghi");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_HinhThucNghi_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_HinhThucNghi>("ERPModel.FK_CC_HinhThucNghi_CongTy", "CC_HinhThucNghi", value);
    					On_CC_HinhThucNghi_Changed(this.CC_HinhThucNghi);//\\//
    				}
    			}
            }
        }
    	public static String CC_HinhThucNghi_EntityCollectionPropertyName { get { return "CC_HinhThucNghi"; } }
    	partial void On_CC_HinhThucNghi_Changing(ref EntityCollection<CC_HinhThucNghi> newValue, ref bool stopChanging);
    	partial void On_CC_HinhThucNghi_Changed(EntityCollection<CC_HinhThucNghi> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_QuanLyPhepHe_CongTy", "CC_QuanLyPhepHe")]
        public EntityCollection<CC_QuanLyPhepHe> CC_QuanLyPhepHe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_QuanLyPhepHe>("ERPModel.FK_CC_QuanLyPhepHe_CongTy", "CC_QuanLyPhepHe");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_QuanLyPhepHe_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_QuanLyPhepHe>("ERPModel.FK_CC_QuanLyPhepHe_CongTy", "CC_QuanLyPhepHe", value);
    					On_CC_QuanLyPhepHe_Changed(this.CC_QuanLyPhepHe);//\\//
    				}
    			}
            }
        }
    	public static String CC_QuanLyPhepHe_EntityCollectionPropertyName { get { return "CC_QuanLyPhepHe"; } }
    	partial void On_CC_QuanLyPhepHe_Changing(ref EntityCollection<CC_QuanLyPhepHe> newValue, ref bool stopChanging);
    	partial void On_CC_QuanLyPhepHe_Changed(EntityCollection<CC_QuanLyPhepHe> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NienDoTaiChinh_CongTy", "NienDoTaiChinh")]
        public EntityCollection<NienDoTaiChinh> NienDoTaiChinhs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NienDoTaiChinh>("ERPModel.FK_NienDoTaiChinh_CongTy", "NienDoTaiChinh");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_NienDoTaiChinhs_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NienDoTaiChinh>("ERPModel.FK_NienDoTaiChinh_CongTy", "NienDoTaiChinh", value);
    					On_NienDoTaiChinhs_Changed(this.NienDoTaiChinhs);//\\//
    				}
    			}
            }
        }
    	public static String NienDoTaiChinhs_EntityCollectionPropertyName { get { return "NienDoTaiChinhs"; } }
    	partial void On_NienDoTaiChinhs_Changing(ref EntityCollection<NienDoTaiChinh> newValue, ref bool stopChanging);
    	partial void On_NienDoTaiChinhs_Changed(EntityCollection<NienDoTaiChinh> currentValue);

        #endregion

    }
}
