//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi DESKTOP-PKPRC2J\NGOCBAO luc 09:24:55 ngay 29/02/2020
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="WebUserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebUserLogin : ERP_Core.BaseEntityObject//EntityObject
    {
    	static WebUserLogin()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public WebUserLogin()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new WebUserLogin object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static WebUserLogin CreateWebUserLogin(System.Guid oid)
        {
            WebUserLogin webUserLogin = new WebUserLogin();
            webUserLogin.Oid = oid;
            return webUserLogin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> WebUserId
        {
            get
            {
                return _webUserId;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _webUserId;
    			bool stopChanging = false;
                On_WebUserId_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("WebUserId");
    			if(!stopChanging)
    			{
    				_webUserId = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("WebUserId");
    				On_WebUserId_Changed(oldValue, _webUserId);//\\
    			}
            }
        }
    	public static String WebUserId_PropertyName { get { return "WebUserId"; } }
        private Nullable<System.Guid> _webUserId;
        partial void On_WebUserId_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_WebUserId_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> Date
        {
            get
            {
                return _date;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _date;
    			bool stopChanging = false;
                On_Date_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Date");
    			if(!stopChanging)
    			{
    				_date = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("Date");
    				On_Date_Changed(oldValue, _date);//\\
    			}
            }
        }
    	public static String Date_PropertyName { get { return "Date"; } }
        private Nullable<System.DateTime> _date;
        partial void On_Date_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_Date_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> LoginTime
        {
            get
            {
                return _loginTime;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _loginTime;
    			bool stopChanging = false;
                On_LoginTime_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LoginTime");
    			if(!stopChanging)
    			{
    				_loginTime = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LoginTime");
    				On_LoginTime_Changed(oldValue, _loginTime);//\\
    			}
            }
        }
    	public static String LoginTime_PropertyName { get { return "LoginTime"; } }
        private Nullable<System.DateTime> _loginTime;
        partial void On_LoginTime_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_LoginTime_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> LogoutTime
        {
            get
            {
                return _logoutTime;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _logoutTime;
    			bool stopChanging = false;
                On_LogoutTime_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LogoutTime");
    			if(!stopChanging)
    			{
    				_logoutTime = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LogoutTime");
    				On_LogoutTime_Changed(oldValue, _logoutTime);//\\
    			}
            }
        }
    	public static String LogoutTime_PropertyName { get { return "LogoutTime"; } }
        private Nullable<System.DateTime> _logoutTime;
        partial void On_LogoutTime_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_LogoutTime_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string IpAddress
        {
            get
            {
                return _ipAddress;
            }
            set
            {
    			string oldValue =  _ipAddress;
    			bool stopChanging = false;
                On_IpAddress_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("IpAddress");
    			if(!stopChanging)
    			{
    				_ipAddress = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("IpAddress");
    				On_IpAddress_Changed(oldValue, _ipAddress);//\\
    			}
            }
        }
    	public static String IpAddress_PropertyName { get { return "IpAddress"; } }
        private string _ipAddress;
        partial void On_IpAddress_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_IpAddress_Changed(string oldValue, string currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_WebUserLogin_WebUsers", "WebUser")]
        public WebUser WebUser
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebUser>("ERPModel.FK_WebUserLogin_WebUsers", "WebUser").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_WebUser_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebUser>("ERPModel.FK_WebUserLogin_WebUsers", "WebUser").Value = value;
    				On_WebUser_Changed(this.WebUser);//\\//
    			}
    	    }
        }
    	public static String WebUser_ReferencePropertyName { get { return "WebUser"; } }
    	partial void On_WebUser_Changing(ref WebUser newValue, ref bool stopChanging);
    	partial void On_WebUser_Changed(WebUser currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebUser> WebUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebUser>("ERPModel.FK_WebUserLogin_WebUsers", "WebUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebUser>("ERPModel.FK_WebUserLogin_WebUsers", "WebUser", value);
                }
            }
        }

        #endregion

    }
}
