//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi SERVERERP\tai luc 05:27:30 ngay 19/04/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ERPModel", Name="spd_Web1_ChiTietThuNhapCaNhanOld_DLU_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class spd_Web1_ChiTietThuNhapCaNhanOld_DLU_Result : ComplexObject
    {
    #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string NoiDung
        {
            get
            {
                return _noiDung;
            }
            set
            {
    			string oldValue =  _noiDung;
    			bool stopChanging = false;
                On_NoiDung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NoiDung");
    			if(!stopChanging)
    			{
    				_noiDung = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("NoiDung");
    				On_NoiDung_Changed(oldValue, _noiDung);//\\
    			}
            }
        }
    	public static String NoiDung_PropertyName { get { return "NoiDung"; } }
        private string _noiDung;
        partial void On_NoiDung_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_NoiDung_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayChi
        {
            get
            {
                return _ngayChi;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayChi;
    			bool stopChanging = false;
                On_NgayChi_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayChi");
    			if(!stopChanging)
    			{
    				_ngayChi = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayChi");
    				On_NgayChi_Changed(oldValue, _ngayChi);//\\
    			}
            }
        }
    	public static String NgayChi_PropertyName { get { return "NgayChi"; } }
        private Nullable<System.DateTime> _ngayChi;
        partial void On_NgayChi_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayChi_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> SoTien
        {
            get
            {
                return _soTien;
            }
            set
            {
    			Nullable<decimal> oldValue =  _soTien;
    			bool stopChanging = false;
                On_SoTien_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoTien");
    			if(!stopChanging)
    			{
    				_soTien = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoTien");
    				On_SoTien_Changed(oldValue, _soTien);//\\
    			}
            }
        }
    	public static String SoTien_PropertyName { get { return "SoTien"; } }
        private Nullable<decimal> _soTien;
        partial void On_SoTien_Changing(Nullable<decimal> currentValue, ref Nullable<decimal> newValue, ref bool stopChanging);
        partial void On_SoTien_Changed(Nullable<decimal> oldValue, Nullable<decimal> currentValue);

    #endregion

    }
}
