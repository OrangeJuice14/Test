//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi SERVERERP\tai luc 05:27:29 ngay 19/04/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="NhanVien")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NhanVien : ERP_Core.BaseEntityObject//EntityObject
    {
    	static NhanVien()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public NhanVien()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new NhanVien object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static NhanVien CreateNhanVien(System.Guid oid)
        {
            NhanVien nhanVien = new NhanVien();
            nhanVien.Oid = oid;
            return nhanVien;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ChucDanh
        {
            get
            {
                return _chucDanh;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _chucDanh;
    			bool stopChanging = false;
                On_ChucDanh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ChucDanh");
    			if(!stopChanging)
    			{
    				_chucDanh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ChucDanh");
    				On_ChucDanh_Changed(oldValue, _chucDanh);//\\
    			}
            }
        }
    	public static String ChucDanh_PropertyName { get { return "ChucDanh"; } }
        private Nullable<System.Guid> _chucDanh;
        partial void On_ChucDanh_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ChucDanh_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public byte[] HinhAnh
        {
            get
            {
                return StructuralObject.GetValidValue(_hinhAnh);
            }
            set
            {
    			byte[] oldValue =  _hinhAnh;
    			bool stopChanging = false;
                On_HinhAnh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HinhAnh");
    			if(!stopChanging)
    			{
    				_hinhAnh = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("HinhAnh");
    				On_HinhAnh_Changed(oldValue, _hinhAnh);//\\
    			}
            }
        }
    	public static String HinhAnh_PropertyName { get { return "HinhAnh"; } }
        private byte[] _hinhAnh;
        partial void On_HinhAnh_Changing(byte[] currentValue, ref byte[] newValue, ref bool stopChanging);
        partial void On_HinhAnh_Changed(byte[] oldValue, byte[] currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> BoPhan
        {
            get
            {
                return _boPhan;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _boPhan;
    			bool stopChanging = false;
                On_BoPhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BoPhan");
    			if(!stopChanging)
    			{
    				_boPhan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BoPhan");
    				On_BoPhan_Changed(oldValue, _boPhan);//\\
    			}
            }
        }
    	public static String BoPhan_PropertyName { get { return "BoPhan"; } }
        private Nullable<System.Guid> _boPhan;
        partial void On_BoPhan_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_BoPhan_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ThanhPhanXuatThan
        {
            get
            {
                return _thanhPhanXuatThan;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _thanhPhanXuatThan;
    			bool stopChanging = false;
                On_ThanhPhanXuatThan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ThanhPhanXuatThan");
    			if(!stopChanging)
    			{
    				_thanhPhanXuatThan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ThanhPhanXuatThan");
    				On_ThanhPhanXuatThan_Changed(oldValue, _thanhPhanXuatThan);//\\
    			}
            }
        }
    	public static String ThanhPhanXuatThan_PropertyName { get { return "ThanhPhanXuatThan"; } }
        private Nullable<System.Guid> _thanhPhanXuatThan;
        partial void On_ThanhPhanXuatThan_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ThanhPhanXuatThan_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> UuTienGiaDinh
        {
            get
            {
                return _uuTienGiaDinh;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _uuTienGiaDinh;
    			bool stopChanging = false;
                On_UuTienGiaDinh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UuTienGiaDinh");
    			if(!stopChanging)
    			{
    				_uuTienGiaDinh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("UuTienGiaDinh");
    				On_UuTienGiaDinh_Changed(oldValue, _uuTienGiaDinh);//\\
    			}
            }
        }
    	public static String UuTienGiaDinh_PropertyName { get { return "UuTienGiaDinh"; } }
        private Nullable<System.Guid> _uuTienGiaDinh;
        partial void On_UuTienGiaDinh_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_UuTienGiaDinh_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> UuTienBanThan
        {
            get
            {
                return _uuTienBanThan;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _uuTienBanThan;
    			bool stopChanging = false;
                On_UuTienBanThan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("UuTienBanThan");
    			if(!stopChanging)
    			{
    				_uuTienBanThan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("UuTienBanThan");
    				On_UuTienBanThan_Changed(oldValue, _uuTienBanThan);//\\
    			}
            }
        }
    	public static String UuTienBanThan_PropertyName { get { return "UuTienBanThan"; } }
        private Nullable<System.Guid> _uuTienBanThan;
        partial void On_UuTienBanThan_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_UuTienBanThan_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CongViecHienNay
        {
            get
            {
                return _congViecHienNay;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _congViecHienNay;
    			bool stopChanging = false;
                On_CongViecHienNay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CongViecHienNay");
    			if(!stopChanging)
    			{
    				_congViecHienNay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CongViecHienNay");
    				On_CongViecHienNay_Changed(oldValue, _congViecHienNay);//\\
    			}
            }
        }
    	public static String CongViecHienNay_PropertyName { get { return "CongViecHienNay"; } }
        private Nullable<System.Guid> _congViecHienNay;
        partial void On_CongViecHienNay_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CongViecHienNay_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> HopDongHienTai
        {
            get
            {
                return _hopDongHienTai;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _hopDongHienTai;
    			bool stopChanging = false;
                On_HopDongHienTai_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HopDongHienTai");
    			if(!stopChanging)
    			{
    				_hopDongHienTai = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("HopDongHienTai");
    				On_HopDongHienTai_Changed(oldValue, _hopDongHienTai);//\\
    			}
            }
        }
    	public static String HopDongHienTai_PropertyName { get { return "HopDongHienTai"; } }
        private Nullable<System.Guid> _hopDongHienTai;
        partial void On_HopDongHienTai_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_HopDongHienTai_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayVaoNganhGiaoDuc
        {
            get
            {
                return _ngayVaoNganhGiaoDuc;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayVaoNganhGiaoDuc;
    			bool stopChanging = false;
                On_NgayVaoNganhGiaoDuc_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayVaoNganhGiaoDuc");
    			if(!stopChanging)
    			{
    				_ngayVaoNganhGiaoDuc = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayVaoNganhGiaoDuc");
    				On_NgayVaoNganhGiaoDuc_Changed(oldValue, _ngayVaoNganhGiaoDuc);//\\
    			}
            }
        }
    	public static String NgayVaoNganhGiaoDuc_PropertyName { get { return "NgayVaoNganhGiaoDuc"; } }
        private Nullable<System.DateTime> _ngayVaoNganhGiaoDuc;
        partial void On_NgayVaoNganhGiaoDuc_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayVaoNganhGiaoDuc_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayTuyenDung
        {
            get
            {
                return _ngayTuyenDung;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayTuyenDung;
    			bool stopChanging = false;
                On_NgayTuyenDung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayTuyenDung");
    			if(!stopChanging)
    			{
    				_ngayTuyenDung = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayTuyenDung");
    				On_NgayTuyenDung_Changed(oldValue, _ngayTuyenDung);//\\
    			}
            }
        }
    	public static String NgayTuyenDung_PropertyName { get { return "NgayTuyenDung"; } }
        private Nullable<System.DateTime> _ngayTuyenDung;
        partial void On_NgayTuyenDung_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayTuyenDung_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DonViTuyenDung
        {
            get
            {
                return _donViTuyenDung;
            }
            set
            {
    			string oldValue =  _donViTuyenDung;
    			bool stopChanging = false;
                On_DonViTuyenDung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DonViTuyenDung");
    			if(!stopChanging)
    			{
    				_donViTuyenDung = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DonViTuyenDung");
    				On_DonViTuyenDung_Changed(oldValue, _donViTuyenDung);//\\
    			}
            }
        }
    	public static String DonViTuyenDung_PropertyName { get { return "DonViTuyenDung"; } }
        private string _donViTuyenDung;
        partial void On_DonViTuyenDung_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DonViTuyenDung_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CongViecTuyenDung
        {
            get
            {
                return _congViecTuyenDung;
            }
            set
            {
    			string oldValue =  _congViecTuyenDung;
    			bool stopChanging = false;
                On_CongViecTuyenDung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CongViecTuyenDung");
    			if(!stopChanging)
    			{
    				_congViecTuyenDung = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("CongViecTuyenDung");
    				On_CongViecTuyenDung_Changed(oldValue, _congViecTuyenDung);//\\
    			}
            }
        }
    	public static String CongViecTuyenDung_PropertyName { get { return "CongViecTuyenDung"; } }
        private string _congViecTuyenDung;
        partial void On_CongViecTuyenDung_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_CongViecTuyenDung_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> CongViecDuocGiao
        {
            get
            {
                return _congViecDuocGiao;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _congViecDuocGiao;
    			bool stopChanging = false;
                On_CongViecDuocGiao_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CongViecDuocGiao");
    			if(!stopChanging)
    			{
    				_congViecDuocGiao = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("CongViecDuocGiao");
    				On_CongViecDuocGiao_Changed(oldValue, _congViecDuocGiao);//\\
    			}
            }
        }
    	public static String CongViecDuocGiao_PropertyName { get { return "CongViecDuocGiao"; } }
        private Nullable<System.Guid> _congViecDuocGiao;
        partial void On_CongViecDuocGiao_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_CongViecDuocGiao_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayVaoCoQuan
        {
            get
            {
                return _ngayVaoCoQuan;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayVaoCoQuan;
    			bool stopChanging = false;
                On_NgayVaoCoQuan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayVaoCoQuan");
    			if(!stopChanging)
    			{
    				_ngayVaoCoQuan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayVaoCoQuan");
    				On_NgayVaoCoQuan_Changed(oldValue, _ngayVaoCoQuan);//\\
    			}
            }
        }
    	public static String NgayVaoCoQuan_PropertyName { get { return "NgayVaoCoQuan"; } }
        private Nullable<System.DateTime> _ngayVaoCoQuan;
        partial void On_NgayVaoCoQuan_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayVaoCoQuan_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NhanVienThongTinLuong
        {
            get
            {
                return _nhanVienThongTinLuong;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _nhanVienThongTinLuong;
    			bool stopChanging = false;
                On_NhanVienThongTinLuong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NhanVienThongTinLuong");
    			if(!stopChanging)
    			{
    				_nhanVienThongTinLuong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NhanVienThongTinLuong");
    				On_NhanVienThongTinLuong_Changed(oldValue, _nhanVienThongTinLuong);//\\
    			}
            }
        }
    	public static String NhanVienThongTinLuong_PropertyName { get { return "NhanVienThongTinLuong"; } }
        private Nullable<System.Guid> _nhanVienThongTinLuong;
        partial void On_NhanVienThongTinLuong_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NhanVienThongTinLuong_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NhanVienTrinhDo
        {
            get
            {
                return _nhanVienTrinhDo;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _nhanVienTrinhDo;
    			bool stopChanging = false;
                On_NhanVienTrinhDo_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NhanVienTrinhDo");
    			if(!stopChanging)
    			{
    				_nhanVienTrinhDo = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NhanVienTrinhDo");
    				On_NhanVienTrinhDo_Changed(oldValue, _nhanVienTrinhDo);//\\
    			}
            }
        }
    	public static String NhanVienTrinhDo_PropertyName { get { return "NhanVienTrinhDo"; } }
        private Nullable<System.Guid> _nhanVienTrinhDo;
        partial void On_NhanVienTrinhDo_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NhanVienTrinhDo_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> TinhTrang
        {
            get
            {
                return _tinhTrang;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _tinhTrang;
    			bool stopChanging = false;
                On_TinhTrang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TinhTrang");
    			if(!stopChanging)
    			{
    				_tinhTrang = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TinhTrang");
    				On_TinhTrang_Changed(oldValue, _tinhTrang);//\\
    			}
            }
        }
    	public static String TinhTrang_PropertyName { get { return "TinhTrang"; } }
        private Nullable<System.Guid> _tinhTrang;
        partial void On_TinhTrang_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_TinhTrang_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> ThongTinTruong
        {
            get
            {
                return _thongTinTruong;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _thongTinTruong;
    			bool stopChanging = false;
                On_ThongTinTruong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ThongTinTruong");
    			if(!stopChanging)
    			{
    				_thongTinTruong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ThongTinTruong");
    				On_ThongTinTruong_Changed(oldValue, _thongTinTruong);//\\
    			}
            }
        }
    	public static String ThongTinTruong_PropertyName { get { return "ThongTinTruong"; } }
        private Nullable<System.Guid> _thongTinTruong;
        partial void On_ThongTinTruong_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_ThongTinTruong_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> BangCapDaKiemDuyet
        {
            get
            {
                return _bangCapDaKiemDuyet;
            }
            set
            {
    			Nullable<bool> oldValue =  _bangCapDaKiemDuyet;
    			bool stopChanging = false;
                On_BangCapDaKiemDuyet_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BangCapDaKiemDuyet");
    			if(!stopChanging)
    			{
    				_bangCapDaKiemDuyet = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BangCapDaKiemDuyet");
    				On_BangCapDaKiemDuyet_Changed(oldValue, _bangCapDaKiemDuyet);//\\
    			}
            }
        }
    	public static String BangCapDaKiemDuyet_PropertyName { get { return "BangCapDaKiemDuyet"; } }
        private Nullable<bool> _bangCapDaKiemDuyet;
        partial void On_BangCapDaKiemDuyet_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_BangCapDaKiemDuyet_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> BoPhanTinhLuong
        {
            get
            {
                return _boPhanTinhLuong;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _boPhanTinhLuong;
    			bool stopChanging = false;
                On_BoPhanTinhLuong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BoPhanTinhLuong");
    			if(!stopChanging)
    			{
    				_boPhanTinhLuong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BoPhanTinhLuong");
    				On_BoPhanTinhLuong_Changed(oldValue, _boPhanTinhLuong);//\\
    			}
            }
        }
    	public static String BoPhanTinhLuong_PropertyName { get { return "BoPhanTinhLuong"; } }
        private Nullable<System.Guid> _boPhanTinhLuong;
        partial void On_BoPhanTinhLuong_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_BoPhanTinhLuong_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayNghiViec
        {
            get
            {
                return _ngayNghiViec;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayNghiViec;
    			bool stopChanging = false;
                On_NgayNghiViec_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayNghiViec");
    			if(!stopChanging)
    			{
    				_ngayNghiViec = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayNghiViec");
    				On_NgayNghiViec_Changed(oldValue, _ngayNghiViec);//\\
    			}
            }
        }
    	public static String NgayNghiViec_PropertyName { get { return "NgayNghiViec"; } }
        private Nullable<System.DateTime> _ngayNghiViec;
        partial void On_NgayNghiViec_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayNghiViec_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> LaDangVien
        {
            get
            {
                return _laDangVien;
            }
            set
            {
    			Nullable<bool> oldValue =  _laDangVien;
    			bool stopChanging = false;
                On_LaDangVien_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("LaDangVien");
    			if(!stopChanging)
    			{
    				_laDangVien = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("LaDangVien");
    				On_LaDangVien_Changed(oldValue, _laDangVien);//\\
    			}
            }
        }
    	public static String LaDangVien_PropertyName { get { return "LaDangVien"; } }
        private Nullable<bool> _laDangVien;
        partial void On_LaDangVien_Changing(Nullable<bool> currentValue, ref Nullable<bool> newValue, ref bool stopChanging);
        partial void On_LaDangVien_Changed(Nullable<bool> oldValue, Nullable<bool> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayVaoNganhNganHang
        {
            get
            {
                return _ngayVaoNganhNganHang;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayVaoNganhNganHang;
    			bool stopChanging = false;
                On_NgayVaoNganhNganHang_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayVaoNganhNganHang");
    			if(!stopChanging)
    			{
    				_ngayVaoNganhNganHang = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayVaoNganhNganHang");
    				On_NgayVaoNganhNganHang_Changed(oldValue, _ngayVaoNganhNganHang);//\\
    			}
            }
        }
    	public static String NgayVaoNganhNganHang_PropertyName { get { return "NgayVaoNganhNganHang"; } }
        private Nullable<System.DateTime> _ngayVaoNganhNganHang;
        partial void On_NgayVaoNganhNganHang_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayVaoNganhNganHang_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> BoPhanCu
        {
            get
            {
                return _boPhanCu;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _boPhanCu;
    			bool stopChanging = false;
                On_BoPhanCu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("BoPhanCu");
    			if(!stopChanging)
    			{
    				_boPhanCu = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("BoPhanCu");
    				On_BoPhanCu_Changed(oldValue, _boPhanCu);//\\
    			}
            }
        }
    	public static String BoPhanCu_PropertyName { get { return "BoPhanCu"; } }
        private Nullable<System.Guid> _boPhanCu;
        partial void On_BoPhanCu_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_BoPhanCu_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> SoThangKhongTinhPhep
        {
            get
            {
                return _soThangKhongTinhPhep;
            }
            set
            {
    			Nullable<decimal> oldValue =  _soThangKhongTinhPhep;
    			bool stopChanging = false;
                On_SoThangKhongTinhPhep_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoThangKhongTinhPhep");
    			if(!stopChanging)
    			{
    				_soThangKhongTinhPhep = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("SoThangKhongTinhPhep");
    				On_SoThangKhongTinhPhep_Changed(oldValue, _soThangKhongTinhPhep);//\\
    			}
            }
        }
    	public static String SoThangKhongTinhPhep_PropertyName { get { return "SoThangKhongTinhPhep"; } }
        private Nullable<decimal> _soThangKhongTinhPhep;
        partial void On_SoThangKhongTinhPhep_Changing(Nullable<decimal> currentValue, ref Nullable<decimal> newValue, ref bool stopChanging);
        partial void On_SoThangKhongTinhPhep_Changed(Nullable<decimal> oldValue, Nullable<decimal> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_BoPhan", "BoPhan")]
        public BoPhan BoPhan1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhan", "BoPhan").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_BoPhan1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhan", "BoPhan").Value = value;
    				On_BoPhan1_Changed(this.BoPhan1);//\\//
    			}
    	    }
        }
    	public static String BoPhan1_ReferencePropertyName { get { return "BoPhan1"; } }
    	partial void On_BoPhan1_Changing(ref BoPhan newValue, ref bool stopChanging);
    	partial void On_BoPhan1_Changed(BoPhan currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoPhan> BoPhan1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhan", "BoPhan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhan", "BoPhan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_TinhTrang", "TinhTrang")]
        public TinhTrang TinhTrang1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhTrang>("ERPModel.FK_NhanVien_TinhTrang", "TinhTrang").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_TinhTrang1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhTrang>("ERPModel.FK_NhanVien_TinhTrang", "TinhTrang").Value = value;
    				On_TinhTrang1_Changed(this.TinhTrang1);//\\//
    			}
    	    }
        }
    	public static String TinhTrang1_ReferencePropertyName { get { return "TinhTrang1"; } }
    	partial void On_TinhTrang1_Changing(ref TinhTrang newValue, ref bool stopChanging);
    	partial void On_TinhTrang1_Changed(TinhTrang currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TinhTrang> TinhTrang1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TinhTrang>("ERPModel.FK_NhanVien_TinhTrang", "TinhTrang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TinhTrang>("ERPModel.FK_NhanVien_TinhTrang", "TinhTrang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_BoPhanTinhLuong", "BoPhan")]
        public BoPhan BoPhan2
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhanTinhLuong", "BoPhan").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_BoPhan2_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhanTinhLuong", "BoPhan").Value = value;
    				On_BoPhan2_Changed(this.BoPhan2);//\\//
    			}
    	    }
        }
    	public static String BoPhan2_ReferencePropertyName { get { return "BoPhan2"; } }
    	partial void On_BoPhan2_Changing(ref BoPhan newValue, ref bool stopChanging);
    	partial void On_BoPhan2_Changed(BoPhan currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoPhan> BoPhan2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhanTinhLuong", "BoPhan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhanTinhLuong", "BoPhan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_ThongTinNhanVien_Oid", "ThongTinNhanVien")]
        public ThongTinNhanVien ThongTinNhanVien
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_ThongTinNhanVien_Oid", "ThongTinNhanVien").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_ThongTinNhanVien_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_ThongTinNhanVien_Oid", "ThongTinNhanVien").Value = value;
    				On_ThongTinNhanVien_Changed(this.ThongTinNhanVien);//\\//
    			}
    	    }
        }
    	public static String ThongTinNhanVien_ReferencePropertyName { get { return "ThongTinNhanVien"; } }
    	partial void On_ThongTinNhanVien_Changing(ref ThongTinNhanVien newValue, ref bool stopChanging);
    	partial void On_ThongTinNhanVien_Changed(ThongTinNhanVien currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThongTinNhanVien> ThongTinNhanVienReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThongTinNhanVien>("ERPModel.FK_ThongTinNhanVien_Oid", "ThongTinNhanVien");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ThongTinNhanVien>("ERPModel.FK_ThongTinNhanVien_Oid", "ThongTinNhanVien", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_BoPhanCu", "BoPhan")]
        public BoPhan BoPhan21
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhanCu", "BoPhan").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_BoPhan21_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhanCu", "BoPhan").Value = value;
    				On_BoPhan21_Changed(this.BoPhan21);//\\//
    			}
    	    }
        }
    	public static String BoPhan21_ReferencePropertyName { get { return "BoPhan21"; } }
    	partial void On_BoPhan21_Changing(ref BoPhan newValue, ref bool stopChanging);
    	partial void On_BoPhan21_Changed(BoPhan currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoPhan> BoPhan21Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhanCu", "BoPhan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoPhan>("ERPModel.FK_NhanVien_BoPhanCu", "BoPhan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_TaiKhoanNganHang_NhanVien", "TaiKhoanNganHang")]
        public EntityCollection<TaiKhoanNganHang> TaiKhoanNganHangs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaiKhoanNganHang>("ERPModel.FK_TaiKhoanNganHang_NhanVien", "TaiKhoanNganHang");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_TaiKhoanNganHangs_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaiKhoanNganHang>("ERPModel.FK_TaiKhoanNganHang_NhanVien", "TaiKhoanNganHang", value);
    					On_TaiKhoanNganHangs_Changed(this.TaiKhoanNganHangs);//\\//
    				}
    			}
            }
        }
    	public static String TaiKhoanNganHangs_EntityCollectionPropertyName { get { return "TaiKhoanNganHangs"; } }
    	partial void On_TaiKhoanNganHangs_Changing(ref EntityCollection<TaiKhoanNganHang> newValue, ref bool stopChanging);
    	partial void On_TaiKhoanNganHangs_Changed(EntityCollection<TaiKhoanNganHang> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_Oid", "HoSo")]
        public HoSo HoSo
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_NhanVien_Oid", "HoSo").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_HoSo_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_NhanVien_Oid", "HoSo").Value = value;
    				On_HoSo_Changed(this.HoSo);//\\//
    			}
    	    }
        }
    	public static String HoSo_ReferencePropertyName { get { return "HoSo"; } }
    	partial void On_HoSo_Changing(ref HoSo newValue, ref bool stopChanging);
    	partial void On_HoSo_Changed(HoSo currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HoSo> HoSoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HoSo>("ERPModel.FK_NhanVien_Oid", "HoSo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HoSo>("ERPModel.FK_NhanVien_Oid", "HoSo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_GiangVienThinhGiang_Oid", "GiangVienThinhGiang")]
        public GiangVienThinhGiang GiangVienThinhGiang
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiangVienThinhGiang>("ERPModel.FK_GiangVienThinhGiang_Oid", "GiangVienThinhGiang").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_GiangVienThinhGiang_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiangVienThinhGiang>("ERPModel.FK_GiangVienThinhGiang_Oid", "GiangVienThinhGiang").Value = value;
    				On_GiangVienThinhGiang_Changed(this.GiangVienThinhGiang);//\\//
    			}
    	    }
        }
    	public static String GiangVienThinhGiang_ReferencePropertyName { get { return "GiangVienThinhGiang"; } }
    	partial void On_GiangVienThinhGiang_Changing(ref GiangVienThinhGiang newValue, ref bool stopChanging);
    	partial void On_GiangVienThinhGiang_Changed(GiangVienThinhGiang currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GiangVienThinhGiang> GiangVienThinhGiangReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GiangVienThinhGiang>("ERPModel.FK_GiangVienThinhGiang_Oid", "GiangVienThinhGiang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GiangVienThinhGiang>("ERPModel.FK_GiangVienThinhGiang_Oid", "GiangVienThinhGiang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong")]
        public NhanVienThongTinLuong NhanVienThongTinLuong1
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienThongTinLuong>("ERPModel.FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_NhanVienThongTinLuong1_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienThongTinLuong>("ERPModel.FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong").Value = value;
    				On_NhanVienThongTinLuong1_Changed(this.NhanVienThongTinLuong1);//\\//
    			}
    	    }
        }
    	public static String NhanVienThongTinLuong1_ReferencePropertyName { get { return "NhanVienThongTinLuong1"; } }
    	partial void On_NhanVienThongTinLuong1_Changing(ref NhanVienThongTinLuong newValue, ref bool stopChanging);
    	partial void On_NhanVienThongTinLuong1_Changed(NhanVienThongTinLuong currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NhanVienThongTinLuong> NhanVienThongTinLuong1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVienThongTinLuong>("ERPModel.FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NhanVienThongTinLuong>("ERPModel.FK_NhanVien_NhanVienThongTinLuong", "NhanVienThongTinLuong", value);
                }
            }
        }

        #endregion

    }
}
