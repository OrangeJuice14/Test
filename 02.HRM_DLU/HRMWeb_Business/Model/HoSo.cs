//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//	  Code duoc tao boi SERVERERP\tai luc 05:27:29 ngay 19/04/2017
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
//using System.Data.EntityClient;
using System.Data.Entity.Core.EntityClient;
//using System.Data.Objects;
using System.Data.Entity.Core.Objects;
//using System.Data.Objects.DataClasses;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;


namespace HRMWeb_Business.Model
{
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="HoSo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HoSo : ERP_Core.BaseEntityObject//EntityObject
    {
    	static HoSo()
    	{
    
    		AfterStaticConstruction();
        }
        static partial void AfterStaticConstruction();
    
    	public HoSo()
    	{
    
    		this.AfterConstruction();
        }
        partial void AfterConstruction();
    
        #region Factory Method
    
        /// <summary>
        /// Create a new HoSo object.
        /// </summary>
        /// <param name="oid">Initial value of the Oid property.</param>
        public static HoSo CreateHoSo(System.Guid oid)
        {
            HoSo hoSo = new HoSo();
            hoSo.Oid = oid;
            return hoSo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Oid
        {
            get
            {
                return _oid;
            }
            set
            {
                if (_oid != value)
                {
        			System.Guid oldValue =  _oid;
        			bool stopChanging = false;
                    On_Oid_Changing(oldValue, ref value, ref stopChanging);
                    ReportPropertyChanging("Oid");
        			if(!stopChanging)
        			{
        				_oid = StructuralObject.SetValidValue(value);
        				ReportPropertyChanged("Oid");
        				On_Oid_Changed(oldValue, _oid);//\\
        			}
                }
            }
        }
    	public static String Oid_PropertyName { get { return "Oid"; } }
        private System.Guid _oid;
        partial void On_Oid_Changing(System.Guid currentValue, ref System.Guid newValue, ref bool stopChanging);
        partial void On_Oid_Changed(System.Guid oldValue, System.Guid currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> STT
        {
            get
            {
                return _sTT;
            }
            set
            {
    			Nullable<int> oldValue =  _sTT;
    			bool stopChanging = false;
                On_STT_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("STT");
    			if(!stopChanging)
    			{
    				_sTT = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("STT");
    				On_STT_Changed(oldValue, _sTT);//\\
    			}
            }
        }
    	public static String STT_PropertyName { get { return "STT"; } }
        private Nullable<int> _sTT;
        partial void On_STT_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_STT_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MaQuanLy
        {
            get
            {
                return _maQuanLy;
            }
            set
            {
    			string oldValue =  _maQuanLy;
    			bool stopChanging = false;
                On_MaQuanLy_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("MaQuanLy");
    			if(!stopChanging)
    			{
    				_maQuanLy = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("MaQuanLy");
    				On_MaQuanLy_Changed(oldValue, _maQuanLy);//\\
    			}
            }
        }
    	public static String MaQuanLy_PropertyName { get { return "MaQuanLy"; } }
        private string _maQuanLy;
        partial void On_MaQuanLy_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_MaQuanLy_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Ho
        {
            get
            {
                return _ho;
            }
            set
            {
    			string oldValue =  _ho;
    			bool stopChanging = false;
                On_Ho_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Ho");
    			if(!stopChanging)
    			{
    				_ho = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Ho");
    				On_Ho_Changed(oldValue, _ho);//\\
    			}
            }
        }
    	public static String Ho_PropertyName { get { return "Ho"; } }
        private string _ho;
        partial void On_Ho_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Ho_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Ten
        {
            get
            {
                return _ten;
            }
            set
            {
    			string oldValue =  _ten;
    			bool stopChanging = false;
                On_Ten_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Ten");
    			if(!stopChanging)
    			{
    				_ten = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Ten");
    				On_Ten_Changed(oldValue, _ten);//\\
    			}
            }
        }
    	public static String Ten_PropertyName { get { return "Ten"; } }
        private string _ten;
        partial void On_Ten_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Ten_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string HoTen
        {
            get
            {
                return _hoTen;
            }
            set
            {
    			string oldValue =  _hoTen;
    			bool stopChanging = false;
                On_HoTen_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HoTen");
    			if(!stopChanging)
    			{
    				_hoTen = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("HoTen");
    				On_HoTen_Changed(oldValue, _hoTen);//\\
    			}
            }
        }
    	public static String HoTen_PropertyName { get { return "HoTen"; } }
        private string _hoTen;
        partial void On_HoTen_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_HoTen_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TenGoiKhac
        {
            get
            {
                return _tenGoiKhac;
            }
            set
            {
    			string oldValue =  _tenGoiKhac;
    			bool stopChanging = false;
                On_TenGoiKhac_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TenGoiKhac");
    			if(!stopChanging)
    			{
    				_tenGoiKhac = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("TenGoiKhac");
    				On_TenGoiKhac_Changed(oldValue, _tenGoiKhac);//\\
    			}
            }
        }
    	public static String TenGoiKhac_PropertyName { get { return "TenGoiKhac"; } }
        private string _tenGoiKhac;
        partial void On_TenGoiKhac_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_TenGoiKhac_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgaySinh
        {
            get
            {
                return _ngaySinh;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngaySinh;
    			bool stopChanging = false;
                On_NgaySinh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgaySinh");
    			if(!stopChanging)
    			{
    				_ngaySinh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgaySinh");
    				On_NgaySinh_Changed(oldValue, _ngaySinh);//\\
    			}
            }
        }
    	public static String NgaySinh_PropertyName { get { return "NgaySinh"; } }
        private Nullable<System.DateTime> _ngaySinh;
        partial void On_NgaySinh_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgaySinh_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NoiSinh
        {
            get
            {
                return _noiSinh;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _noiSinh;
    			bool stopChanging = false;
                On_NoiSinh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NoiSinh");
    			if(!stopChanging)
    			{
    				_noiSinh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NoiSinh");
    				On_NoiSinh_Changed(oldValue, _noiSinh);//\\
    			}
            }
        }
    	public static String NoiSinh_PropertyName { get { return "NoiSinh"; } }
        private Nullable<System.Guid> _noiSinh;
        partial void On_NoiSinh_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NoiSinh_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> GioiTinh
        {
            get
            {
                return _gioiTinh;
            }
            set
            {
    			Nullable<byte> oldValue =  _gioiTinh;
    			bool stopChanging = false;
                On_GioiTinh_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GioiTinh");
    			if(!stopChanging)
    			{
    				_gioiTinh = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GioiTinh");
    				On_GioiTinh_Changed(oldValue, _gioiTinh);//\\
    			}
            }
        }
    	public static String GioiTinh_PropertyName { get { return "GioiTinh"; } }
        private Nullable<byte> _gioiTinh;
        partial void On_GioiTinh_Changing(Nullable<byte> currentValue, ref Nullable<byte> newValue, ref bool stopChanging);
        partial void On_GioiTinh_Changed(Nullable<byte> oldValue, Nullable<byte> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CMND
        {
            get
            {
                return _cMND;
            }
            set
            {
    			string oldValue =  _cMND;
    			bool stopChanging = false;
                On_CMND_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("CMND");
    			if(!stopChanging)
    			{
    				_cMND = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("CMND");
    				On_CMND_Changed(oldValue, _cMND);//\\
    			}
            }
        }
    	public static String CMND_PropertyName { get { return "CMND"; } }
        private string _cMND;
        partial void On_CMND_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_CMND_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayCap
        {
            get
            {
                return _ngayCap;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayCap;
    			bool stopChanging = false;
                On_NgayCap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayCap");
    			if(!stopChanging)
    			{
    				_ngayCap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayCap");
    				On_NgayCap_Changed(oldValue, _ngayCap);//\\
    			}
            }
        }
    	public static String NgayCap_PropertyName { get { return "NgayCap"; } }
        private Nullable<System.DateTime> _ngayCap;
        partial void On_NgayCap_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayCap_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NoiCap
        {
            get
            {
                return _noiCap;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _noiCap;
    			bool stopChanging = false;
                On_NoiCap_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NoiCap");
    			if(!stopChanging)
    			{
    				_noiCap = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NoiCap");
    				On_NoiCap_Changed(oldValue, _noiCap);//\\
    			}
            }
        }
    	public static String NoiCap_PropertyName { get { return "NoiCap"; } }
        private Nullable<System.Guid> _noiCap;
        partial void On_NoiCap_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NoiCap_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SoHoChieu
        {
            get
            {
                return _soHoChieu;
            }
            set
            {
    			string oldValue =  _soHoChieu;
    			bool stopChanging = false;
                On_SoHoChieu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("SoHoChieu");
    			if(!stopChanging)
    			{
    				_soHoChieu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("SoHoChieu");
    				On_SoHoChieu_Changed(oldValue, _soHoChieu);//\\
    			}
            }
        }
    	public static String SoHoChieu_PropertyName { get { return "SoHoChieu"; } }
        private string _soHoChieu;
        partial void On_SoHoChieu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_SoHoChieu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayCapHoChieu
        {
            get
            {
                return _ngayCapHoChieu;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayCapHoChieu;
    			bool stopChanging = false;
                On_NgayCapHoChieu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayCapHoChieu");
    			if(!stopChanging)
    			{
    				_ngayCapHoChieu = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayCapHoChieu");
    				On_NgayCapHoChieu_Changed(oldValue, _ngayCapHoChieu);//\\
    			}
            }
        }
    	public static String NgayCapHoChieu_PropertyName { get { return "NgayCapHoChieu"; } }
        private Nullable<System.DateTime> _ngayCapHoChieu;
        partial void On_NgayCapHoChieu_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayCapHoChieu_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string NoiCapHoChieu
        {
            get
            {
                return _noiCapHoChieu;
            }
            set
            {
    			string oldValue =  _noiCapHoChieu;
    			bool stopChanging = false;
                On_NoiCapHoChieu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NoiCapHoChieu");
    			if(!stopChanging)
    			{
    				_noiCapHoChieu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("NoiCapHoChieu");
    				On_NoiCapHoChieu_Changed(oldValue, _noiCapHoChieu);//\\
    			}
            }
        }
    	public static String NoiCapHoChieu_PropertyName { get { return "NoiCapHoChieu"; } }
        private string _noiCapHoChieu;
        partial void On_NoiCapHoChieu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_NoiCapHoChieu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NgayHetHan
        {
            get
            {
                return _ngayHetHan;
            }
            set
            {
    			Nullable<System.DateTime> oldValue =  _ngayHetHan;
    			bool stopChanging = false;
                On_NgayHetHan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NgayHetHan");
    			if(!stopChanging)
    			{
    				_ngayHetHan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NgayHetHan");
    				On_NgayHetHan_Changed(oldValue, _ngayHetHan);//\\
    			}
            }
        }
    	public static String NgayHetHan_PropertyName { get { return "NgayHetHan"; } }
        private Nullable<System.DateTime> _ngayHetHan;
        partial void On_NgayHetHan_Changing(Nullable<System.DateTime> currentValue, ref Nullable<System.DateTime> newValue, ref bool stopChanging);
        partial void On_NgayHetHan_Changed(Nullable<System.DateTime> oldValue, Nullable<System.DateTime> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> QueQuan
        {
            get
            {
                return _queQuan;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _queQuan;
    			bool stopChanging = false;
                On_QueQuan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("QueQuan");
    			if(!stopChanging)
    			{
    				_queQuan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("QueQuan");
    				On_QueQuan_Changed(oldValue, _queQuan);//\\
    			}
            }
        }
    	public static String QueQuan_PropertyName { get { return "QueQuan"; } }
        private Nullable<System.Guid> _queQuan;
        partial void On_QueQuan_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_QueQuan_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> DiaChiThuongTru
        {
            get
            {
                return _diaChiThuongTru;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _diaChiThuongTru;
    			bool stopChanging = false;
                On_DiaChiThuongTru_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DiaChiThuongTru");
    			if(!stopChanging)
    			{
    				_diaChiThuongTru = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DiaChiThuongTru");
    				On_DiaChiThuongTru_Changed(oldValue, _diaChiThuongTru);//\\
    			}
            }
        }
    	public static String DiaChiThuongTru_PropertyName { get { return "DiaChiThuongTru"; } }
        private Nullable<System.Guid> _diaChiThuongTru;
        partial void On_DiaChiThuongTru_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_DiaChiThuongTru_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> NoiOHienNay
        {
            get
            {
                return _noiOHienNay;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _noiOHienNay;
    			bool stopChanging = false;
                On_NoiOHienNay_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("NoiOHienNay");
    			if(!stopChanging)
    			{
    				_noiOHienNay = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("NoiOHienNay");
    				On_NoiOHienNay_Changed(oldValue, _noiOHienNay);//\\
    			}
            }
        }
    	public static String NoiOHienNay_PropertyName { get { return "NoiOHienNay"; } }
        private Nullable<System.Guid> _noiOHienNay;
        partial void On_NoiOHienNay_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_NoiOHienNay_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _email;
            }
            set
            {
    			string oldValue =  _email;
    			bool stopChanging = false;
                On_Email_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("Email");
    			if(!stopChanging)
    			{
    				_email = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("Email");
    				On_Email_Changed(oldValue, _email);//\\
    			}
            }
        }
    	public static String Email_PropertyName { get { return "Email"; } }
        private string _email;
        partial void On_Email_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_Email_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DienThoaiDiDong
        {
            get
            {
                return _dienThoaiDiDong;
            }
            set
            {
    			string oldValue =  _dienThoaiDiDong;
    			bool stopChanging = false;
                On_DienThoaiDiDong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DienThoaiDiDong");
    			if(!stopChanging)
    			{
    				_dienThoaiDiDong = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DienThoaiDiDong");
    				On_DienThoaiDiDong_Changed(oldValue, _dienThoaiDiDong);//\\
    			}
            }
        }
    	public static String DienThoaiDiDong_PropertyName { get { return "DienThoaiDiDong"; } }
        private string _dienThoaiDiDong;
        partial void On_DienThoaiDiDong_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DienThoaiDiDong_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DienThoaiNhaRieng
        {
            get
            {
                return _dienThoaiNhaRieng;
            }
            set
            {
    			string oldValue =  _dienThoaiNhaRieng;
    			bool stopChanging = false;
                On_DienThoaiNhaRieng_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DienThoaiNhaRieng");
    			if(!stopChanging)
    			{
    				_dienThoaiNhaRieng = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("DienThoaiNhaRieng");
    				On_DienThoaiNhaRieng_Changed(oldValue, _dienThoaiNhaRieng);//\\
    			}
            }
        }
    	public static String DienThoaiNhaRieng_PropertyName { get { return "DienThoaiNhaRieng"; } }
        private string _dienThoaiNhaRieng;
        partial void On_DienThoaiNhaRieng_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_DienThoaiNhaRieng_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> TinhTrangHonNhan
        {
            get
            {
                return _tinhTrangHonNhan;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _tinhTrangHonNhan;
    			bool stopChanging = false;
                On_TinhTrangHonNhan_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TinhTrangHonNhan");
    			if(!stopChanging)
    			{
    				_tinhTrangHonNhan = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TinhTrangHonNhan");
    				On_TinhTrangHonNhan_Changed(oldValue, _tinhTrangHonNhan);//\\
    			}
            }
        }
    	public static String TinhTrangHonNhan_PropertyName { get { return "TinhTrangHonNhan"; } }
        private Nullable<System.Guid> _tinhTrangHonNhan;
        partial void On_TinhTrangHonNhan_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_TinhTrangHonNhan_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> DanToc
        {
            get
            {
                return _danToc;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _danToc;
    			bool stopChanging = false;
                On_DanToc_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("DanToc");
    			if(!stopChanging)
    			{
    				_danToc = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("DanToc");
    				On_DanToc_Changed(oldValue, _danToc);//\\
    			}
            }
        }
    	public static String DanToc_PropertyName { get { return "DanToc"; } }
        private Nullable<System.Guid> _danToc;
        partial void On_DanToc_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_DanToc_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> TonGiao
        {
            get
            {
                return _tonGiao;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _tonGiao;
    			bool stopChanging = false;
                On_TonGiao_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("TonGiao");
    			if(!stopChanging)
    			{
    				_tonGiao = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("TonGiao");
    				On_TonGiao_Changed(oldValue, _tonGiao);//\\
    			}
            }
        }
    	public static String TonGiao_PropertyName { get { return "TonGiao"; } }
        private Nullable<System.Guid> _tonGiao;
        partial void On_TonGiao_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_TonGiao_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> QuocTich
        {
            get
            {
                return _quocTich;
            }
            set
            {
    			Nullable<System.Guid> oldValue =  _quocTich;
    			bool stopChanging = false;
                On_QuocTich_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("QuocTich");
    			if(!stopChanging)
    			{
    				_quocTich = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("QuocTich");
    				On_QuocTich_Changed(oldValue, _quocTich);//\\
    			}
            }
        }
    	public static String QuocTich_PropertyName { get { return "QuocTich"; } }
        private Nullable<System.Guid> _quocTich;
        partial void On_QuocTich_Changing(Nullable<System.Guid> currentValue, ref Nullable<System.Guid> newValue, ref bool stopChanging);
        partial void On_QuocTich_Changed(Nullable<System.Guid> oldValue, Nullable<System.Guid> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> HinhThucTuyenDung
        {
            get
            {
                return _hinhThucTuyenDung;
            }
            set
            {
    			Nullable<byte> oldValue =  _hinhThucTuyenDung;
    			bool stopChanging = false;
                On_HinhThucTuyenDung_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("HinhThucTuyenDung");
    			if(!stopChanging)
    			{
    				_hinhThucTuyenDung = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("HinhThucTuyenDung");
    				On_HinhThucTuyenDung_Changed(oldValue, _hinhThucTuyenDung);//\\
    			}
            }
        }
    	public static String HinhThucTuyenDung_PropertyName { get { return "HinhThucTuyenDung"; } }
        private Nullable<byte> _hinhThucTuyenDung;
        partial void On_HinhThucTuyenDung_Changing(Nullable<byte> currentValue, ref Nullable<byte> newValue, ref bool stopChanging);
        partial void On_HinhThucTuyenDung_Changed(Nullable<byte> oldValue, Nullable<byte> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string GhiChu
        {
            get
            {
                return _ghiChu;
            }
            set
            {
    			string oldValue =  _ghiChu;
    			bool stopChanging = false;
                On_GhiChu_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GhiChu");
    			if(!stopChanging)
    			{
    				_ghiChu = StructuralObject.SetValidValue(value, true);
    				ReportPropertyChanged("GhiChu");
    				On_GhiChu_Changed(oldValue, _ghiChu);//\\
    			}
            }
        }
    	public static String GhiChu_PropertyName { get { return "GhiChu"; } }
        private string _ghiChu;
        partial void On_GhiChu_Changing(string currentValue, ref string newValue, ref bool stopChanging);
        partial void On_GhiChu_Changed(string oldValue, string currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> IDNhanSu_ChamCong
        {
            get
            {
                return _iDNhanSu_ChamCong;
            }
            set
            {
    			Nullable<int> oldValue =  _iDNhanSu_ChamCong;
    			bool stopChanging = false;
                On_IDNhanSu_ChamCong_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("IDNhanSu_ChamCong");
    			if(!stopChanging)
    			{
    				_iDNhanSu_ChamCong = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("IDNhanSu_ChamCong");
    				On_IDNhanSu_ChamCong_Changed(oldValue, _iDNhanSu_ChamCong);//\\
    			}
            }
        }
    	public static String IDNhanSu_ChamCong_PropertyName { get { return "IDNhanSu_ChamCong"; } }
        private Nullable<int> _iDNhanSu_ChamCong;
        partial void On_IDNhanSu_ChamCong_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_IDNhanSu_ChamCong_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OptimisticLockField
        {
            get
            {
                return _optimisticLockField;
            }
            set
            {
    			Nullable<int> oldValue =  _optimisticLockField;
    			bool stopChanging = false;
                On_OptimisticLockField_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("OptimisticLockField");
    			if(!stopChanging)
    			{
    				_optimisticLockField = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("OptimisticLockField");
    				On_OptimisticLockField_Changed(oldValue, _optimisticLockField);//\\
    			}
            }
        }
    	public static String OptimisticLockField_PropertyName { get { return "OptimisticLockField"; } }
        private Nullable<int> _optimisticLockField;
        partial void On_OptimisticLockField_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_OptimisticLockField_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GCRecord
        {
            get
            {
                return _gCRecord;
            }
            set
            {
    			Nullable<int> oldValue =  _gCRecord;
    			bool stopChanging = false;
                On_GCRecord_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("GCRecord");
    			if(!stopChanging)
    			{
    				_gCRecord = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("GCRecord");
    				On_GCRecord_Changed(oldValue, _gCRecord);//\\
    			}
            }
        }
    	public static String GCRecord_PropertyName { get { return "GCRecord"; } }
        private Nullable<int> _gCRecord;
        partial void On_GCRecord_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_GCRecord_Changed(Nullable<int> oldValue, Nullable<int> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ObjectType
        {
            get
            {
                return _objectType;
            }
            set
            {
    			Nullable<int> oldValue =  _objectType;
    			bool stopChanging = false;
                On_ObjectType_Changing(oldValue, ref value, ref stopChanging);
                ReportPropertyChanging("ObjectType");
    			if(!stopChanging)
    			{
    				_objectType = StructuralObject.SetValidValue(value);
    				ReportPropertyChanged("ObjectType");
    				On_ObjectType_Changed(oldValue, _objectType);//\\
    			}
            }
        }
    	public static String ObjectType_PropertyName { get { return "ObjectType"; } }
        private Nullable<int> _objectType;
        partial void On_ObjectType_Changing(Nullable<int> currentValue, ref Nullable<int> newValue, ref bool stopChanging);
        partial void On_ObjectType_Changed(Nullable<int> oldValue, Nullable<int> currentValue);

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_KhaiBaoCongTac_HoSo", "CC_KhaiBaoCongTac")]
        public EntityCollection<CC_KhaiBaoCongTac> CC_KhaiBaoCongTac
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_KhaiBaoCongTac>("ERPModel.FK_CC_KhaiBaoCongTac_HoSo", "CC_KhaiBaoCongTac");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_KhaiBaoCongTac_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_KhaiBaoCongTac>("ERPModel.FK_CC_KhaiBaoCongTac_HoSo", "CC_KhaiBaoCongTac", value);
    					On_CC_KhaiBaoCongTac_Changed(this.CC_KhaiBaoCongTac);//\\//
    				}
    			}
            }
        }
    	public static String CC_KhaiBaoCongTac_EntityCollectionPropertyName { get { return "CC_KhaiBaoCongTac"; } }
    	partial void On_CC_KhaiBaoCongTac_Changing(ref EntityCollection<CC_KhaiBaoCongTac> newValue, ref bool stopChanging);
    	partial void On_CC_KhaiBaoCongTac_Changed(EntityCollection<CC_KhaiBaoCongTac> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_KhaiBaoCongTac_HoSo1", "CC_KhaiBaoCongTac")]
        public EntityCollection<CC_KhaiBaoCongTac> CC_KhaiBaoCongTac1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_KhaiBaoCongTac>("ERPModel.FK_CC_KhaiBaoCongTac_HoSo1", "CC_KhaiBaoCongTac");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_KhaiBaoCongTac1_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_KhaiBaoCongTac>("ERPModel.FK_CC_KhaiBaoCongTac_HoSo1", "CC_KhaiBaoCongTac", value);
    					On_CC_KhaiBaoCongTac1_Changed(this.CC_KhaiBaoCongTac1);//\\//
    				}
    			}
            }
        }
    	public static String CC_KhaiBaoCongTac1_EntityCollectionPropertyName { get { return "CC_KhaiBaoCongTac1"; } }
    	partial void On_CC_KhaiBaoCongTac1_Changing(ref EntityCollection<CC_KhaiBaoCongTac> newValue, ref bool stopChanging);
    	partial void On_CC_KhaiBaoCongTac1_Changed(EntityCollection<CC_KhaiBaoCongTac> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_GiayToHoSo_HoSo", "GiayToHoSo")]
        public EntityCollection<GiayToHoSo> GiayToHoSoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GiayToHoSo>("ERPModel.FK_GiayToHoSo_HoSo", "GiayToHoSo");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_GiayToHoSoes_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GiayToHoSo>("ERPModel.FK_GiayToHoSo_HoSo", "GiayToHoSo", value);
    					On_GiayToHoSoes_Changed(this.GiayToHoSoes);//\\//
    				}
    			}
            }
        }
    	public static String GiayToHoSoes_EntityCollectionPropertyName { get { return "GiayToHoSoes"; } }
    	partial void On_GiayToHoSoes_Changing(ref EntityCollection<GiayToHoSo> newValue, ref bool stopChanging);
    	partial void On_GiayToHoSoes_Changed(EntityCollection<GiayToHoSo> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_NhanVien_Oid", "NhanVien")]
        public NhanVien NhanVien
        {//test
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVien>("ERPModel.FK_NhanVien_Oid", "NhanVien").Value;
            }
            set
            {
    			bool stopChanging = false;
    			On_NhanVien_Changing(ref value, ref stopChanging);//\\//
    			if(!stopChanging)
    			{
    				((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVien>("ERPModel.FK_NhanVien_Oid", "NhanVien").Value = value;
    				On_NhanVien_Changed(this.NhanVien);//\\//
    			}
    	    }
        }
    	public static String NhanVien_ReferencePropertyName { get { return "NhanVien"; } }
    	partial void On_NhanVien_Changing(ref NhanVien newValue, ref bool stopChanging);
    	partial void On_NhanVien_Changed(NhanVien currentValue);
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NhanVien> NhanVienReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NhanVien>("ERPModel.FK_NhanVien_Oid", "NhanVien");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NhanVien>("ERPModel.FK_NhanVien_Oid", "NhanVien", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_WebUsers_HoSo", "WebUser")]
        public EntityCollection<WebUser> WebUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebUser>("ERPModel.FK_WebUsers_HoSo", "WebUser");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_WebUsers_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebUser>("ERPModel.FK_WebUsers_HoSo", "WebUser", value);
    					On_WebUsers_Changed(this.WebUsers);//\\//
    				}
    			}
            }
        }
    	public static String WebUsers_EntityCollectionPropertyName { get { return "WebUsers"; } }
    	partial void On_WebUsers_Changing(ref EntityCollection<WebUser> newValue, ref bool stopChanging);
    	partial void On_WebUsers_Changed(EntityCollection<WebUser> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_WebUsers_HoSoThinhGiang", "WebUser")]
        public EntityCollection<WebUser> WebUsers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebUser>("ERPModel.FK_WebUsers_HoSoThinhGiang", "WebUser");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_WebUsers1_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebUser>("ERPModel.FK_WebUsers_HoSoThinhGiang", "WebUser", value);
    					On_WebUsers1_Changed(this.WebUsers1);//\\//
    				}
    			}
            }
        }
    	public static String WebUsers1_EntityCollectionPropertyName { get { return "WebUsers1"; } }
    	partial void On_WebUsers1_Changing(ref EntityCollection<WebUser> newValue, ref bool stopChanging);
    	partial void On_WebUsers1_Changed(EntityCollection<WebUser> currentValue);
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_CC_ChamCongTheoNgay_HoSo", "CC_ChamCongTheoNgay")]
        public EntityCollection<CC_ChamCongTheoNgay> CC_ChamCongTheoNgay
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CC_ChamCongTheoNgay>("ERPModel.FK_CC_ChamCongTheoNgay_HoSo", "CC_ChamCongTheoNgay");
            }
            set
            {
                if ((value != null))
                {
    				bool stopChanging = false;
    				On_CC_ChamCongTheoNgay_Changing(ref value, ref stopChanging);//\\//
    				if(!stopChanging)
    				{
    					((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CC_ChamCongTheoNgay>("ERPModel.FK_CC_ChamCongTheoNgay_HoSo", "CC_ChamCongTheoNgay", value);
    					On_CC_ChamCongTheoNgay_Changed(this.CC_ChamCongTheoNgay);//\\//
    				}
    			}
            }
        }
    	public static String CC_ChamCongTheoNgay_EntityCollectionPropertyName { get { return "CC_ChamCongTheoNgay"; } }
    	partial void On_CC_ChamCongTheoNgay_Changing(ref EntityCollection<CC_ChamCongTheoNgay> newValue, ref bool stopChanging);
    	partial void On_CC_ChamCongTheoNgay_Changed(EntityCollection<CC_ChamCongTheoNgay> currentValue);

        #endregion

    }
}
